!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
A	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^impl<'de, 'a, A: ?Sized> MapAccess<'de> for &'a mut A$/;"	c
A	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^impl<'de, 'a, A: ?Sized> SeqAccess<'de> for &'a mut A$/;"	c
AMP_ESCAPE	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^static AMP_ESCAPE: &str = "&amp;";$/;"	v
Active	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Active,$/;"	e	enum:TableParseMode
Adjacent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    Adjacent { tag: String, content: String },$/;"	e	enum:TagType
Alignment	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub enum Alignment {$/;"	g
AlignmentIndex	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^struct AlignmentIndex(usize);$/;"	s
Allocations	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl<'a> Allocations<'a> {$/;"	c
Allocations	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl<'a> Index<AlignmentIndex> for Allocations<'a> {$/;"	c
Allocations	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl<'a> Index<CowIndex> for Allocations<'a> {$/;"	c
Allocations	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl<'a> Index<LinkIndex> for Allocations<'a> {$/;"	c
Allocations	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^struct Allocations<'a> {$/;"	s
ArcWeak	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for ArcWeak<T>$/;"	c
ArcWeak	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for ArcWeak<T>$/;"	c
Arguments	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<'a> Serialize for fmt::Arguments<'a> {$/;"	c
Array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    Array(Vec<Value<'a>>),$/;"	e	enum:E
Array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    Array {$/;"	e	enum:State
Array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    Array,$/;"	e	enum:Serializer::Category
Array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    Array(Array),$/;"	e	enum:Value
Array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^pub type Array = Vec<Value>;$/;"	t
ArrayInPlaceVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct ArrayInPlaceVisitor<'a, A: 'a>(&'a mut A);$/;"	s
ArrayMixedType	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    ArrayMixedType,$/;"	e	enum:Error
ArraySettings	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl ArraySettings {$/;"	c
ArraySettings	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^struct ArraySettings {$/;"	s
ArrayState	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^enum ArrayState {$/;"	g
ArrayVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for ArrayVisitor<[T; 0]> {$/;"	c
ArrayVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<A> ArrayVisitor<A> {$/;"	c
ArrayVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct ArrayVisitor<A> {$/;"	s
Attr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^impl<'c, T> Attr<'c, T> {$/;"	c
Attr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^struct Attr<'c, T> {$/;"	s
Autolink	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Autolink,$/;"	e	enum:LinkType
B	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    impl<A, B> Pair for (A, B) {$/;"	c	module:private
BEGIN_TAGS	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    static BEGIN_TAGS: &[&[u8]; 3] = &[b"pre", b"style", b"script"];$/;"	v	function:get_html_end_tag
BTreeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, K, V, E> IntoDeserializer<'de, E> for BTreeMap<K, V>$/;"	c
BTreeSet	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, T, E> IntoDeserializer<'de, E> for BTreeSet<T>$/;"	c
Block	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^    Block(TokenStream),$/;"	e	enum:Fragment
BlockQuote	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    BlockQuote,$/;"	e	enum:ItemBody
BlockQuote	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    BlockQuote,$/;"	e	enum:Tag
Body	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    Body,$/;"	e	enum:TableState
Bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Bool(bool),$/;"	e	enum:Unexpected
Bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Bool(bool),$/;"	e	enum:content::Content
Bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        Bool(bool),$/;"	e	enum:content::Content
BoolAttr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^impl<'c> BoolAttr<'c> {$/;"	c
BoolAttr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^struct BoolAttr<'c>(Attr<'c, ()>);$/;"	s
BoolVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Visitor<'de> for BoolVisitor {$/;"	c
BoolVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct BoolVisitor;$/;"	s
Boolean	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    Boolean,$/;"	e	enum:Unsupported
Boolean	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    Boolean(bool),$/;"	e	enum:E
Boolean	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    Boolean(bool),$/;"	e	enum:Value
Borrowed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    Borrowed(&'a str),$/;"	e	enum:CowStr
Borrowed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'de, E> IdentifierDeserializer<'de, E> for Borrowed<'de, [u8]>$/;"	c
Borrowed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'de, E> IdentifierDeserializer<'de, E> for Borrowed<'de, str>$/;"	c
Borrowed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^pub struct Borrowed<'de, T: 'de + ?Sized>(pub &'de T);$/;"	s
Borrowed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    Borrowed(BTreeSet<syn::Lifetime>),$/;"	e	enum:BorrowedLifetimes
BorrowedBytesDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> BorrowedBytesDeserializer<'de, E> {$/;"	c
BorrowedBytesDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> Debug for BorrowedBytesDeserializer<'de, E> {$/;"	c
BorrowedBytesDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> Deserializer<'de> for BorrowedBytesDeserializer<'de, E>$/;"	c
BorrowedBytesDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct BorrowedBytesDeserializer<'de, E> {$/;"	s
BorrowedLifetimes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^enum BorrowedLifetimes {$/;"	g
BorrowedLifetimes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^impl BorrowedLifetimes {$/;"	c
BorrowedLifetimes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    impl Parse for BorrowedLifetimes {$/;"	c	function:parse_lit_into_lifetimes
BorrowedLifetimes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    struct BorrowedLifetimes(Punctuated<syn::Lifetime, Token![+]>);$/;"	s	function:parse_lit_into_lifetimes
BorrowedStrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> BorrowedStrDeserializer<'de, E> {$/;"	c
BorrowedStrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> Debug for BorrowedStrDeserializer<'de, E> {$/;"	c
BorrowedStrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> de::EnumAccess<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct BorrowedStrDeserializer<'de, E> {$/;"	s
BorrowedStrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'de, E> Deserializer<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^pub struct BorrowedStrDeserializer<'de, E> {$/;"	s
Bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Bound<T>$/;"	c
Bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T> Serialize for Bound<T>$/;"	c
BoundVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        impl<'de, T> Visitor<'de> for BoundVisitor<T>$/;"	c	function:deserialize
BoundVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        struct BoundVisitor<T>(PhantomData<Bound<T>>);$/;"	s	function:deserialize
Boxed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    Boxed(Box<str>),$/;"	e	enum:CowStr
BreakAtWith	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    BreakAtWith(usize, T),$/;"	e	enum:LoopInstruction
BrokenLink	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub struct BrokenLink<'a> {$/;"	s
BrokenLinkCallback	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub type BrokenLinkCallback<'a> =$/;"	t
ByteArray	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    ByteArray,$/;"	e	enum:Unsupported
ByteBuf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        ByteBuf(Vec<u8>),$/;"	e	enum:content::Content
Bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Bytes(&'a [u8]),$/;"	e	enum:Unexpected
Bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Bytes(&'de [u8]),$/;"	e	enum:content::Content
Bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        Bytes(Vec<u8>),$/;"	e	enum:content::Content
BytesDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'a, E> BytesDeserializer<'a, E> {$/;"	c
BytesDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'a, E> Debug for BytesDeserializer<'a, E> {$/;"	c
BytesDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, 'a, E> Deserializer<'de> for BytesDeserializer<'a, E>$/;"	c
BytesDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct BytesDeserializer<'a, E> {$/;"	s
BytesVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'a> Visitor<'a> for BytesVisitor {$/;"	c
BytesVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct BytesVisitor;$/;"	s
CStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for CStr {$/;"	c
CString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Deserialize<'de> for CString {$/;"	c
CString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for CString {$/;"	c
CStringVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Visitor<'de> for CStringVisitor {$/;"	c
CStringVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct CStringVisitor;$/;"	s
CamelCase	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    CamelCase,$/;"	e	enum:RenameRule
Categorize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<E: ser::Error> ser::SerializeMap for Categorize<E> {$/;"	c	implementation:Serializer
Categorize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<E: ser::Error> ser::SerializeSeq for Categorize<E> {$/;"	c	implementation:Serializer
Categorize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<E: ser::Error> ser::SerializeStruct for Categorize<E> {$/;"	c	implementation:Serializer
Categorize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<E: ser::Error> ser::SerializeTuple for Categorize<E> {$/;"	c	implementation:Serializer
Categorize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<E: ser::Error> ser::SerializeTupleStruct for Categorize<E> {$/;"	c	implementation:Serializer
Categorize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<E: ser::Error> ser::SerializeTupleVariant for Categorize<E> {$/;"	c	implementation:Serializer
Categorize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<E: ser::Error> ser::Serializer for Categorize<E> {$/;"	c	implementation:Serializer
Categorize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<E> Categorize<E> {$/;"	c	implementation:Serializer
Categorize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^struct Categorize<E>(marker::PhantomData<E>);$/;"	s	implementation:Serializer
Category	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^enum Category {$/;"	g	implementation:Serializer
Cell	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Cell<T>$/;"	c
Cell	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T> Serialize for Cell<T>$/;"	c
Center	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Center,$/;"	e	enum:Alignment
Char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Char(char),$/;"	e	enum:Unexpected
Char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Char(char),$/;"	e	enum:content::Content
Char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        Char(char),$/;"	e	enum:content::Content
Char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    Char,$/;"	e	enum:Unsupported
CharVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Visitor<'de> for CharVisitor {$/;"	c
CharVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct CharVisitor;$/;"	s
Code	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Code(CowIndex),$/;"	e	enum:ItemBody
Code	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Code(CowStr<'a>),$/;"	e	enum:Event
CodeBlock	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    CodeBlock(CodeBlockKind<'a>),$/;"	e	enum:Tag
CodeBlockKind	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl<'a> CodeBlockKind<'a> {$/;"	c
CodeBlockKind	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub enum CodeBlockKind<'a> {$/;"	g
CodeDelims	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl CodeDelims {$/;"	c
CodeDelims	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^struct CodeDelims {$/;"	s
Collapsed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Collapsed(Option<TreeIndex>),$/;"	e	enum:RefScan
Collapsed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Collapsed,$/;"	e	enum:LinkType
CollapsedUnknown	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    CollapsedUnknown,$/;"	e	enum:LinkType
Colon	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    Colon,$/;"	e	enum:Token
Comma	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    Comma,$/;"	e	enum:Token
Comment	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    Comment(&'a str),$/;"	e	enum:Token
Container	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^impl<'a> Container<'a> {$/;"	c
Container	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^pub struct Container<'a> {$/;"	s
Container	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^impl Container {$/;"	c
Container	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^pub struct Container {$/;"	s
Content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Content(Content<'de>),$/;"	e	enum:content::TagOrContent
Content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Content,$/;"	e	enum:content::TagContentOtherField
Content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Content,$/;"	e	enum:content::TagOrContentField
Content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de> Content<'de> {$/;"	c	module:content
Content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de> Deserialize<'de> for Content<'de> {$/;"	c	module:content
Content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub enum Content<'de> {$/;"	g	module:content
Content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl Serialize for Content {$/;"	c	module:content
Content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    pub enum Content {$/;"	g	module:content
ContentDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> ContentDeserializer<'de, E> {$/;"	c	module:content
ContentDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> Deserializer<'de> for ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> de::IntoDeserializer<'de, E> for ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub struct ContentDeserializer<'de, E> {$/;"	s	module:content
ContentRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'a, 'de, E> ContentRefDeserializer<'a, 'de, E> {$/;"	c	module:content
ContentRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'a, 'de, E> ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, 'a, E> Deserializer<'de> for ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, 'a, E> de::IntoDeserializer<'de, E> for ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub struct ContentRefDeserializer<'a, 'de: 'a, E> {$/;"	s	module:content
ContentSerializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<E> ContentSerializer<E> {$/;"	c	module:content
ContentSerializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<E> Serializer for ContentSerializer<E>$/;"	c	module:content
ContentSerializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    pub struct ContentSerializer<E> {$/;"	s	module:content
ContentVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de> ContentVisitor<'de> {$/;"	c	module:content
ContentVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de> Visitor<'de> for ContentVisitor<'de> {$/;"	c	module:content
ContentVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    struct ContentVisitor<'de> {$/;"	s	module:content
ContinueAndSkip	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    ContinueAndSkip(usize),$/;"	e	enum:LoopInstruction
Cow	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, 'a, T: ?Sized> Deserialize<'de> for Cow<'a, T>$/;"	c
Cow	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for Cow<'a, str>$/;"	c
CowBytesVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'a> Visitor<'a> for CowBytesVisitor {$/;"	c	function:borrow_cow_bytes
CowBytesVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    struct CowBytesVisitor;$/;"	s	function:borrow_cow_bytes
CowIndex	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^struct CowIndex(usize);$/;"	s
CowStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> AsRef<str> for CowStr<'a> {$/;"	c
CowStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> Borrow<str> for CowStr<'a> {$/;"	c
CowStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> CowStr<'a> {$/;"	c
CowStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> Deref for CowStr<'a> {$/;"	c
CowStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> From<&'a str> for CowStr<'a> {$/;"	c
CowStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> From<String> for CowStr<'a> {$/;"	c
CowStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> From<char> for CowStr<'a> {$/;"	c
CowStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> Hash for CowStr<'a> {$/;"	c
CowStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> fmt::Display for CowStr<'a> {$/;"	c
CowStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> std::clone::Clone for CowStr<'a> {$/;"	c
CowStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> std::cmp::PartialEq<CowStr<'a>> for CowStr<'a> {$/;"	c
CowStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^pub enum CowStr<'a> {$/;"	g
CowStrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'a, E> Clone for CowStrDeserializer<'a, E> {$/;"	c
CowStrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'a, E> Debug for CowStrDeserializer<'a, E> {$/;"	c
CowStrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, 'a, E> de::Deserializer<'de> for CowStrDeserializer<'a, E>$/;"	c
CowStrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for CowStrDeserializer<'a, E>$/;"	c
CowStrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct CowStrDeserializer<'a, E> {$/;"	s
CowStrVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'a> Visitor<'a> for CowStrVisitor {$/;"	c	function:borrow_cow_str
CowStrVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    struct CowStrVisitor;$/;"	s	function:borrow_cow_str
CrlfFold	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^impl<'a> Iterator for CrlfFold<'a> {$/;"	c
CrlfFold	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^struct CrlfFold<'a> {$/;"	s
Ctxt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ctxt.rs	/^impl Ctxt {$/;"	c
Ctxt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ctxt.rs	/^impl Drop for Ctxt {$/;"	c
Ctxt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ctxt.rs	/^pub struct Ctxt {$/;"	s
Custom	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    Custom { hours: i8, minutes: u8 },$/;"	e	enum:Offset
Custom	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    Custom,$/;"	e	enum:ErrorKind
Custom	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    Custom(String),$/;"	e	enum:Error
Data	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^impl<'a> Data<'a> {$/;"	c
Data	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^pub enum Data<'a> {$/;"	g
Date	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^impl fmt::Display for Date {$/;"	c
Date	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^struct Date {$/;"	s
DateInvalid	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    DateInvalid,$/;"	e	enum:ErrorKind
DateInvalid	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    DateInvalid,$/;"	e	enum:Error
DateStrEmitter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<'a, 'b> ser::Serializer for DateStrEmitter<'a, 'b> {$/;"	c	implementation:Serializer
DateStrEmitter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^struct DateStrEmitter<'a, 'b>(&'b mut Serializer<'a>);$/;"	s	implementation:Serializer
Datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^impl FromStr for Datetime {$/;"	c
Datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^impl fmt::Debug for Datetime {$/;"	c
Datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^impl fmt::Display for Datetime {$/;"	c
Datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^impl ser::Serialize for Datetime {$/;"	c
Datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^impl<'de> de::Deserialize<'de> for Datetime {$/;"	c
Datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^pub struct Datetime {$/;"	s
Datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    Datetime(&'a str),$/;"	e	enum:E
Datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    Datetime(&'b mut Serializer<'a>),$/;"	e	enum:SerializeTable
Datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    Datetime(Datetime),$/;"	e	enum:Value
DatetimeDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de> de::MapAccess<'de> for DatetimeDeserializer<'de> {$/;"	c
DatetimeDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct DatetimeDeserializer<'a> {$/;"	s
DatetimeFieldDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de> de::Deserializer<'de> for DatetimeFieldDeserializer {$/;"	c
DatetimeFieldDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct DatetimeFieldDeserializer;$/;"	s
DatetimeFromString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^impl<'de> de::Deserialize<'de> for DatetimeFromString {$/;"	c
DatetimeFromString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^pub struct DatetimeFromString {$/;"	s
DatetimeKey	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^impl<'de> de::Deserialize<'de> for DatetimeKey {$/;"	c
DatetimeKey	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^struct DatetimeKey;$/;"	s
DatetimeOrTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<'a, 'de> de::DeserializeSeed<'de> for DatetimeOrTable<'a> {$/;"	c
DatetimeOrTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<'a, 'de> de::Visitor<'de> for DatetimeOrTable<'a> {$/;"	c
DatetimeOrTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^struct DatetimeOrTable<'a> {$/;"	s
DatetimeParseError	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^impl error::Error for DatetimeParseError {}$/;"	c
DatetimeParseError	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^impl fmt::Display for DatetimeParseError {$/;"	c
DatetimeParseError	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^pub struct DatetimeParseError {$/;"	s
DatetimeVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for DatetimeVisitor {$/;"	c	method:Datetime::deserialize
DatetimeVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^        struct DatetimeVisitor;$/;"	s	method:Datetime::deserialize
DeImplGenerics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^impl<'a> DeImplGenerics<'a> {$/;"	c
DeImplGenerics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^impl<'a> ToTokens for DeImplGenerics<'a> {$/;"	c
DeImplGenerics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^struct DeImplGenerics<'a>(&'a Parameters);$/;"	s
DeTypeGenerics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^impl<'a> DeTypeGenerics<'a> {$/;"	c
DeTypeGenerics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^impl<'a> ToTokens for DeTypeGenerics<'a> {$/;"	c
DeTypeGenerics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^struct DeTypeGenerics<'a>(&'a Parameters);$/;"	s
Default	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    Default,$/;"	e	enum:Default
Default	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^impl Default {$/;"	c
Default	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^pub enum Default {$/;"	g
Derive	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/mod.rs	/^pub enum Derive {$/;"	g
Deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Deserialize<'de> for ! {$/;"	c
Deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Deserialize<'de> for () {$/;"	c
Deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub trait Deserialize<'de>: Sized {$/;"	i
Deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/mod.rs	/^    Deserialize,$/;"	e	enum:Derive
DeserializeOwned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub trait DeserializeOwned: for<'de> Deserialize<'de> {}$/;"	i
DeserializeSeed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub trait DeserializeSeed<'de>: Sized {$/;"	i
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	t	interface:IntoDeserializer
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub trait Deserializer<'de>: Sized {$/;"	i
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Deserializer = BytesDeserializer<'a, E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Deserializer = CowStrDeserializer<'a, E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Deserializer = MapDeserializer<'de, <Self as IntoIterator>::IntoIter, E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Deserializer = NeverDeserializer<E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Deserializer = SeqDeserializer<<Self as IntoIterator>::IntoIter, E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Deserializer = StringDeserializer<E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Deserializer = U32Deserializer<E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Deserializer = UnitDeserializer<E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Deserializer = Self;$/;"	t	module:content
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    type Deserializer = <u64 as IntoDeserializer<'de, E>>::Deserializer;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    type Deserializer = BorrowedBytesDeserializer<'de, E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    type Deserializer = BorrowedStrDeserializer<'de, E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    type Deserializer = BytesDeserializer<'a, E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	t
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	t	interface:IdentifierDeserializer
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Deserializer = MapVisitor<'de, 'b>;$/;"	t	implementation:MapVisitor
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Deserializer = Self;$/;"	t	implementation:Deserializer
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Deserializer = Self;$/;"	t	implementation:StrDeserializer
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Deserializer = ValueDeserializer<'de>;$/;"	t	implementation:Value
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'a> Deserializer<'a> {$/;"	c
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de, 'b> de::Deserializer<'de> for &'b mut Deserializer<'de> {$/;"	c
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de, 'b> de::IntoDeserializer<'de, Error> for &'b mut Deserializer<'de> {$/;"	c
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^pub struct Deserializer<'a> {$/;"	s
Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Deserializer = Self;$/;"	t	implementation:Value
Disabled	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Disabled,$/;"	e	enum:LinkStackTy
Disabled	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Disabled,$/;"	e	enum:TableParseMode
DottedKeyInvalidType	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    DottedKeyInvalidType,$/;"	e	enum:ErrorKind
DottedTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    DottedTable(Vec<TablePair<'a>>),$/;"	e	enum:E
DottedTableDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de> de::EnumAccess<'de> for DottedTableDeserializer<'de> {$/;"	c
DottedTableDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct DottedTableDeserializer<'a> {$/;"	s
DuplicateTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    DuplicateTable(String),$/;"	e	enum:ErrorKind
Duration	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Deserialize<'de> for Duration {$/;"	c
Duration	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for Duration {$/;"	c
DurationVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        impl<'de> Visitor<'de> for DurationVisitor {$/;"	c	method:Duration::deserialize
DurationVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        impl<'de> Visitor<'de> for DurationVisitor {$/;"	c	method:SystemTime::deserialize
DurationVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s	method:Duration::deserialize
DurationVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s	method:SystemTime::deserialize
E	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^enum E<'a> {$/;"	g
E	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'a> E<'a> {$/;"	c
Email	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Email,$/;"	e	enum:LinkType
Emphasis	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Emphasis,$/;"	e	enum:ItemBody
Emphasis	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Emphasis,$/;"	e	enum:Tag
EmptyTableKey	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    EmptyTableKey,$/;"	e	enum:ErrorKind
EmptyTableKey	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    EmptyTableKey(usize),$/;"	e	enum:Error
Encode	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/utf8.rs	/^impl Encode {$/;"	c
Encode	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/utf8.rs	/^pub struct Encode {$/;"	s
End	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    End(Tag<'a>),$/;"	e	enum:Event
End	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        End,$/;"	e	enum:range::Field
End	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    End,$/;"	e	enum:State
Entry	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl<'a> Entry<'a> {$/;"	c
Entry	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^pub enum Entry<'a> {$/;"	g
Enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Enum,$/;"	e	enum:Unexpected
Enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    Enum,$/;"	e	enum:Unsupported
Enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    Enum(Vec<Variant<'a>>),$/;"	e	enum:Data
EnumAccess	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub trait EnumAccess<'de>: Sized {$/;"	i
EnumDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> EnumDeserializer<'de, E>$/;"	c	module:content
EnumDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> de::EnumAccess<'de> for EnumDeserializer<'de, E>$/;"	c	module:content
EnumDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub struct EnumDeserializer<'de, E>$/;"	s	module:content
EnumRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, 'a, E> de::EnumAccess<'de> for EnumRefDeserializer<'a, 'de, E>$/;"	c	module:content
EnumRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    struct EnumRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
Equals	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    Equals,$/;"	e	enum:Token
Err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            Err,$/;"	e	enum:deserialize::Field
Err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    type Err = DatetimeParseError;$/;"	t	implementation:Datetime
Err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Err = crate::de::Error;$/;"	t	implementation:Value
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    type Error = StringTooLongError;$/;"	t	implementation:InlineStr
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    type Error = A::Error;$/;"	t
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:Deserializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:EnumAccess
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:MapAccess
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:SeqAccess
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:VariantAccess
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        type Error = A::Error;$/;"	t	module:private
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        type Error = E;$/;"	t	module:private
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Error = A::Error;$/;"	t
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Error = E;$/;"	t
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl Debug for Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl Display for Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl de::Error for Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl error::Error for Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl ser::Error for Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct Error {$/;"	s
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Error = E;$/;"	t	function:missing_field
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Error = E;$/;"	t	module:content
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    type Error = E;$/;"	t
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/doc.rs	/^impl Display for Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/doc.rs	/^impl error::Error for Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/doc.rs	/^impl ser::Error for Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/doc.rs	/^pub struct Error;$/;"	s
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        type Error = E;$/;"	t	module:content
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        type Error = M::Error;$/;"	t	module:content
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type Error = M::Error;$/;"	t
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type Error = S::Error;$/;"	t
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    type Error = fmt::Error;$/;"	t	implementation:Formatter
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^impl Error for fmt::Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^    type Error = Error;$/;"	t
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeMap
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeSeq
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeStruct
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeStructVariant
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTuple
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTupleStruct
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTupleVariant
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:Serializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/std_error.rs	/^pub trait Error: Debug + Display {$/;"	i
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Error = Error;$/;"	t
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Error = Error;$/;"	t	implementation:DatetimeDeserializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Error = Error;$/;"	t	implementation:DatetimeFieldDeserializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Error = Error;$/;"	t	implementation:Deserializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Error = Error;$/;"	t	implementation:DottedTableDeserializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Error = Error;$/;"	t	implementation:InlineTableDeserializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Error = Error;$/;"	t	implementation:MapVisitor
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Error = Error;$/;"	t	implementation:StrDeserializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Error = Error;$/;"	t	implementation:TableEnumDeserializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Error = Error;$/;"	t	implementation:ValueDeserializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl de::Error for Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl error::Error for Error {}$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl std::convert::From<Error> for std::io::Error {$/;"	c
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^pub struct Error {$/;"	s
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type Error = E;$/;"	t	implementation:Serializer::Categorize
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type Error = Error;$/;"	t	implementation:Serializer::DateStrEmitter
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type Error = Error;$/;"	t	implementation:Serializer::SerializeSeq
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type Error = Error;$/;"	t	implementation:Serializer::SerializeTable
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type Error = Error;$/;"	t	implementation:Serializer::Serializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type Error = Error;$/;"	t	implementation:Serializer::StringExtractor
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl error::Error for Error {}$/;"	c	implementation:Serializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl fmt::Display for Error {$/;"	c	implementation:Serializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl ser::Error for Error {$/;"	c	implementation:Serializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^pub enum Error {$/;"	g
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^pub enum Error {$/;"	g
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Error = crate::de::Error;$/;"	t	implementation:MapDeserializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Error = crate::de::Error;$/;"	t	implementation:SeqDeserializer
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Error = crate::de::Error;$/;"	t	implementation:Value
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Error = crate::ser::Error;$/;"	t	implementation:SerializeMap
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Error = crate::ser::Error;$/;"	t	implementation:SerializeVec
Error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Error = crate::ser::Error;$/;"	t	implementation:Serializer
ErrorImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^type ErrorImpl = ();$/;"	t
ErrorImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^type ErrorImpl = Box<str>;$/;"	t
ErrorInner	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct ErrorInner {$/;"	s
ErrorKind	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^enum ErrorKind {$/;"	g
Event	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub enum Event<'a> {$/;"	g
Excluded	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            Excluded,$/;"	e	enum:deserialize::Field
Expected	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub trait Expected {$/;"	i
ExpectedEmptyTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    ExpectedEmptyTable,$/;"	e	enum:ErrorKind
ExpectedInMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl Expected for ExpectedInMap {$/;"	c
ExpectedInMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^struct ExpectedInMap(usize);$/;"	s
ExpectedInSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl Expected for ExpectedInSeq {$/;"	c
ExpectedInSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^struct ExpectedInSeq(usize);$/;"	s
ExpectedTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    ExpectedTuple(usize),$/;"	e	enum:ErrorKind
ExpectedTupleIndex	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    ExpectedTupleIndex {$/;"	e	enum:ErrorKind
Expr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^    Expr(TokenStream),$/;"	e	enum:Fragment
Expr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^impl ToTokens for Expr {$/;"	c
Expr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^pub struct Expr(pub Fragment);$/;"	s
External	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    External,$/;"	e	enum:TagType
ExternallyTagged	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    ExternallyTagged {$/;"	e	enum:StructVariant
ExternallyTagged	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    ExternallyTagged {$/;"	e	enum:TupleVariant
F32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        F32(f32),$/;"	e	enum:content::Content
F32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        F32(f32),$/;"	e	enum:content::Content
F64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        F64(f64),$/;"	e	enum:content::Content
F64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        F64(f64),$/;"	e	enum:content::Content
FIELDS	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^        static FIELDS: [&str; 1] = [FIELD];$/;"	v	method:Datetime::deserialize
FIELDS	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^        static FIELDS: [&str; 3] = [START, END, VALUE];$/;"	v	function:deserialize
Failed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Failed,$/;"	e	enum:RefScan
Fenced	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Fenced(CowStr<'a>),$/;"	e	enum:CodeBlockKind
FencedCodeBlock	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    FencedCodeBlock(CowIndex),$/;"	e	enum:ItemBody
Field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        enum Field {$/;"	g	function:deserialize
Field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        enum Field {$/;"	g	method:Duration::deserialize
Field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        enum Field {$/;"	g	method:SystemTime::deserialize
Field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	function:deserialize
Field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	method:Duration::deserialize
Field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	method:SystemTime::deserialize
Field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    enum Field {$/;"	g	module:range
Field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    impl<'de> Deserialize<'de> for Field {$/;"	c	module:range
Field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^pub struct Field<'a> {$/;"	s
Field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    Field,$/;"	e	enum:Identifier
Field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^impl Field {$/;"	c
Field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^pub struct Field {$/;"	s
FieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:Duration::deserialize::Field::deserialize
FieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:SystemTime::deserialize::Field::deserialize
FieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:deserialize::Field::deserialize
FieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:Duration::deserialize::Field::deserialize
FieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:SystemTime::deserialize::Field::deserialize
FieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:deserialize::Field::deserialize
FieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:range::Field::deserialize
FieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            struct FieldVisitor;$/;"	s	method:range::Field::deserialize
FieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for FieldVisitor {$/;"	c	method:DatetimeKey::deserialize
FieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^        struct FieldVisitor;$/;"	s	method:DatetimeKey::deserialize
FindTyParams	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^    impl<'ast> FindTyParams<'ast> {$/;"	c	function:with_bound
FindTyParams	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^    struct FindTyParams<'ast> {$/;"	s	function:with_bound
First	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        type First = A;$/;"	t	implementation:private::B
First	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        type First;$/;"	t	interface:private::Pair
First	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub type First<T> = <T as Pair>::First;$/;"	t	module:private
FirstPass	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl<'a, 'b> FirstPass<'a, 'b> {$/;"	c
FirstPass	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^struct FirstPass<'a, 'b> {$/;"	s
FlatInternallyTaggedAccess	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatInternallyTaggedAccess<'a, 'de, E>$/;"	c
FlatInternallyTaggedAccess	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^pub struct FlatInternallyTaggedAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapAccess	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'a, 'de, E> FlatMapAccess<'a, 'de, E> {$/;"	c
FlatMapAccess	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatMapAccess<'a, 'de, E>$/;"	c
FlatMapAccess	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^pub struct FlatMapAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'a, 'de, E> Deserializer<'de> for FlatMapDeserializer<'a, 'de, E>$/;"	c
FlatMapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'a, 'de, E> FlatMapDeserializer<'a, 'de, E>$/;"	c
FlatMapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^pub struct FlatMapDeserializer<'a, 'de: 'a, E>($/;"	s
FlatMapSerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^impl<'a, M> ser::SerializeMap for FlatMapSerializeMap<'a, M>$/;"	c
FlatMapSerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^pub struct FlatMapSerializeMap<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^impl<'a, M> ser::SerializeStruct for FlatMapSerializeStruct<'a, M>$/;"	c
FlatMapSerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^pub struct FlatMapSerializeStruct<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStructVariantAsMapValue	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^impl<'a, M> FlatMapSerializeStructVariantAsMapValue<'a, M>$/;"	c
FlatMapSerializeStructVariantAsMapValue	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^impl<'a, M> ser::SerializeStructVariant for FlatMapSerializeStructVariantAsMapValue<'a, M>$/;"	c
FlatMapSerializeStructVariantAsMapValue	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^pub struct FlatMapSerializeStructVariantAsMapValue<'a, M: 'a> {$/;"	s
FlatMapSerializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^impl<'a, M> FlatMapSerializer<'a, M>$/;"	c
FlatMapSerializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^impl<'a, M> Serializer for FlatMapSerializer<'a, M>$/;"	c
FlatMapSerializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^pub struct FlatMapSerializer<'a, M: 'a>(pub &'a mut M);$/;"	s
FlatStructAccess	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'a, 'de, E> FlatStructAccess<'a, 'de, E> {$/;"	c
FlatStructAccess	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatStructAccess<'a, 'de, E>$/;"	c
FlatStructAccess	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^pub struct FlatStructAccess<'a, 'de: 'a, E> {$/;"	s
Float	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Float(f64),$/;"	e	enum:Unexpected
Float	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    Float,$/;"	e	enum:Unsupported
Float	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    Float(f64),$/;"	e	enum:E
Float	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    Float(f64),$/;"	e	enum:Value
Footnote	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/linklabel.rs	/^    Footnote(CowStr<'a>),$/;"	e	enum:ReferenceLabel
FootnoteDefinition	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    FootnoteDefinition(CowIndex),$/;"	e	enum:ItemBody
FootnoteDefinition	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    FootnoteDefinition(CowStr<'a>),$/;"	e	enum:Tag
FootnoteReference	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    FootnoteReference(CowIndex),$/;"	e	enum:ItemBody
FootnoteReference	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    FootnoteReference(CowStr<'a>),$/;"	e	enum:Event
Formatter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^impl<'a, 'b> Serializer for &'a mut fmt::Formatter<'b> {$/;"	c
Fragment	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^impl AsRef<TokenStream> for Fragment {$/;"	c
Fragment	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^pub enum Fragment {$/;"	g
FromStrVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for FromStrVisitor<T>$/;"	c
FromStrVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<T> FromStrVisitor<T> {$/;"	c
FromStrVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct FromStrVisitor<T> {$/;"	s
HEX_CHARS	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^static HEX_CHARS: &[u8] = b"0123456789ABCDEF";$/;"	v
HREF_SAFE	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^static HREF_SAFE: [u8; 128] = [$/;"	v
HTML_ESCAPES	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^static HTML_ESCAPES: [&'static str; 5] = ["", "&quot;", "&amp;", "&lt;", "&gt;"];$/;"	v
HTML_ESCAPE_TABLE	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^static HTML_ESCAPE_TABLE: [u8; 256] = create_html_escape_table();$/;"	v
HardBreak	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    HardBreak,$/;"	e	enum:Event
HardBreak	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    HardBreak,$/;"	e	enum:ItemBody
HashMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, K, V, S, E> IntoDeserializer<'de, E> for HashMap<K, V, S>$/;"	c
HashSet	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, T, S, E> IntoDeserializer<'de, E> for HashSet<T, S>$/;"	c
Head	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    Head,$/;"	e	enum:TableState
Header	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'a> Header<'a> {$/;"	c
Header	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct Header<'a> {$/;"	s
Heading	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Heading(u32), \/\/ heading level$/;"	e	enum:ItemBody
Heading	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Heading(u32),$/;"	e	enum:Tag
Html	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Html(CowStr<'a>),$/;"	e	enum:Event
Html	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Html,$/;"	e	enum:ItemBody
HtmlScanGuard	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub(crate) struct HtmlScanGuard {$/;"	s
HtmlWriter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^impl<'a, I, W> HtmlWriter<'a, I, W>$/;"	c
HtmlWriter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^struct HtmlWriter<'a, I, W> {$/;"	s
I16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        I16(i16),$/;"	e	enum:content::Content
I16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        I16(i16),$/;"	e	enum:content::Content
I32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        I32(i32),$/;"	e	enum:content::Content
I32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        I32(i32),$/;"	e	enum:content::Content
I64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        I64(i64),$/;"	e	enum:content::Content
I64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        I64(i64),$/;"	e	enum:content::Content
I8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        I8(i8),$/;"	e	enum:content::Content
I8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        I8(i8),$/;"	e	enum:content::Content
Ident	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/symbol.rs	/^impl PartialEq<Symbol> for Ident {$/;"	c
Ident	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/symbol.rs	/^impl<'a> PartialEq<Symbol> for &'a Ident {$/;"	c
Identifier	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^impl Identifier {$/;"	c
Identifier	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^pub enum Identifier {$/;"	g
IdentifierDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^pub trait IdentifierDeserializer<'de, E: Error> {$/;"	i
IgnoredAny	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^impl<'de> Deserialize<'de> for IgnoredAny {$/;"	c
IgnoredAny	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^impl<'de> Visitor<'de> for IgnoredAny {$/;"	c
IgnoredAny	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^pub struct IgnoredAny;$/;"	s
Image	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Image(LinkIndex),$/;"	e	enum:ItemBody
Image	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Image(LinkType, CowStr<'a>, CowStr<'a>),$/;"	e	enum:Tag
Image	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Image,$/;"	e	enum:LinkStackTy
Impossible	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^impl<Ok, Error> SerializeMap for Impossible<Ok, Error>$/;"	c
Impossible	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^impl<Ok, Error> SerializeSeq for Impossible<Ok, Error>$/;"	c
Impossible	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^impl<Ok, Error> SerializeStruct for Impossible<Ok, Error>$/;"	c
Impossible	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^impl<Ok, Error> SerializeStructVariant for Impossible<Ok, Error>$/;"	c
Impossible	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTuple for Impossible<Ok, Error>$/;"	c
Impossible	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTupleStruct for Impossible<Ok, Error>$/;"	c
Impossible	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTupleVariant for Impossible<Ok, Error>$/;"	c
Impossible	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^pub struct Impossible<Ok, Error> {$/;"	s
InPlaceImplGenerics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^impl<'a> ToTokens for InPlaceImplGenerics<'a> {$/;"	c
InPlaceImplGenerics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^struct InPlaceImplGenerics<'a>(&'a Parameters);$/;"	s
InPlaceSeed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/seed.rs	/^impl<'a, 'de, T> DeserializeSeed<'de> for InPlaceSeed<'a, T>$/;"	c
InPlaceSeed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/seed.rs	/^pub struct InPlaceSeed<'a, T: 'a>(pub &'a mut T);$/;"	s
InPlaceTypeGenerics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^impl<'a> ToTokens for InPlaceTypeGenerics<'a> {$/;"	c
InPlaceTypeGenerics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^struct InPlaceTypeGenerics<'a>(&'a Parameters);$/;"	s
Included	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            Included,$/;"	e	enum:deserialize::Field
IndentCodeBlock	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    IndentCodeBlock,$/;"	e	enum:ItemBody
Indented	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Indented,$/;"	e	enum:CodeBlockKind
Index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^pub trait Index: Sealed {$/;"	i
Inline	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Inline,$/;"	e	enum:LinkType
InlineEl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^struct InlineEl {$/;"	s
InlineStack	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl InlineStack {$/;"	c
InlineStack	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^struct InlineStack {$/;"	s
InlineStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl Deref for InlineStr {$/;"	c
InlineStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl From<char> for InlineStr {$/;"	c
InlineStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl Hash for InlineStr {$/;"	c
InlineStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl TryFrom<&str> for InlineStr {$/;"	c
InlineStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl fmt::Display for InlineStr {$/;"	c
InlineStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> AsRef<str> for InlineStr {$/;"	c
InlineStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^impl<'a> std::cmp::PartialEq<InlineStr> for InlineStr {$/;"	c
InlineStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^pub struct InlineStr {$/;"	s
InlineTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    InlineTable(Vec<TablePair<'a>>),$/;"	e	enum:E
InlineTableDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de> de::EnumAccess<'de> for InlineTableDeserializer<'de> {$/;"	c
InlineTableDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de> de::MapAccess<'de> for InlineTableDeserializer<'de> {$/;"	c
InlineTableDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct InlineTableDeserializer<'a> {$/;"	s
Inlined	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    Inlined(InlineStr),$/;"	e	enum:CowStr
Input	/home/sammi/rust/md_puppy/src/command_line.rs	/^impl Input {$/;"	c
Input	/home/sammi/rust/md_puppy/src/command_line.rs	/^pub struct Input {$/;"	s
Integer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    Integer,$/;"	e	enum:Unsupported
Integer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    Integer(i64),$/;"	e	enum:E
Integer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    Integer(i64),$/;"	e	enum:Value
Internal	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    Internal { tag: String },$/;"	e	enum:TagType
InternallyTagged	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    InternallyTagged {$/;"	e	enum:StructVariant
InternallyTaggedUnitVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'a> InternallyTaggedUnitVisitor<'a> {$/;"	c	module:content
InternallyTaggedUnitVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, 'a> Visitor<'de> for InternallyTaggedUnitVisitor<'a> {$/;"	c	module:content
InternallyTaggedUnitVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub struct InternallyTaggedUnitVisitor<'a> {$/;"	s	module:content
IntoDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub trait IntoDeserializer<'de, E: Error = value::Error> {$/;"	i
IntoDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for !$/;"	c
IntoDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for ()$/;"	c
IntoIter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    type IntoIter = IntoIter;$/;"	t	implementation:Map
IntoIter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    type IntoIter = Iter<'a>;$/;"	t	implementation:Map
IntoIter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    type IntoIter = IterMut<'a>;$/;"	t	implementation:Map
IntoIter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^pub struct IntoIter {$/;"	s
IntoIterImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type IntoIterImpl = btree_map::IntoIter<String, Value>;$/;"	t
IntoIterImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type IntoIterImpl = indexmap::map::IntoIter<String, Value>;$/;"	t
InvalidCharInString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    InvalidCharInString(char),$/;"	e	enum:ErrorKind
InvalidCharInString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    InvalidCharInString(usize, char),$/;"	e	enum:Error
InvalidEscape	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    InvalidEscape(char),$/;"	e	enum:ErrorKind
InvalidEscape	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    InvalidEscape(usize, char),$/;"	e	enum:Error
InvalidEscapeValue	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    InvalidEscapeValue(u32),$/;"	e	enum:ErrorKind
InvalidEscapeValue	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    InvalidEscapeValue(usize, u32),$/;"	e	enum:Error
InvalidHexEscape	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    InvalidHexEscape(char),$/;"	e	enum:ErrorKind
InvalidHexEscape	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    InvalidHexEscape(usize, char),$/;"	e	enum:Error
IpAddr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Deserialize<'de> for net::IpAddr {$/;"	c
IpAddr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for net::IpAddr {$/;"	c
Ipv4Addr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for net::Ipv4Addr {$/;"	c
Ipv6Addr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for net::Ipv6Addr {$/;"	c
Item	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Item,$/;"	e	enum:Tag
Item	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    type Item = (Event<'a>, Range<usize>);$/;"	t	implementation:OffsetIter
Item	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    type Item = Event<'a>;$/;"	t	implementation:Parser
Item	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^struct Item {$/;"	s
Item	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    type Item = (&'a String, &'a Value);$/;"	t	implementation:Map
Item	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    type Item = (&'a String, &'a mut Value);$/;"	t	implementation:Map
Item	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    type Item = (String, Value);$/;"	t	implementation:Map
Item	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    type Item = (usize, char);$/;"	t	implementation:CrlfFold
ItemBody	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^enum ItemBody {$/;"	g
ItemBody	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl<'a> Default for ItemBody {$/;"	c
ItemBody	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl<'a> ItemBody {$/;"	c
Iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^pub struct Iter<'a> {$/;"	s
IterImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type IterImpl<'a> = btree_map::Iter<'a, String, Value>;$/;"	t
IterImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type IterImpl<'a> = indexmap::map::Iter<'a, String, Value>;$/;"	t
IterMut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^pub struct IterMut<'a> {$/;"	s
IterMutImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type IterMutImpl<'a> = btree_map::IterMut<'a, String, Value>;$/;"	t
IterMutImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type IterMutImpl<'a> = indexmap::map::IterMut<'a, String, Value>;$/;"	t
KebabCase	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    KebabCase,$/;"	e	enum:RenameRule
KeyNewline	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    KeyNewline,$/;"	e	enum:Error
KeyNotString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    KeyNotString,$/;"	e	enum:Error
KeyValue	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    KeyValue(Vec<(Span, Cow<'a, str>)>, Value<'a>),$/;"	e	enum:Line
Keylike	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    Keylike(&'a str),$/;"	e	enum:Token
Keys	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^pub struct Keys<'a> {$/;"	s
KeysImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type KeysImpl<'a> = btree_map::Keys<'a, String, Value>;$/;"	t
KeysImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type KeysImpl<'a> = indexmap::map::Keys<'a, String, Value>;$/;"	t
Left	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Left,$/;"	e	enum:Alignment
LeftBrace	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    LeftBrace,$/;"	e	enum:Token
LeftBracket	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    LeftBracket,$/;"	e	enum:Token
Line	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^enum Line<'a> {$/;"	g
LineStart	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^impl<'a> LineStart<'a> {$/;"	c
LineStart	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub struct LineStart<'a> {$/;"	s
Link	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/linklabel.rs	/^    Link(CowStr<'a>),$/;"	e	enum:ReferenceLabel
Link	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Link(LinkIndex),$/;"	e	enum:ItemBody
Link	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Link(LinkType, CowStr<'a>, CowStr<'a>),$/;"	e	enum:Tag
Link	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Link,$/;"	e	enum:LinkStackTy
LinkDef	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^struct LinkDef<'a> {$/;"	s
LinkIndex	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^struct LinkIndex(usize);$/;"	s
LinkLabel	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/linklabel.rs	/^pub type LinkLabel<'a> = UniCase<CowStr<'a>>;$/;"	t
LinkLabel	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    LinkLabel(CowStr<'a>, usize),$/;"	e	enum:RefScan
LinkStack	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl LinkStack {$/;"	c
LinkStack	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^struct LinkStack {$/;"	s
LinkStackEl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^struct LinkStackEl {$/;"	s
LinkStackTy	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^enum LinkStackTy {$/;"	g
LinkType	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl LinkType {$/;"	c
LinkType	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub enum LinkType {$/;"	g
List	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    List(Option<u64>), \/\/ TODO: add delim and tight for ast (not needed for html)$/;"	e	enum:Tag
List	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    List(bool, u8, u64), \/\/ is_tight, list character, list start index$/;"	e	enum:ItemBody
ListItem	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    ListItem(usize),     \/\/ indent level$/;"	e	enum:ItemBody
Literal	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^            Literal(String, Type),$/;"	e	enum:Serializer::emit_str::Repr
LookupTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub(crate) struct LookupTable {$/;"	s
LookupTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^type LookupTable = [bool; 256];$/;"	t
LoopInstruction	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub(crate) enum LoopInstruction<T> {$/;"	g
LowerCase	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    LowerCase,$/;"	e	enum:RenameRule
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Map,$/;"	e	enum:Unexpected
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Map(Vec<(Content<'de>, Content<'de>)>),$/;"	e	enum:content::Content
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        Map(Vec<(Content, Content)>),$/;"	e	enum:content::Content
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl Clone for Map<String, Value> {$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl Debug for Map<String, Value> {$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl Default for Map<String, Value> {$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl Extend<(String, Value)> for Map<String, Value> {$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl FromIterator<(String, Value)> for Map<String, Value> {$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl IntoIterator for Map<String, Value> {$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl Map<String, Value> {$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl PartialEq for Map<String, Value> {$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl ser::Serialize for Map<String, Value> {$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl<'a, Q: ?Sized> ops::Index<&'a Q> for Map<String, Value>$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl<'a, Q: ?Sized> ops::IndexMut<&'a Q> for Map<String, Value>$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl<'a> IntoIterator for &'a Map<String, Value> {$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl<'a> IntoIterator for &'a mut Map<String, Value> {$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl<'de> de::Deserialize<'de> for Map<String, Value> {$/;"	c
Map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^pub struct Map<K, V> {$/;"	s
MapAccess	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub trait MapAccess<'de> {$/;"	i
MapAccessDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, A> de::Deserializer<'de> for MapAccessDeserializer<A>$/;"	c
MapAccessDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, A> de::EnumAccess<'de> for MapAccessDeserializer<A>$/;"	c
MapAccessDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<A> MapAccessDeserializer<A> {$/;"	c
MapAccessDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct MapAccessDeserializer<A> {$/;"	s
MapAsEnum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    impl<'de, A> VariantAccess<'de> for MapAsEnum<A>$/;"	c	module:private
MapAsEnum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub struct MapAsEnum<A> {$/;"	s	module:private
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, I, E> Clone for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, I, E> Debug for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, I, E> MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, I, E> de::Deserializer<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, I, E> de::MapAccess<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, I, E> de::SeqAccess<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct MapDeserializer<'de, I, E>$/;"	s
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> de::Deserializer<'de> for MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> de::MapAccess<'de> for MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    struct MapDeserializer<'de, E>$/;"	s	module:content
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl MapDeserializer {$/;"	c
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<'de> de::MapAccess<'de> for MapDeserializer {$/;"	c
MapDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^struct MapDeserializer {$/;"	s
MapImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type MapImpl<K, V> = BTreeMap<K, V>;$/;"	t
MapImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type MapImpl<K, V> = IndexMap<K, V>;$/;"	t
MapRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'a, 'de, E> MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, 'a, E> de::Deserializer<'de> for MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, 'a, E> de::MapAccess<'de> for MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    struct MapRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
MapVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de, 'b> de::Deserializer<'de> for MapVisitor<'de, 'b> {$/;"	c
MapVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de, 'b> de::IntoDeserializer<'de, Error> for MapVisitor<'de, 'b> {$/;"	c
MapVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de, 'b> de::MapAccess<'de> for MapVisitor<'de, 'b> {$/;"	c
MapVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de, 'b> de::SeqAccess<'de> for MapVisitor<'de, 'b> {$/;"	c
MapVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct MapVisitor<'de, 'b> {$/;"	s
Match	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^impl ToTokens for Match {$/;"	c
Match	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^pub struct Match(pub Fragment);$/;"	s
MaybeCode	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    MaybeCode(usize, bool), \/\/ number of backticks, preceeded by backslash$/;"	e	enum:ItemBody
MaybeEmphasis	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    MaybeEmphasis(usize, bool, bool),$/;"	e	enum:ItemBody
MaybeHtml	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    MaybeHtml,$/;"	e	enum:ItemBody
MaybeImage	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    MaybeImage,$/;"	e	enum:ItemBody
MaybeLinkClose	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    MaybeLinkClose(bool),$/;"	e	enum:ItemBody
MaybeLinkOpen	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    MaybeLinkOpen,$/;"	e	enum:ItemBody
MaybeSmartQuote	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    MaybeSmartQuote(u8, bool, bool),$/;"	e	enum:ItemBody
MaybeString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^enum MaybeString {$/;"	g
MaybeString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^impl MaybeString {$/;"	c
MissingFieldDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> Deserializer<'de> for MissingFieldDeserializer<E>$/;"	c	function:missing_field
MissingFieldDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    struct MissingFieldDeserializer<E>(&'static str, PhantomData<E>);$/;"	s	function:missing_field
MultilineStringKey	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    MultilineStringKey,$/;"	e	enum:ErrorKind
MultilineStringKey	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    MultilineStringKey(usize),$/;"	e	enum:Error
Mutex	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T> Serialize for Mutex<T>$/;"	c
NANOS_PER_SEC	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            static NANOS_PER_SEC: u32 = 1_000_000_000;$/;"	v	function:Duration::deserialize::check_overflow
NANOS_PER_SEC	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            static NANOS_PER_SEC: u32 = 1_000_000_000;$/;"	v	function:SystemTime::deserialize::check_overflow
Name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^impl Name {$/;"	c
Name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^pub struct Name {$/;"	s
Nanos	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            Nanos,$/;"	e	enum:Duration::deserialize::Field
Nanos	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            Nanos,$/;"	e	enum:SystemTime::deserialize::Field
NeverDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for NeverDeserializer<E>$/;"	c
NeverDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct NeverDeserializer<E> {$/;"	s
Newline	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    Newline,$/;"	e	enum:Token
NewlineInString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    NewlineInString,$/;"	e	enum:ErrorKind
NewlineInString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    NewlineInString(usize),$/;"	e	enum:Error
NewlineInTableKey	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    NewlineInTableKey,$/;"	e	enum:ErrorKind
NewlineInTableKey	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    NewlineInTableKey(usize),$/;"	e	enum:Error
NewlineTripple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^            NewlineTripple,$/;"	e	enum:Serializer::emit_str::Type
Newtype	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Newtype(Box<Content<'de>>),$/;"	e	enum:content::Content
Newtype	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    Newtype,$/;"	e	enum:Style
NewtypeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    NewtypeStruct,$/;"	e	enum:Unexpected
NewtypeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        NewtypeStruct(&'static str, Box<Content>),$/;"	e	enum:content::Content
NewtypeVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    NewtypeVariant,$/;"	e	enum:Unexpected
NewtypeVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        NewtypeVariant(&'static str, u32, &'static str, Box<Content>),$/;"	e	enum:content::Content
No	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    No,$/;"	e	enum:Untagged
No	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    No,$/;"	e	enum:Identifier
Node	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^pub struct Node<T> {$/;"	s
None	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    None,$/;"	e	enum:Alignment
None	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        None,$/;"	e	enum:content::Content
None	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        None,$/;"	e	enum:content::Content
None	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    None,$/;"	e	enum:Default
None	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    None,$/;"	e	enum:TagType
None	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    None,$/;"	e	enum:RenameRule
NotEscaped	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    NotEscaped(usize),$/;"	e	enum:MaybeString
NumberInvalid	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    NumberInvalid,$/;"	e	enum:ErrorKind
NumberInvalid	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    NumberInvalid,$/;"	e	enum:Error
Occupied	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    Occupied(OccupiedEntry<'a>),$/;"	e	enum:Entry
OccupiedEntry	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl<'a> OccupiedEntry<'a> {$/;"	c
OccupiedEntry	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^pub struct OccupiedEntry<'a> {$/;"	s
OccupiedEntryImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type OccupiedEntryImpl<'a> = btree_map::OccupiedEntry<'a, String, Value>;$/;"	t
OccupiedEntryImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type OccupiedEntryImpl<'a> = indexmap::map::OccupiedEntry<'a, String, Value>;$/;"	t
Offset	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^enum Offset {$/;"	g
Offset	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^impl fmt::Display for Offset {$/;"	c
OffsetIter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl<'a> Iterator for OffsetIter<'a> {$/;"	c
OffsetIter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub struct OffsetIter<'a> {$/;"	s
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            Ok,$/;"	e	enum:deserialize::Field
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        type Ok = Content;$/;"	t	module:content
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        type Ok = M::Ok;$/;"	t	module:content
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type Ok = ();$/;"	t
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type Ok = S::Ok;$/;"	t
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    type Ok = ();$/;"	t	implementation:Formatter
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^    type Ok = Ok;$/;"	t
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeMap
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeSeq
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeStruct
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeStructVariant
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTuple
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTupleStruct
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTupleVariant
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:Serializer
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type Ok = ();$/;"	t	implementation:Serializer::DateStrEmitter
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type Ok = ();$/;"	t	implementation:Serializer::SerializeSeq
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type Ok = ();$/;"	t	implementation:Serializer::SerializeTable
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type Ok = ();$/;"	t	implementation:Serializer::Serializer
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type Ok = Category;$/;"	t	implementation:Serializer::Categorize
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type Ok = String;$/;"	t	implementation:Serializer::StringExtractor
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Ok = Value;$/;"	t	implementation:SerializeMap
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Ok = Value;$/;"	t	implementation:SerializeVec
Ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Ok = Value;$/;"	t	implementation:Serializer
OneOf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^impl Display for OneOf {$/;"	c
OneOf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^struct OneOf {$/;"	s
OnelineSingle	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^            OnelineSingle,$/;"	e	enum:Serializer::emit_str::Type
OnelineTripple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^            OnelineTripple,$/;"	e	enum:Serializer::emit_str::Type
Option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Option<T>$/;"	c
Option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Option,$/;"	e	enum:Unexpected
Option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T> Serialize for Option<T>$/;"	c
OptionVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for OptionVisitor<T>$/;"	c
OptionVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct OptionVisitor<T> {$/;"	s
Optional	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    Optional,$/;"	e	enum:Unsupported
OsStr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for OsStr {$/;"	c
OsString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Deserialize<'de> for OsString {$/;"	c
OsString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for OsString {$/;"	c
OsStringVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Visitor<'de> for OsStringVisitor {$/;"	c
OsStringVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct OsStringVisitor;$/;"	s
Other	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Other(&'a str),$/;"	e	enum:Unexpected
Other	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Other,$/;"	e	enum:content::TagContentOtherField
Output	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    type Output = (LinkType, CowStr<'a>, CowStr<'a>);$/;"	t	implementation:Allocations
Output	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    type Output = CowStr<'a>;$/;"	t	implementation:Allocations
Output	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    type Output = Vec<Alignment>;$/;"	t	implementation:Allocations
Output	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    type Output = Node<T>;$/;"	t	implementation:Tree
Output	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    type Output = TreeIndex;$/;"	t	implementation:TreeIndex
Output	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    type Output = Value;$/;"	t
Output	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Output = Value;$/;"	t
Owned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    Owned(string::String),$/;"	e	enum:MaybeString
OwnedHtml	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    OwnedHtml(CowIndex),$/;"	e	enum:ItemBody
Page	/home/sammi/rust/md_puppy/src/markdown_compiling.rs	/^impl Page {$/;"	c
Page	/home/sammi/rust/md_puppy/src/markdown_compiling.rs	/^pub struct Page {$/;"	s
Pair	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub trait Pair {$/;"	i	module:private
PairDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, A, B, E> de::Deserializer<'de> for PairDeserializer<A, B, E>$/;"	c
PairDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^struct PairDeserializer<A, B, E>(A, B, PhantomData<E>);$/;"	s
PairVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, A, B, E> de::SeqAccess<'de> for PairVisitor<A, B, E>$/;"	c
PairVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^struct PairVisitor<A, B, E>(Option<A>, Option<B>, PhantomData<E>);$/;"	s
Paragraph	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Paragraph,$/;"	e	enum:ItemBody
Paragraph	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Paragraph,$/;"	e	enum:Tag
Parameters	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^impl Parameters {$/;"	c
Parameters	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^struct Parameters {$/;"	s
Parameters	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^impl Parameters {$/;"	c
Parameters	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^struct Parameters {$/;"	s
ParseError	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^impl<'a> Display for ParseError<'a> {$/;"	c
ParseError	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^pub struct ParseError<'a> {$/;"	s
Parser	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl<'a> Iterator for Parser<'a> {$/;"	c
Parser	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl<'a> Parser<'a> {$/;"	c
Parser	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub struct Parser<'a> {$/;"	s
PascalCase	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    PascalCase,$/;"	e	enum:RenameRule
Path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a Path {$/;"	c
Path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for Path {$/;"	c
Path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    Path(syn::ExprPath),$/;"	e	enum:Default
Path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/symbol.rs	/^impl PartialEq<Symbol> for Path {$/;"	c
Path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/symbol.rs	/^impl<'a> PartialEq<Symbol> for &'a Path {$/;"	c
PathBuf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Deserialize<'de> for PathBuf {$/;"	c
PathBuf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for PathBuf {$/;"	c
PathBufVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Visitor<'de> for PathBufVisitor {$/;"	c
PathBufVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct PathBufVisitor;$/;"	s
PathVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'a> Visitor<'a> for PathVisitor {$/;"	c
PathVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct PathVisitor;$/;"	s
Period	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    Period,$/;"	e	enum:Token
PhantomData	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for PhantomData<T> {$/;"	c
PhantomData	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^impl<'de, T> DeserializeSeed<'de> for PhantomData<T>$/;"	c
PhantomData	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for PhantomData<T> {$/;"	c
PhantomDataVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T: ?Sized> Visitor<'de> for PhantomDataVisitor<T> {$/;"	c
PhantomDataVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct PhantomDataVisitor<T: ?Sized> {$/;"	s
Plus	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    Plus,$/;"	e	enum:Token
Primitive	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    Primitive,$/;"	e	enum:Serializer::Category
RENAME_RULES	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^static RENAME_RULES: &[(&str, RenameRule)] = &[$/;"	v
Range	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, Idx> Deserialize<'de> for Range<Idx>$/;"	c
Range	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<Idx> Serialize for Range<Idx>$/;"	c
RangeInclusive	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, Idx> Deserialize<'de> for RangeInclusive<Idx>$/;"	c
RangeInclusive	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<Idx> Serialize for RangeInclusive<Idx>$/;"	c
RangeVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    impl<'de, Idx> Visitor<'de> for RangeVisitor<Idx>$/;"	c	module:range
RangeVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    pub struct RangeVisitor<Idx> {$/;"	s	module:range
RcWeak	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for RcWeak<T>$/;"	c
RcWeak	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for RcWeak<T>$/;"	c
RedefineAsArray	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    RedefineAsArray,$/;"	e	enum:ErrorKind
RefCell	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T> Serialize for RefCell<T>$/;"	c
RefScan	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^enum RefScan<'a> {$/;"	g
Reference	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Reference,$/;"	e	enum:LinkType
ReferenceLabel	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/linklabel.rs	/^pub enum ReferenceLabel<'a> {$/;"	g
ReferenceUnknown	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    ReferenceUnknown,$/;"	e	enum:LinkType
RenameAllRules	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^pub struct RenameAllRules {$/;"	s
RenameRule	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^impl RenameRule {$/;"	c
RenameRule	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^pub enum RenameRule {$/;"	g
ReplaceReceiver	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^impl ReplaceReceiver<'_> {$/;"	c
ReplaceReceiver	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^struct ReplaceReceiver<'a>(&'a TypePath);$/;"	s
Repr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^        enum Repr {$/;"	g	method:Serializer::emit_str
Result	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T, E> Deserialize<'de> for Result<T, E>$/;"	c
Result	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T, E> Serialize for Result<T, E>$/;"	c
ResultVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        impl<'de, T, E> Visitor<'de> for ResultVisitor<T, E>$/;"	c	function:deserialize
ResultVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        struct ResultVisitor<T, E>(PhantomData<Result<T, E>>);$/;"	s	function:deserialize
Reverse	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T> Serialize for Reverse<T>$/;"	c
Right	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Right,$/;"	e	enum:Alignment
RightBrace	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    RightBrace,$/;"	e	enum:Token
RightBracket	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    RightBracket,$/;"	e	enum:Token
Root	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Root,$/;"	e	enum:ItemBody
Rule	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Rule,$/;"	e	enum:Event
Rule	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Rule,$/;"	e	enum:ItemBody
RwLock	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T> Serialize for RwLock<T>$/;"	c
SLASH_ESCAPE	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^static SLASH_ESCAPE: &str = "&#x27;";$/;"	v
ST_BEGIN_TAGS	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    static ST_BEGIN_TAGS: &[&[u8]; 3] = &[b"!--", b"?", b"![CDATA["];$/;"	v	function:get_html_end_tag
Scan	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Scan,$/;"	e	enum:TableParseMode
ScreamingKebabCase	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    ScreamingKebabCase,$/;"	e	enum:RenameRule
ScreamingSnakeCase	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    ScreamingSnakeCase,$/;"	e	enum:RenameRule
Sealed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^pub trait Sealed {}$/;"	i
Second	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        type Second = B;$/;"	t	implementation:private::B
Second	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        type Second;$/;"	t	interface:private::Pair
Second	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub type Second<T> = <T as Pair>::Second;$/;"	t	module:private
Secs	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            Secs,$/;"	e	enum:Duration::deserialize::Field
Secs	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            Secs,$/;"	e	enum:SystemTime::deserialize::Field
SeedStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    impl<'de, V> DeserializeSeed<'de> for SeedStructVariant<V>$/;"	c	module:private
SeedStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    struct SeedStructVariant<V> {$/;"	s	module:private
SeedTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    impl<'de, V> DeserializeSeed<'de> for SeedTupleVariant<V>$/;"	c	module:private
SeedTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    struct SeedTupleVariant<V> {$/;"	s	module:private
Seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Seq,$/;"	e	enum:Unexpected
Seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Seq(Vec<Content<'de>>),$/;"	e	enum:content::Content
Seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        Seq(Vec<Content>),$/;"	e	enum:content::Content
SeqAccess	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub trait SeqAccess<'de> {$/;"	i
SeqAccessDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, A> de::Deserializer<'de> for SeqAccessDeserializer<A>$/;"	c
SeqAccessDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<A> SeqAccessDeserializer<A> {$/;"	c
SeqAccessDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct SeqAccessDeserializer<A> {$/;"	s
SeqDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, I, T, E> de::Deserializer<'de> for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, I, T, E> de::SeqAccess<'de> for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<I, E> Debug for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<I, E> SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct SeqDeserializer<I, E> {$/;"	s
SeqDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> de::Deserializer<'de> for SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> de::SeqAccess<'de> for SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    struct SeqDeserializer<'de, E>$/;"	s	module:content
SeqDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl SeqDeserializer {$/;"	c
SeqDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<'de> de::SeqAccess<'de> for SeqDeserializer {$/;"	c
SeqDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^struct SeqDeserializer {$/;"	s
SeqRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'a, 'de, E> SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, 'a, E> de::Deserializer<'de> for SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, 'a, E> de::SeqAccess<'de> for SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    struct SeqRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
Sequence	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    Sequence,$/;"	e	enum:Unsupported
SerAndDe	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^type SerAndDe<T> = (Option<T>, Option<T>);$/;"	t
Serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for ! {$/;"	c
Serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for () {$/;"	c
Serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^pub trait Serialize {$/;"	i
Serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/mod.rs	/^    Serialize,$/;"	e	enum:Derive
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        type SerializeMap = SerializeMap<E>;$/;"	t	module:content
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<E> ser::SerializeMap for SerializeMap<E>$/;"	c	module:content
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    pub struct SerializeMap<E> {$/;"	s	module:content
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeMap = FlatMapSerializeMap<'a, M>;$/;"	t
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeMap = S::SerializeMap;$/;"	t
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    type SerializeMap = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type SerializeMap: SerializeMap<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^pub trait SerializeMap {$/;"	i
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    SerializeMap,$/;"	e	enum:StructTrait
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeMap = Self;$/;"	t	implementation:Serializer::Categorize
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeMap = SerializeTable<'a, 'b>;$/;"	t	implementation:Serializer::Serializer
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeMap = ser::Impossible<(), Error>;$/;"	t	implementation:Serializer::DateStrEmitter
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeMap = ser::Impossible<String, Error>;$/;"	t	implementation:Serializer::StringExtractor
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type SerializeMap = SerializeMap;$/;"	t	implementation:Serializer
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl ser::SerializeMap for SerializeMap {$/;"	c
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl ser::SerializeStruct for SerializeMap {$/;"	c
SerializeMap	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^struct SerializeMap {$/;"	s
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        type SerializeSeq = SerializeSeq<E>;$/;"	t	module:content
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<E> ser::SerializeSeq for SerializeSeq<E>$/;"	c	module:content
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    pub struct SerializeSeq<E> {$/;"	s	module:content
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeSeq = Impossible<S::Ok, S::Error>;$/;"	t
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeSeq = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    type SerializeSeq = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type SerializeSeq: SerializeSeq<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^pub trait SerializeSeq {$/;"	i
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeSeq = Self;$/;"	t	implementation:Serializer::Categorize
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeSeq = SerializeSeq<'a, 'b>;$/;"	t	implementation:Serializer::Serializer
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeSeq = ser::Impossible<(), Error>;$/;"	t	implementation:Serializer::DateStrEmitter
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeSeq = ser::Impossible<String, Error>;$/;"	t	implementation:Serializer::StringExtractor
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<'a, 'b> ser::SerializeSeq for SerializeSeq<'a, 'b> {$/;"	c	implementation:Serializer
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<'a, 'b> ser::SerializeTuple for SerializeSeq<'a, 'b> {$/;"	c	implementation:Serializer
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<'a, 'b> ser::SerializeTupleStruct for SerializeSeq<'a, 'b> {$/;"	c	implementation:Serializer
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<'a, 'b> ser::SerializeTupleVariant for SerializeSeq<'a, 'b> {$/;"	c	implementation:Serializer
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^pub struct SerializeSeq<'a, 'b> {$/;"	s
SerializeSeq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type SerializeSeq = SerializeVec;$/;"	t	implementation:Serializer
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        type SerializeStruct = SerializeStruct<E>;$/;"	t	module:content
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<E> ser::SerializeStruct for SerializeStruct<E>$/;"	c	module:content
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    pub struct SerializeStruct<E> {$/;"	s	module:content
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeStruct = FlatMapSerializeStruct<'a, M>;$/;"	t
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeStruct = S::SerializeStruct;$/;"	t
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    type SerializeStruct = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type SerializeStruct: SerializeStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^pub trait SerializeStruct {$/;"	i
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    SerializeStruct,$/;"	e	enum:StructTrait
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeStruct = Self;$/;"	t	implementation:Serializer::Categorize
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeStruct = SerializeTable<'a, 'b>;$/;"	t	implementation:Serializer::Serializer
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeStruct = ser::Impossible<(), Error>;$/;"	t	implementation:Serializer::DateStrEmitter
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeStruct = ser::Impossible<String, Error>;$/;"	t	implementation:Serializer::StringExtractor
SerializeStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type SerializeStruct = SerializeMap;$/;"	t	implementation:Serializer
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        type SerializeStructVariant = SerializeStructVariant<E>;$/;"	t	module:content
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<E> ser::SerializeStructVariant for SerializeStructVariant<E>$/;"	c	module:content
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    pub struct SerializeStructVariant<E> {$/;"	s	module:content
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeStructVariant = FlatMapSerializeStructVariantAsMapValue<'a, M>;$/;"	t
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeStructVariant = Impossible<S::Ok, S::Error>;$/;"	t
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeStructVariant = SerializeStructVariantAsMapValue<S::SerializeMap>;$/;"	t
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    type SerializeStructVariant = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type SerializeStructVariant: SerializeStructVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^pub trait SerializeStructVariant {$/;"	i
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    SerializeStructVariant,$/;"	e	enum:StructTrait
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeStructVariant = ser::Impossible<(), Error>;$/;"	t	implementation:Serializer::DateStrEmitter
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeStructVariant = ser::Impossible<(), Error>;$/;"	t	implementation:Serializer::Serializer
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeStructVariant = ser::Impossible<Category, E>;$/;"	t	implementation:Serializer::Categorize
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeStructVariant = ser::Impossible<String, Error>;$/;"	t	implementation:Serializer::StringExtractor
SerializeStructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type SerializeStructVariant = ser::Impossible<Value, crate::ser::Error>;$/;"	t	implementation:Serializer
SerializeStructVariantAsMapValue	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<M> SerializeStructVariantAsMapValue<M> {$/;"	c	module:content
SerializeStructVariantAsMapValue	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<M> ser::SerializeStructVariant for SerializeStructVariantAsMapValue<M>$/;"	c	module:content
SerializeStructVariantAsMapValue	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    pub struct SerializeStructVariantAsMapValue<M> {$/;"	s	module:content
SerializeTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<'a, 'b> ser::SerializeMap for SerializeTable<'a, 'b> {$/;"	c	implementation:Serializer
SerializeTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<'a, 'b> ser::SerializeStruct for SerializeTable<'a, 'b> {$/;"	c	implementation:Serializer
SerializeTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^pub enum SerializeTable<'a, 'b> {$/;"	g
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        type SerializeTuple = SerializeTuple<E>;$/;"	t	module:content
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<E> ser::SerializeTuple for SerializeTuple<E>$/;"	c	module:content
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    pub struct SerializeTuple<E> {$/;"	s	module:content
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeTuple = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeTuple = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    type SerializeTuple = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type SerializeTuple: SerializeTuple<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^pub trait SerializeTuple {$/;"	i
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    SerializeTuple,$/;"	e	enum:TupleTrait
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeTuple = Self;$/;"	t	implementation:Serializer::Categorize
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeTuple = SerializeSeq<'a, 'b>;$/;"	t	implementation:Serializer::Serializer
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeTuple = ser::Impossible<(), Error>;$/;"	t	implementation:Serializer::DateStrEmitter
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeTuple = ser::Impossible<String, Error>;$/;"	t	implementation:Serializer::StringExtractor
SerializeTuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type SerializeTuple = SerializeVec;$/;"	t	implementation:Serializer
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        type SerializeTupleStruct = SerializeTupleStruct<E>;$/;"	t	module:content
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<E> ser::SerializeTupleStruct for SerializeTupleStruct<E>$/;"	c	module:content
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    pub struct SerializeTupleStruct<E> {$/;"	s	module:content
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    type SerializeTupleStruct = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type SerializeTupleStruct: SerializeTupleStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^pub trait SerializeTupleStruct {$/;"	i
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    SerializeTupleStruct,$/;"	e	enum:TupleTrait
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeTupleStruct = Self;$/;"	t	implementation:Serializer::Categorize
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeTupleStruct = SerializeSeq<'a, 'b>;$/;"	t	implementation:Serializer::Serializer
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeTupleStruct = ser::Impossible<(), Error>;$/;"	t	implementation:Serializer::DateStrEmitter
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeTupleStruct = ser::Impossible<String, Error>;$/;"	t	implementation:Serializer::StringExtractor
SerializeTupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type SerializeTupleStruct = SerializeVec;$/;"	t	implementation:Serializer
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        type SerializeTupleVariant = SerializeTupleVariant<E>;$/;"	t	module:content
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<E> ser::SerializeTupleVariant for SerializeTupleVariant<E>$/;"	c	module:content
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    pub struct SerializeTupleVariant<E> {$/;"	s	module:content
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariantAsMapValue<S::SerializeMap>;$/;"	t
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    type SerializeTupleVariant = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    type SerializeTupleVariant: SerializeTupleVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^pub trait SerializeTupleVariant {$/;"	i
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    SerializeTupleVariant,$/;"	e	enum:TupleTrait
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeTupleVariant = Self;$/;"	t	implementation:Serializer::Categorize
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeTupleVariant = SerializeSeq<'a, 'b>;$/;"	t	implementation:Serializer::Serializer
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeTupleVariant = ser::Impossible<(), Error>;$/;"	t	implementation:Serializer::DateStrEmitter
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type SerializeTupleVariant = ser::Impossible<String, Error>;$/;"	t	implementation:Serializer::StringExtractor
SerializeTupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type SerializeTupleVariant = SerializeVec;$/;"	t	implementation:Serializer
SerializeTupleVariantAsMapValue	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<M> SerializeTupleVariantAsMapValue<M> {$/;"	c	module:content
SerializeTupleVariantAsMapValue	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    impl<M> ser::SerializeTupleVariant for SerializeTupleVariantAsMapValue<M>$/;"	c	module:content
SerializeTupleVariantAsMapValue	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    pub struct SerializeTupleVariantAsMapValue<M> {$/;"	s	module:content
SerializeVec	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl ser::SerializeSeq for SerializeVec {$/;"	c
SerializeVec	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl ser::SerializeTuple for SerializeVec {$/;"	c
SerializeVec	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl ser::SerializeTupleStruct for SerializeVec {$/;"	c
SerializeVec	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl ser::SerializeTupleVariant for SerializeVec {$/;"	c
SerializeVec	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^struct SerializeVec {$/;"	s
Serializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^pub trait Serializer: Sized {$/;"	i
Serializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<'a, 'b> ser::Serializer for &'b mut Serializer<'a> {$/;"	c	implementation:Serializer
Serializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl<'a> Serializer<'a> {$/;"	c
Serializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^pub struct Serializer<'a> {$/;"	s
Serializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl ser::Serializer for Serializer {$/;"	c
Serializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^struct Serializer;$/;"	s
Settings	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^struct Settings {$/;"	s
Shortcut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Shortcut,$/;"	e	enum:LinkType
ShortcutUnknown	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    ShortcutUnknown,$/;"	e	enum:LinkType
Signed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Signed(i64),$/;"	e	enum:Unexpected
SnakeCase	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    SnakeCase,$/;"	e	enum:RenameRule
SocketAddr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Deserialize<'de> for net::SocketAddr {$/;"	c
SocketAddr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for net::SocketAddr {$/;"	c
SocketAddrV4	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for net::SocketAddrV4 {$/;"	c
SocketAddrV6	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for net::SocketAddrV6 {$/;"	c
SoftBreak	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    SoftBreak,$/;"	e	enum:Event
SoftBreak	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    SoftBreak,$/;"	e	enum:ItemBody
Some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Some(Box<Content<'de>>),$/;"	e	enum:content::Content
Some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        Some(Box<Content>),$/;"	e	enum:content::Content
Span	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^pub struct Span {$/;"	s
Spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^impl Borrow<str> for Spanned<String> {$/;"	c
Spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^impl<'de, T> de::Deserialize<'de> for Spanned<T>$/;"	c
Spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^impl<T: Eq> Eq for Spanned<T> {}$/;"	c
Spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^impl<T: Hash> Hash for Spanned<T> {$/;"	c
Spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^impl<T: Ord> Ord for Spanned<T> {$/;"	c
Spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^impl<T: PartialEq> PartialEq for Spanned<T> {$/;"	c
Spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^impl<T: PartialOrd> PartialOrd for Spanned<T> {$/;"	c
Spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^impl<T: ser::Serialize> ser::Serialize for Spanned<T> {$/;"	c
Spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^impl<T> Spanned<T> {$/;"	c
Spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^pub struct Spanned<T> {$/;"	s
SpannedDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de, T> de::MapAccess<'de> for SpannedDeserializer<'de, T>$/;"	c
SpannedDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct SpannedDeserializer<'de, T: de::IntoDeserializer<'de, Error>> {$/;"	s
SpannedVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^        impl<'de, T> de::Visitor<'de> for SpannedVisitor<T>$/;"	c	function:deserialize
SpannedVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^        struct SpannedVisitor<T>(::std::marker::PhantomData<T>);$/;"	s	function:deserialize
Start	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Start(Tag<'a>),$/;"	e	enum:Event
Start	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        Start,$/;"	e	enum:range::Field
Started	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    Started,$/;"	e	enum:ArrayState
StartedAsATable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    StartedAsATable,$/;"	e	enum:ArrayState
State	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^enum State<'a> {$/;"	g
Static	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    Static,$/;"	e	enum:BorrowedLifetimes
Std	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^            Std(Type),$/;"	e	enum:Serializer::emit_str::Repr
Stmts	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^impl ToTokens for Stmts {$/;"	c
Stmts	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^pub struct Stmts(pub Fragment);$/;"	s
Str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Str(&'a str),$/;"	e	enum:Unexpected
Str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Str(&'de str),$/;"	e	enum:content::Content
StrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'a, E> Debug for StrDeserializer<'a, E> {$/;"	c
StrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, 'a, E> de::Deserializer<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'de, 'a, E> Deserializer<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'a, 'b> de::IntoDeserializer<'a, Error> for StrDeserializer<'a> {$/;"	c
StrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'a> StrDeserializer<'a> {$/;"	c
StrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de> de::Deserializer<'de> for StrDeserializer<'de> {$/;"	c
StrDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct StrDeserializer<'a> {$/;"	s
StrVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'a> Visitor<'a> for StrVisitor {$/;"	c
StrVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct StrVisitor;$/;"	s
StrWrite	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^pub trait StrWrite {$/;"	i
Strikethrough	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Strikethrough,$/;"	e	enum:ItemBody
Strikethrough	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Strikethrough,$/;"	e	enum:Tag
String	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^impl<'w> StrWrite for String {$/;"	c
String	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Deserialize<'de> for String {$/;"	c
String	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for String$/;"	c
String	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        String(String),$/;"	e	enum:content::Content
String	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        String(String),$/;"	e	enum:content::Content
String	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    String,$/;"	e	enum:Unsupported
String	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for String {$/;"	c
String	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    String(Cow<'a, str>),$/;"	e	enum:E
String	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    String {$/;"	e	enum:Token
String	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    String(String),$/;"	e	enum:Value
String	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl Index for String {$/;"	c
String	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl Sealed for String {}$/;"	c
StringDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for StringDeserializer<E>$/;"	c
StringDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for StringDeserializer<E>$/;"	c
StringDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<E> Clone for StringDeserializer<E> {$/;"	c
StringDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<E> Debug for StringDeserializer<E> {$/;"	c
StringDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct StringDeserializer<E> {$/;"	s
StringExtractor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl ser::Serializer for StringExtractor {$/;"	c	implementation:Serializer
StringExtractor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^struct StringExtractor;$/;"	s	implementation:Serializer
StringInPlaceVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'a, 'de> Visitor<'de> for StringInPlaceVisitor<'a> {$/;"	c
StringInPlaceVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct StringInPlaceVisitor<'a>(&'a mut String);$/;"	s
StringSettings	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^impl StringSettings {$/;"	c
StringSettings	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^struct StringSettings {$/;"	s
StringTooLongError	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^pub struct StringTooLongError;$/;"	s
StringVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Visitor<'de> for StringVisitor {$/;"	c
StringVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct StringVisitor;$/;"	s
Strong	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Strong,$/;"	e	enum:ItemBody
Strong	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Strong,$/;"	e	enum:Tag
Struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        Struct(&'static str, Vec<(&'static str, Content)>),$/;"	e	enum:content::Content
Struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    Struct(Style, Vec<Field<'a>>),$/;"	e	enum:Data
Struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    Struct,$/;"	e	enum:Style
StructTrait	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^enum StructTrait {$/;"	g
StructTrait	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^impl StructTrait {$/;"	c
StructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    StructVariant,$/;"	e	enum:Unexpected
StructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        StructVariant($/;"	e	enum:content::Content
StructVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^enum StructVariant<'a> {$/;"	g
Style	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^pub enum Style {$/;"	g
Symbol	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/symbol.rs	/^impl Display for Symbol {$/;"	c
Symbol	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/symbol.rs	/^pub struct Symbol(&'static str);$/;"	s
SynthesizeChar	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    SynthesizeChar(char),$/;"	e	enum:ItemBody
SynthesizeText	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    SynthesizeText(CowIndex),$/;"	e	enum:ItemBody
SystemTime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Deserialize<'de> for SystemTime {$/;"	c
SystemTime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for SystemTime {$/;"	c
T	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for [T; 0] {$/;"	c
T	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^impl<'de, T> Expected for T$/;"	c
T	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^impl<T> DeserializeOwned for T where T: for<'de> Deserialize<'de> {}$/;"	c
T	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/lib.rs	/^    pub struct T;$/;"	s	module:actually_private
T	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T> Serialize for [T; 0] {$/;"	c
T	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T> Serialize for [T]$/;"	c
T	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<'a, T: Sealed + ?Sized> Sealed for &'a T {}$/;"	c
T	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<'s, T: ?Sized> Index for &'s T$/;"	c
Table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Table(AlignmentIndex),$/;"	e	enum:ItemBody
Table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Table(Vec<Alignment>),$/;"	e	enum:Tag
Table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    Table {$/;"	e	enum:Line
Table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct Table<'a> {$/;"	s
Table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    Table {$/;"	e	enum:SerializeTable
Table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    Table {$/;"	e	enum:State
Table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    Table,$/;"	e	enum:Serializer::Category
Table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    Table(Table),$/;"	e	enum:Value
Table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^pub type Table = Map<String, Value>;$/;"	t
TableCell	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    TableCell,$/;"	e	enum:ItemBody
TableCell	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    TableCell,$/;"	e	enum:Tag
TableEnumDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de> de::VariantAccess<'de> for TableEnumDeserializer<'de> {$/;"	c
TableEnumDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct TableEnumDeserializer<'a> {$/;"	s
TableHead	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    TableHead,$/;"	e	enum:ItemBody
TableHead	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    TableHead,$/;"	e	enum:Tag
TablePair	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^type TablePair<'a> = ((Span, Cow<'a, str>), Value<'a>);$/;"	t
TableParseMode	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^enum TableParseMode {$/;"	g
TableRow	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    TableRow,$/;"	e	enum:ItemBody
TableRow	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    TableRow,$/;"	e	enum:Tag
TableState	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^enum TableState {$/;"	g
Tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub enum Tag<'a> {$/;"	g
Tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagContentOtherField
Tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagOrContent
Tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagOrContentField
TagContentOtherField	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub enum TagContentOtherField {$/;"	g	module:content
TagContentOtherFieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagContentOtherFieldVisitor {$/;"	c	module:content
TagContentOtherFieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagContentOtherFieldVisitor {$/;"	c	module:content
TagContentOtherFieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub struct TagContentOtherFieldVisitor {$/;"	s	module:content
TagOrContent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub enum TagOrContent<'de> {$/;"	g	module:content
TagOrContentField	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub enum TagOrContentField {$/;"	g	module:content
TagOrContentFieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagOrContentFieldVisitor {$/;"	c	module:content
TagOrContentFieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagOrContentFieldVisitor {$/;"	c	module:content
TagOrContentFieldVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub struct TagOrContentFieldVisitor {$/;"	s	module:content
TagOrContentVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de> TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    struct TagOrContentVisitor<'de> {$/;"	s	module:content
TagType	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^pub enum TagType {$/;"	g
TaggedContent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub struct TaggedContent<'de, T> {$/;"	s	module:content
TaggedContentVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, T> DeserializeSeed<'de> for TaggedContentVisitor<'de, T>$/;"	c	module:content
TaggedContentVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, T> TaggedContentVisitor<'de, T> {$/;"	c	module:content
TaggedContentVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, T> Visitor<'de> for TaggedContentVisitor<'de, T>$/;"	c	module:content
TaggedContentVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub struct TaggedContentVisitor<'de, T> {$/;"	s	module:content
TaggedSerializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^impl<S> Serializer for TaggedSerializer<S>$/;"	c
TaggedSerializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^impl<S> TaggedSerializer<S>$/;"	c
TaggedSerializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^struct TaggedSerializer<S> {$/;"	s
Target	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    type Target = str;$/;"	t	implementation:CowStr
Target	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    type Target = str;$/;"	t	implementation:InlineStr
TaskListMarker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    TaskListMarker(bool), \/\/ true for checked$/;"	e	enum:ItemBody
TaskListMarker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    TaskListMarker(bool),$/;"	e	enum:Event
Text	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Text(CowStr<'a>),$/;"	e	enum:Event
Text	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    Text,$/;"	e	enum:ItemBody
Time	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^impl fmt::Display for Time {$/;"	c
Time	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^struct Time {$/;"	s
Token	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^impl<'a> Token<'a> {$/;"	c
Token	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^pub enum Token<'a> {$/;"	g
Tokenizer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^impl<'a> Tokenizer<'a> {$/;"	c
Tokenizer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^pub struct Tokenizer<'a> {$/;"	s
Tree	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^impl<'a> Tree<Item> {$/;"	c
Tree	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^impl<T: Default> Tree<T> {$/;"	c
Tree	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^impl<T> std::fmt::Debug for Tree<T>$/;"	c
Tree	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^impl<T> std::ops::Index<TreeIndex> for Tree<T> {$/;"	c
Tree	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^impl<T> std::ops::IndexMut<TreeIndex> for Tree<T> {$/;"	c
Tree	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^pub struct Tree<T> {$/;"	s
TreeIndex	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^impl Add<usize> for TreeIndex {$/;"	c
TreeIndex	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^impl Sub<usize> for TreeIndex {$/;"	c
TreeIndex	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^impl TreeIndex {$/;"	c
TreeIndex	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^pub struct TreeIndex(NonZeroUsize);$/;"	s
Tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        Tuple(Vec<Content>),$/;"	e	enum:content::Content
Tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    Tuple,$/;"	e	enum:Unsupported
Tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    Tuple,$/;"	e	enum:Style
TupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        TupleStruct(&'static str, Vec<Content>),$/;"	e	enum:content::Content
TupleStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    TupleStruct,$/;"	e	enum:Unsupported
TupleTrait	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^enum TupleTrait {$/;"	g
TupleTrait	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^impl TupleTrait {$/;"	c
TupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    TupleVariant,$/;"	e	enum:Unexpected
TupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        TupleVariant(&'static str, u32, &'static str, Vec<Content>),$/;"	e	enum:content::Content
TupleVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^enum TupleVariant {$/;"	g
Type	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^        enum Type {$/;"	g	method:Serializer::emit_str
U16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        U16(u16),$/;"	e	enum:content::Content
U16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        U16(u16),$/;"	e	enum:content::Content
U32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        U32(u32),$/;"	e	enum:content::Content
U32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        U32(u32),$/;"	e	enum:content::Content
U32Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for U32Deserializer<E>$/;"	c
U32Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> de::EnumAccess<'de> for U32Deserializer<E>$/;"	c
U32Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<E> Debug for U32Deserializer<E> {$/;"	c
U32Deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct U32Deserializer<E> {$/;"	s
U64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        U64(u64),$/;"	e	enum:content::Content
U64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        U64(u64),$/;"	e	enum:content::Content
U8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        U8(u8),$/;"	e	enum:content::Content
U8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        U8(u8),$/;"	e	enum:content::Content
Unbounded	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            Unbounded,$/;"	e	enum:deserialize::Field
Unexpected	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^impl<'a> fmt::Display for Unexpected<'a> {$/;"	c
Unexpected	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub enum Unexpected<'a> {$/;"	g
Unexpected	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    Unexpected(char),$/;"	e	enum:ErrorKind
Unexpected	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    Unexpected(usize, char),$/;"	e	enum:Error
UnexpectedEof	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    UnexpectedEof,$/;"	e	enum:ErrorKind
UnexpectedKeys	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    UnexpectedKeys {$/;"	e	enum:ErrorKind
Unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Unit,$/;"	e	enum:Unexpected
Unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        Unit,$/;"	e	enum:content::Content
Unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        Unit,$/;"	e	enum:content::Content
Unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    Unit,$/;"	e	enum:Unsupported
Unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    Unit,$/;"	e	enum:Style
UnitDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for UnitDeserializer<E>$/;"	c
UnitDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<E> Debug for UnitDeserializer<E> {$/;"	c
UnitDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^pub struct UnitDeserializer<E> {$/;"	s
UnitOnly	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    impl<'de, E> de::VariantAccess<'de> for UnitOnly<E>$/;"	c	module:private
UnitOnly	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub struct UnitOnly<E> {$/;"	s	module:private
UnitStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        UnitStruct(&'static str),$/;"	e	enum:content::Content
UnitStruct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    UnitStruct,$/;"	e	enum:Unsupported
UnitVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    UnitVariant,$/;"	e	enum:Unexpected
UnitVariant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        UnitVariant(&'static str, u32, &'static str),$/;"	e	enum:content::Content
UnitVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Visitor<'de> for UnitVisitor {$/;"	c
UnitVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^struct UnitVisitor;$/;"	s
UnquotedString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    UnquotedString,$/;"	e	enum:ErrorKind
Unsigned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    Unsigned(u64),$/;"	e	enum:Unexpected
Unsupported	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^enum Unsupported {$/;"	g
Unsupported	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^impl Display for Unsupported {$/;"	c
UnsupportedNone	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    UnsupportedNone,$/;"	e	enum:Error
UnsupportedType	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    UnsupportedType,$/;"	e	enum:Error
Untagged	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^enum Untagged {$/;"	g
Untagged	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    Untagged,$/;"	e	enum:StructVariant
Untagged	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    Untagged,$/;"	e	enum:TupleVariant
UntaggedUnitVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'a> UntaggedUnitVisitor<'a> {$/;"	c	module:content
UntaggedUnitVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, 'a> Visitor<'de> for UntaggedUnitVisitor<'a> {$/;"	c	module:content
UntaggedUnitVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub struct UntaggedUnitVisitor<'a> {$/;"	s	module:content
UnterminatedString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    UnterminatedString,$/;"	e	enum:ErrorKind
UnterminatedString	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    UnterminatedString(usize),$/;"	e	enum:Error
UpperCase	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    UpperCase,$/;"	e	enum:RenameRule
Vacant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    Vacant(VacantEntry<'a>),$/;"	e	enum:Entry
VacantEntry	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^impl<'a> VacantEntry<'a> {$/;"	c
VacantEntry	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^pub struct VacantEntry<'a> {$/;"	s
VacantEntryImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type VacantEntryImpl<'a> = btree_map::VacantEntry<'a, String, Value>;$/;"	t
VacantEntryImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type VacantEntryImpl<'a> = indexmap::map::VacantEntry<'a, String, Value>;$/;"	t
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    type Value = IgnoredAny;$/;"	t	implementation:IgnoredAny
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:deserialize::Field::deserialize::FieldVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                type Value = Field;$/;"	t	implementation:range::Field::deserialize::FieldVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            type Value = ();$/;"	t	function:deserialize_in_place
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            type Value = Bound<T>;$/;"	t	function:deserialize
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            type Value = Duration;$/;"	t	implementation:Duration::deserialize::DurationVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            type Value = Duration;$/;"	t	implementation:SystemTime::deserialize::DurationVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            type Value = Result<T, E>;$/;"	t	function:deserialize
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            type Value = Vec<T>;$/;"	t	function:deserialize
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        type Value = (Idx, Idx);$/;"	t	module:range
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = &'a Path;$/;"	t	implementation:PathVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = &'a [u8];$/;"	t	implementation:BytesVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = &'a str;$/;"	t	implementation:StrVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = ();$/;"	t	implementation:StringInPlaceVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = ();$/;"	t	implementation:UnitVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = CString;$/;"	t	implementation:CStringVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = Option<T>;$/;"	t
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = OsString;$/;"	t	implementation:OsStringVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = PathBuf;$/;"	t	implementation:PathBufVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = PhantomData<T>;$/;"	t	implementation:PhantomDataVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = String;$/;"	t	implementation:StringVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = T;$/;"	t
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = [T; 0];$/;"	t	implementation:ArrayVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = bool;$/;"	t	implementation:BoolVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    type Value = char;$/;"	t	implementation:CharVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    type Value = T;$/;"	t
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    type Value;$/;"	t	interface:DeserializeSeed
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    type Value;$/;"	t	interface:Visitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/seed.rs	/^    type Value = ();$/;"	t
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        type Value = V::Value;$/;"	t	module:private
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Value = ();$/;"	t	implementation:content::InternallyTaggedUnitVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Value = ();$/;"	t	implementation:content::UntaggedUnitVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Value = Content<'de>;$/;"	t	implementation:content::ContentVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Value = Cow<'a, [u8]>;$/;"	t	implementation:borrow_cow_bytes::CowBytesVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Value = Cow<'a, str>;$/;"	t	implementation:borrow_cow_str::CowStrVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Value = TagContentOtherField;$/;"	t	implementation:content::TagContentOtherFieldVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Value = TagOrContent<'de>;$/;"	t	implementation:content::TagOrContentVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Value = TagOrContentField;$/;"	t	implementation:content::TagOrContentFieldVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Value = TaggedContent<'de, T>;$/;"	t	module:content
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^            type Value = ();$/;"	t	implementation:DatetimeKey::deserialize::FieldVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^            type Value = Datetime;$/;"	t	implementation:Datetime::deserialize::DatetimeVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^            type Value = DatetimeFromString;$/;"	t	implementation:DatetimeFromString::deserialize::Visitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de> de::IntoDeserializer<'de, Error> for Value<'de> {$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct Value<'a> {$/;"	s
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^            type Value = Map<String, Value>;$/;"	t	implementation:Map::deserialize::Visitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^            type Value = Spanned<T>;$/;"	t	function:deserialize
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            type Value = Value;$/;"	t	implementation:Value::deserialize::ValueVisitor
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    type Value = bool;$/;"	t	implementation:DatetimeOrTable
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl FromStr for Value {$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl Value {$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl fmt::Display for Value {$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl ser::Serialize for Value {$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<'a> From<&'a str> for Value {$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<'de> de::Deserialize<'de> for Value {$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<'de> de::Deserializer<'de> for Value {$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<'de> de::IntoDeserializer<'de, crate::de::Error> for Value {$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<I> ops::Index<I> for Value$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<I> ops::IndexMut<I> for Value$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<S: Into<String> + Hash + Eq, V: Into<Value>> From<HashMap<S, V>> for Value {$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<S: Into<String>, V: Into<Value>> From<BTreeMap<S, V>> for Value {$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl<V: Into<Value>> From<Vec<V>> for Value {$/;"	c
Value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^pub enum Value {$/;"	g
ValueAfterTable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    ValueAfterTable,$/;"	e	enum:Error
ValueDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'a> ValueDeserializer<'a> {$/;"	c
ValueDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^impl<'de> de::Deserializer<'de> for ValueDeserializer<'de> {$/;"	c
ValueDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^struct ValueDeserializer<'a> {$/;"	s
ValueVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^        impl<'de> de::Visitor<'de> for ValueVisitor {$/;"	c	method:Value::deserialize
ValueVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^        struct ValueVisitor;$/;"	s	method:Value::deserialize
Values	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^pub struct Values<'a> {$/;"	s
ValuesImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type ValuesImpl<'a> = btree_map::Values<'a, String, Value>;$/;"	t
ValuesImpl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^type ValuesImpl<'a> = indexmap::map::Values<'a, String, Value>;$/;"	t
Variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    type Variant: VariantAccess<'de, Error = Self::Error>;$/;"	t	interface:EnumAccess
Variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Variant = private::MapAsEnum<A>;$/;"	t
Variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    type Variant = private::UnitOnly<E>;$/;"	t
Variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Variant = VariantDeserializer<'de, Self::Error>;$/;"	t	module:content
Variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type Variant = VariantRefDeserializer<'a, 'de, Self::Error>;$/;"	t	module:content
Variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^pub struct Variant<'a> {$/;"	s
Variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    Variant,$/;"	e	enum:Identifier
Variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^impl Variant {$/;"	c
Variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^pub struct Variant {$/;"	s
Variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Variant = TableEnumDeserializer<'de>;$/;"	t	implementation:DottedTableDeserializer
Variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    type Variant = TableEnumDeserializer<'de>;$/;"	t	implementation:InlineTableDeserializer
VariantAccess	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub trait VariantAccess<'de>: Sized {$/;"	i
VariantDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, E> de::VariantAccess<'de> for VariantDeserializer<'de, E>$/;"	c	module:content
VariantDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pub struct VariantDeserializer<'de, E>$/;"	s	module:content
VariantRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    impl<'de, 'a, E> de::VariantAccess<'de> for VariantRefDeserializer<'a, 'de, E>$/;"	c	module:content
VariantRefDeserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    struct VariantRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
Vec	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Vec<T>$/;"	c
Vec	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, T, E> IntoDeserializer<'de, E> for Vec<T>$/;"	c
VecAttr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^impl<'c, T> VecAttr<'c, T> {$/;"	c
VecAttr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^struct VecAttr<'c, T> {$/;"	s
VecInPlaceVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        impl<'a, 'de, T> Visitor<'de> for VecInPlaceVisitor<'a, T>$/;"	c	function:deserialize_in_place
VecInPlaceVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        struct VecInPlaceVisitor<'a, T: 'a>(&'a mut Vec<T>);$/;"	s	function:deserialize_in_place
VecVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        impl<'de, T> Visitor<'de> for VecVisitor<T>$/;"	c	function:deserialize
VecVisitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        struct VecVisitor<T> {$/;"	s	function:deserialize
Visitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub trait Visitor<'de>: Sized {$/;"	i
Visitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for Visitor {$/;"	c	method:DatetimeFromString::deserialize
Visitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^        struct Visitor;$/;"	s	method:DatetimeFromString::deserialize
Visitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^        impl<'de> de::Visitor<'de> for Visitor {$/;"	c	method:Map::deserialize
Visitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^        struct Visitor;$/;"	s	method:Map::deserialize
Void	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^enum Void {}$/;"	g
W	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^impl<W> StrWrite for &'_ mut W$/;"	c
Wanted	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    Wanted {$/;"	e	enum:ErrorKind
Wanted	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    Wanted {$/;"	e	enum:Error
Whitespace	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    Whitespace(&'a str),$/;"	e	enum:Token
Wrapping	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Wrapping<T>$/;"	c
Wrapping	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl<T> Serialize for Wrapping<T>$/;"	c
WriteWrapper	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^impl<W> StrWrite for WriteWrapper<W>$/;"	c
WriteWrapper	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^pub struct WriteWrapper<W>(pub W);$/;"	s
Yes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    Yes,$/;"	e	enum:Untagged
Z	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    Z,$/;"	e	enum:Offset
__Nonexhaustive	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    __Nonexhaustive,$/;"	e	enum:ErrorKind
__Nonexhaustive	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    __Nonexhaustive,$/;"	e	enum:Error
__deserialize_content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn __deserialize_content<V>($/;"	P	interface:Deserializer
__deserialize_content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn __deserialize_content<V>($/;"	f	module:content
__private	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/lib.rs	/^pub mod __private;$/;"	n
__private_serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/doc.rs	/^macro_rules! __private_serialize {$/;"	M
__private_visit_untagged_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn __private_visit_untagged_option<D>(self, deserializer: D) -> Result<Self::Value, ()>$/;"	f
__private_visit_untagged_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn __private_visit_untagged_option<D>(self, _: D) -> Result<Self::Value, ()>$/;"	P	interface:Visitor
__serialize_unimplemented	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/doc.rs	/^macro_rules! __serialize_unimplemented {$/;"	M
__serialize_unimplemented_helper	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/doc.rs	/^macro_rules! __serialize_unimplemented_helper {$/;"	M
__serialize_unimplemented_method	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/doc.rs	/^macro_rules! __serialize_unimplemented_method {$/;"	M
_emit_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn _emit_key(&mut self, state: &State<'_>) -> Result<(), Error> {$/;"	P	implementation:Serializer
_marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatInternallyTaggedAccess
_marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatMapAccess
_marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatStructAccess
_private	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    _private: (),$/;"	m	struct:DatetimeParseError
a	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^impl<'a> Display for Expected + 'a {$/;"	c
actually_private	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/lib.rs	/^mod actually_private {$/;"	n
add	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    fn add(self, rhs: usize) -> Self {$/;"	P	implementation:TreeIndex
add_dotted_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn add_dotted_key($/;"	P	implementation:Deserializer
add_key_context	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    pub(crate) fn add_key_context(&mut self, key: &str) {$/;"	P	implementation:Error
add_lookup_byte	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^fn add_lookup_byte(lookup: &mut [u8; 16], byte: u8) {$/;"	f
aliases	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn aliases(&self) -> Vec<String> {$/;"	P	implementation:Field
aliases	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn aliases(&self) -> Vec<String> {$/;"	P	implementation:Variant
alignments	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    alignments: Vec<Vec<Alignment>>,$/;"	m	struct:Allocations
all	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn all() {$/;"	f	module:tests
all_fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub fn all_fields(&'a self) -> Box<Iterator<Item = &'a Field<'a>> + 'a> {$/;"	P	implementation:Data
all_type_params	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^        all_type_params: HashSet<syn::Ident>,$/;"	m	struct:with_bound::FindTyParams
allocate_alignment	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn allocate_alignment(&mut self, alignment: Vec<Alignment>) -> AlignmentIndex {$/;"	P	implementation:Allocations
allocate_cow	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn allocate_cow(&mut self, cow: CowStr<'a>) -> CowIndex {$/;"	P	implementation:Allocations
allocate_link	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn allocate_link(&mut self, ty: LinkType, url: CowStr<'a>, title: CowStr<'a>) -> LinkIndex {$/;"	P	implementation:Allocations
allocs	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    allocs: Allocations<'a>,$/;"	m	struct:FirstPass
allocs	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    allocs: Allocations<'a>,$/;"	m	struct:Parser
allow_duplciate_after_longer_table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    allow_duplciate_after_longer_table: bool,$/;"	m	struct:Deserializer
allow_transparent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/check.rs	/^fn allow_transparent(field: &Field, derive: Derive) -> bool {$/;"	f
append	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn append(&mut self, item: T) -> TreeIndex {$/;"	P	implementation:Tree
append_code_text	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn append_code_text(&mut self, remaining_space: usize, start: usize, end: usize) {$/;"	P	implementation:FirstPass
append_html_line	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn append_html_line(&mut self, remaining_space: usize, start: usize, end: usize) {$/;"	P	implementation:FirstPass
append_text	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn append_text(&mut self, start: usize, end: usize) {$/;"	P	implementation:Tree
apply_to_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    pub fn apply_to_field(&self, field: &str) -> String {$/;"	P	implementation:RenameRule
apply_to_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    pub fn apply_to_variant(&self, variant: &str) -> String {$/;"	P	implementation:RenameRule
array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    array: bool,$/;"	m	struct:Header
array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    array: bool,$/;"	m	struct:MapVisitor
array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    array: bool,$/;"	m	struct:Table
array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn array(&mut self) -> Result<(Span, Vec<Value<'a>>), Error> {$/;"	P	implementation:Deserializer
array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    array: Option<ArraySettings>,$/;"	m	struct:Settings
array_impls	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! array_impls {$/;"	M
array_impls	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^macro_rules! array_impls {$/;"	M
array_type	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn array_type(&mut self, type_: ArrayState) -> Result<(), Error> {$/;"	P	implementation:Serializer
as_array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn as_array(&self) -> Option<&Vec<Value>> {$/;"	P	implementation:Value
as_array_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn as_array_mut(&mut self) -> Option<&mut Vec<Value>> {$/;"	P	implementation:Value
as_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn as_bool(&self) -> Option<bool> {$/;"	P	implementation:Value
as_datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn as_datetime(&self) -> Option<&Datetime> {$/;"	P	implementation:Value
as_float	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn as_float(&self) -> Option<f64> {$/;"	P	implementation:Value
as_integer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn as_integer(&self) -> Option<i64> {$/;"	P	implementation:Value
as_ref	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:CowStr
as_ref	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:InlineStr
as_ref	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^    fn as_ref(&self) -> &TokenStream {$/;"	P	implementation:Fragment
as_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/utf8.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Encode
as_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub fn as_str(&self) -> Option<&str> {$/;"	P	implementation:content::Content
as_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn as_str(&self) -> Option<&str> {$/;"	P	implementation:Value
as_table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn as_table(&self) -> Option<&Table> {$/;"	P	implementation:Value
as_table_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn as_table_mut(&mut self) -> Option<&mut Table> {$/;"	P	implementation:Value
associated_type_usage	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^        associated_type_usage: Vec<&'ast syn::TypePath>,$/;"	m	struct:with_bound::FindTyParams
ast	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/mod.rs	/^pub mod ast;$/;"	n
at	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    at: Option<usize>,$/;"	m	struct:ErrorInner
at	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    at: usize,$/;"	m	struct:Table
at_most_one	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn at_most_one(mut self) -> Result<Option<T>, ()> {$/;"	P	implementation:VecAttr
atomic_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! atomic_impl {$/;"	M
atomic_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^macro_rules! atomic_impl {$/;"	M
attr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/mod.rs	/^pub mod attr;$/;"	n
attrs	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub attrs: attr::Container,$/;"	m	struct:Container
attrs	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub attrs: attr::Field,$/;"	m	struct:Field
attrs	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub attrs: attr::Variant,$/;"	m	struct:Variant
bad_comment	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn bad_comment() {$/;"	f	module:tests
bad_type	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn bad_type(self, what: Unsupported) -> S::Error {$/;"	f
bad_type	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn bad_type(what: Unsupported) -> M::Error {$/;"	f
bare_cr_bad	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn bare_cr_bad() {$/;"	f	module:tests
basic_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn basic_string(&mut self, start: usize) -> Result<Token<'a>, Error> {$/;"	P	implementation:Tokenizer
basic_strings	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn basic_strings() {$/;"	f	module:tests
begin_list_item	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    begin_list_item: bool,$/;"	m	struct:FirstPass
body	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    body: ItemBody,$/;"	m	struct:Item
body_size	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn body_size() {$/;"	f	module:test
bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Deserialize<'de> for bool {$/;"	c
border_skip	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^    fn border_skip() {$/;"	f	module:simd_test
borrow	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn borrow(&self) -> &str {$/;"	P	implementation:CowStr
borrow	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    borrow: Option<syn::Meta>,$/;"	m	struct:Variant
borrow	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    fn borrow(&self) -> &str {$/;"	P	implementation:Spanned
borrow_cow_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^pub fn borrow_cow_bytes<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrow_cow_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^pub fn borrow_cow_str<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrowable_lifetimes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn borrowable_lifetimes($/;"	f
borrowed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    borrowed: BorrowedLifetimes,$/;"	m	struct:Parameters
borrowed_lifetimes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn borrowed_lifetimes(cont: &Container) -> BorrowedLifetimes {$/;"	f
borrowed_lifetimes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    borrowed_lifetimes: BTreeSet<syn::Lifetime>,$/;"	m	struct:Field
borrowed_lifetimes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn borrowed_lifetimes(&self) -> &BTreeSet<syn::Lifetime> {$/;"	P	implementation:Field
both	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    both: bool, \/\/ can both open and close$/;"	m	struct:InlineEl
bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/lib.rs	/^mod bound;$/;"	n
box_forwarded_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! box_forwarded_impl {$/;"	M
brief	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/main.rs	/^fn brief(program: &str) -> String {$/;"	f
broken_link_callback	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    broken_link_callback: BrokenLinkCallback<'a>,$/;"	m	struct:Parser
broken_links_called_only_once	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn broken_links_called_only_once() {$/;"	f	module:test
buf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/utf8.rs	/^    buf: [u8; 4],$/;"	m	struct:Encode
build_generics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn build_generics(cont: &Container, borrowed: &BorrowedLifetimes) -> syn::Generics {$/;"	f
build_generics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn build_generics(cont: &Container) -> syn::Generics {$/;"	f
build_table_indices	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^fn build_table_indices<'de>(tables: &[Table<'de>]) -> HashMap<Vec<Cow<'de, str>>, Vec<usize>> {$/;"	f
build_table_pindices	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^fn build_table_pindices<'de>(tables: &[Table<'de>]) -> HashMap<Vec<Cow<'de, str>>, Vec<usize>> {$/;"	f
bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    bytes: &'a [u8],$/;"	m	struct:LineStart
bytes_scanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    pub(crate) fn bytes_scanned(&self) -> usize {$/;"	P	implementation:LineStart
c	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    c: u8,      \/\/ b'*' or b'_'$/;"	m	struct:InlineEl
calc_indent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn calc_indent(text: &[u8], max: usize) -> (usize, usize) {$/;"	f
case	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/mod.rs	/^mod case;$/;"	n
categories	/home/sammi/rust/md_puppy/src/markdown_compiling.rs	/^    pub categories: Vec<String>,$/;"	m	struct:Page
cautious	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/size_hint.rs	/^pub fn cautious(hint: Option<usize>) -> usize {$/;"	f
cdata	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub cdata: usize,$/;"	m	struct:HtmlScanGuard
char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de> Deserialize<'de> for char {$/;"	c
char_from_codepoint	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn char_from_codepoint(input: usize) -> Option<char> {$/;"	f
chars	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    chars: CrlfFold<'a>,$/;"	m	struct:Tokenizer
chars	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    chars: str::CharIndices<'a>,$/;"	m	struct:CrlfFold
check	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/check.rs	/^pub fn check(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ctxt.rs	/^    pub fn check(self) -> Result<(), Vec<syn::Error>> {$/;"	P	implementation:Ctxt
check	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/mod.rs	/^mod check;$/;"	n
check_adjacent_tag_conflict	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/check.rs	/^fn check_adjacent_tag_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_expected_indices	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^    fn check_expected_indices(bytes: &[u8], expected: &[usize], skip: usize) {$/;"	f	module:simd_test
check_flatten	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/check.rs	/^fn check_flatten(cx: &Ctxt, cont: &Container) {$/;"	f
check_flatten_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/check.rs	/^fn check_flatten_field(cx: &Ctxt, style: Style, field: &Field) {$/;"	f
check_from_and_try_from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/check.rs	/^fn check_from_and_try_from(cx: &Ctxt, cont: &mut Container) {$/;"	f
check_getter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/check.rs	/^fn check_getter(cx: &Ctxt, cont: &Container) {$/;"	f
check_identifier	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/check.rs	/^fn check_identifier(cx: &Ctxt, cont: &Container) {$/;"	f
check_internal_tag_field_name_conflict	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/check.rs	/^fn check_internal_tag_field_name_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_overflow	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        fn check_overflow<E>(secs: u64, nanos: u32) -> Result<(), E>$/;"	f	method:Duration::deserialize
check_overflow	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        fn check_overflow<E>(secs: u64, nanos: u32) -> Result<(), E>$/;"	f	method:SystemTime::deserialize
check_transparent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/check.rs	/^fn check_transparent(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check_variant_skip_attrs	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/check.rs	/^fn check_variant_skip_attrs(cx: &Ctxt, cont: &Container) {$/;"	f
child	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub child: Option<TreeIndex>,$/;"	m	struct:Node
clear	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn clear(&mut self) {$/;"	P	implementation:CodeDelims
clear	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn clear(&mut self) {$/;"	P	implementation:LinkStack
clear	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:Map
clone	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:CowStr
clone	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:CowStrDeserializer
clone	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:StringDeserializer
clone	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:Map
cmp	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    fn cmp(&self, other: &Self) -> Ordering {$/;"	P	implementation:Spanned
code_block_kind_check_fenced	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn code_block_kind_check_fenced() {$/;"	f	module:test
code_block_kind_check_indented	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn code_block_kind_check_indented() {$/;"	f	module:test
col	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    col: usize,$/;"	m	struct:ErrorInner
collect_lifetimes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn collect_lifetimes(ty: &syn::Type, out: &mut BTreeSet<syn::Lifetime>) {$/;"	f
collect_lifetimes_from_tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn collect_lifetimes_from_tokens(tokens: TokenStream, out: &mut BTreeSet<syn::Lifetime>) {$/;"	f
collect_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn collect_map<K, V, I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
collect_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn collect_seq<I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
collect_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn collect_str<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> fmt::Result$/;"	P	implementation:Formatter
collect_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
command_line	/home/sammi/rust/md_puppy/src/main.rs	/^mod command_line;$/;"	n
comment_token	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn comment_token(&mut self, start: usize) -> Token<'a> {$/;"	P	implementation:Tokenizer
compute_lookup	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^pub(crate) fn compute_lookup(options: &Options) -> [u8; 16] {$/;"	f
compute_mask	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^    unsafe fn compute_mask(bytes: &[u8], offset: usize) -> i32 {$/;"	f	module:simd
compute_mask	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^unsafe fn compute_mask(lut: &[u8; 16], bytes: &[u8], ix: usize) -> i32 {$/;"	f
config_fail_test	/home/sammi/rust/md_puppy/src/command_line.rs	/^    fn config_fail_test() {$/;"	f	module:tests
config_test	/home/sammi/rust/md_puppy/src/command_line.rs	/^    fn config_test() {$/;"	f	module:tests
constrain	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^pub fn constrain<T: ?Sized>(t: &T) -> &T {$/;"	f
contains_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn contains_key<Q: ?Sized>(&self, key: &Q) -> bool$/;"	P	implementation:Map
content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        content: &'a Content<'de>,$/;"	m	struct:content::ContentRefDeserializer
content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        content: Content<'de>,$/;"	m	struct:content::ContentDeserializer
content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub content: &'static str,$/;"	m	struct:content::TagContentOtherFieldVisitor
content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub content: &'static str,$/;"	m	struct:content::TagOrContentFieldVisitor
content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub content: Content<'de>,$/;"	m	struct:content::TaggedContent
content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^mod content {$/;"	n
content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^mod content {$/;"	n
content	/home/sammi/rust/md_puppy/src/markdown_compiling.rs	/^    pub content: String,$/;"	m	struct:Page
content_to_html	/home/sammi/rust/md_puppy/src/markdown_compiling.rs	/^pub fn content_to_html(filename: &str) -> Result<(), Box<dyn Error>> {$/;"	f
continue_list	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn continue_list(&mut self, start: usize, ch: u8, index: u64) {$/;"	P	implementation:FirstPass
core	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/lib.rs	/^    mod core {$/;"	n	module:lib
count	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    count: usize,$/;"	m	struct:InlineEl
count	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    count: usize,$/;"	m	struct:MapDeserializer
count	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    count: usize,$/;"	m	struct:SeqDeserializer
count_header_cols	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn count_header_cols($/;"	f
cows	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    cows: Vec<CowStr<'a>>,$/;"	m	struct:Allocations
cowstr_char_to_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn cowstr_char_to_string() {$/;"	f	module:test_special_string
cowstr_size	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn cowstr_size() {$/;"	f	module:test_special_string
create_html_escape_table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^const fn create_html_escape_table() -> [u8; 256] {$/;"	f
create_lookup	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^    const fn create_lookup() -> [u8; 16] {$/;"	f	module:simd
create_lut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub(crate) fn create_lut(options: &Options) -> LookupTable {$/;"	f
create_node	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn create_node(&mut self, item: T) -> TreeIndex {$/;"	P	implementation:Tree
ctxt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/mod.rs	/^mod ctxt;$/;"	n
cur	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    cur: Option<TreeIndex>,$/;"	m	struct:Tree
cur	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn cur(&self) -> Option<TreeIndex> {$/;"	P	implementation:Tree
cur	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    cur: usize,$/;"	m	struct:MapVisitor
cur_parent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    cur_parent: usize,$/;"	m	struct:MapVisitor
current	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn current(&mut self) -> usize {$/;"	P	implementation:Tokenizer
custom	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn custom<T>(msg: T) -> Self$/;"	P	implementation:Error
custom	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/doc.rs	/^    fn custom<T>(_: T) -> Self$/;"	P	implementation:Error
custom	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn custom<T: Display>(_msg: T) -> Self {$/;"	P	implementation:Error
custom	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn custom(at: Option<usize>, s: String) -> Error {$/;"	P	implementation:Error
custom	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn custom<T: fmt::Display>(msg: T) -> Error {$/;"	P	implementation:Error
custom	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn custom<T: fmt::Display>(msg: T) -> Error {$/;"	P	implementation:Serializer::Error
custom_serde_path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn custom_serde_path(&self) -> Option<&syn::Path> {$/;"	P	implementation:Container
cx	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    cx: &'c Ctxt,$/;"	m	struct:Attr
cx	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    cx: &'c Ctxt,$/;"	m	struct:VecAttr
data	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub data: Data<'a>,$/;"	m	struct:Container
date	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    date: Option<Date>,$/;"	m	struct:Datetime
date	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    date: &'a str,$/;"	m	struct:DatetimeDeserializer
date	/home/sammi/rust/md_puppy/src/markdown_compiling.rs	/^    pub date: String,$/;"	m	struct:Page
datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn datetime($/;"	P	implementation:Deserializer
datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs	/^mod datetime;$/;"	n
day	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    day: u8,$/;"	m	struct:Date
de	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/lib.rs	/^pub mod de;$/;"	n
de	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/mod.rs	/^pub mod de;$/;"	n
de	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/lib.rs	/^mod de;$/;"	n
de	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    de: &'b mut Deserializer<'de>,$/;"	m	struct:MapVisitor
de	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs	/^pub mod de;$/;"	n
de_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    de_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Container
de_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    de_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Field
de_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    de_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Variant
de_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Container
de_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Field
de_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Variant
de_lifetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    fn de_lifetime(&self) -> syn::Lifetime {$/;"	P	implementation:BorrowedLifetimes
de_lifetime_def	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    fn de_lifetime_def(&self) -> Option<syn::LifetimeDef> {$/;"	P	implementation:BorrowedLifetimes
debug_tree	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^        fn debug_tree<T>($/;"	f	function:fmt
decide_identifier	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn decide_identifier($/;"	f
decide_tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn decide_tag($/;"	f
declaration	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub declaration: usize,$/;"	m	struct:HtmlScanGuard
declare_error_trait	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^macro_rules! declare_error_trait {$/;"	M
declare_error_trait	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^macro_rules! declare_error_trait {$/;"	M
default	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn default() -> Self {$/;"	P	implementation:ItemBody
default	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    default: Default,$/;"	m	struct:Container
default	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    default: Default,$/;"	m	struct:Field
default	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn default(&self) -> &Default {$/;"	P	implementation:Container
default	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn default(&self) -> &Default {$/;"	P	implementation:Field
default	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    fn default() -> Self {$/;"	P	implementation:Map
delegate	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    delegate: S,$/;"	m	struct:TaggedSerializer
delegate_iterator	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^macro_rules! delegate_iterator {$/;"	M
delim_run_can_close	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn delim_run_can_close(s: &str, suffix: &str, run_len: usize, ix: usize) -> bool {$/;"	f
delim_run_can_open	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn delim_run_can_open(s: &str, suffix: &str, run_len: usize, ix: usize) -> bool {$/;"	f
deny_unknown_fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    deny_unknown_fields: bool,$/;"	m	struct:Container
deny_unknown_fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn deny_unknown_fields(&self) -> bool {$/;"	P	implementation:Container
depth	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    depth: usize,$/;"	m	struct:MapVisitor
deref	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn deref(&self) -> &str {$/;"	P	implementation:CowStr
deref	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn deref(&self) -> &str {$/;"	P	implementation:InlineStr
deref_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^macro_rules! deref_impl {$/;"	M
derive_deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/lib.rs	/^pub fn derive_deserialize(input: TokenStream) -> TokenStream {$/;"	f
derive_serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/lib.rs	/^pub fn derive_serialize(input: TokenStream) -> TokenStream {$/;"	f
describe	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn describe(&self) -> &'static str {$/;"	P	implementation:Token
description	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/doc.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/sammi/rust/md_puppy/src/markdown_compiling.rs	/^    pub description: String,$/;"	m	struct:Page
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn deserialize<D>(deserializer: D) -> Result<IgnoredAny, D::Error>$/;"	P	implementation:IgnoredAny
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Duration::deserialize::Field
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SystemTime::deserialize::Field
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:deserialize::Field
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:range::Field
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Deserialize
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:CString
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Deserialize
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Duration
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:IpAddr
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:OsString
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Path
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:PathBuf
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:PhantomData
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SocketAddr
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:String
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SystemTime
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:T
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:bool
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:char
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:str
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:u8
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	interface:Deserialize
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:DeserializeSeed
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<T, D::Error>$/;"	f
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/seed.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f	module:private
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:content::Content
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagContentOtherFieldVisitor
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentFieldVisitor
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f	module:content
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    deserialize: RenameRule,$/;"	m	struct:RenameAllRules
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    deserialize: String,$/;"	m	struct:Name
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Datetime, D::Error>$/;"	P	implementation:Datetime
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    fn deserialize<D>(deserializer: D) -> Result<DatetimeFromString, D::Error>$/;"	P	implementation:DatetimeFromString
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    fn deserialize<D>(deserializer: D) -> Result<DatetimeKey, D::Error>$/;"	P	implementation:DatetimeKey
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Map
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Spanned<T>, D::Error>$/;"	f
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Value, D::Error>$/;"	P	implementation:Value
deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:DatetimeOrTable
deserialize_adjacently_tagged_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_adjacently_tagged_enum($/;"	f
deserialize_aliases	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    deserialize_aliases: Vec<String>,$/;"	m	struct:Name
deserialize_aliases	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn deserialize_aliases(&self) -> Vec<String> {$/;"	P	implementation:Name
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, E>$/;"	f	function:missing_field
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:DatetimeFieldDeserializer
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:Deserializer
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:MapVisitor
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:StrDeserializer
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:ValueDeserializer
deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, crate::de::Error>$/;"	P	implementation:Value
deserialize_body	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_byte_buf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_byte_buf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_custom_identifier	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_custom_identifier($/;"	f
deserialize_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! deserialize_enum {$/;"	M
deserialize_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_enum<V>($/;"	P	interface:Deserializer
deserialize_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_enum<V>($/;"	f	module:content
deserialize_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_enum($/;"	f
deserialize_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:Deserializer
deserialize_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:MapVisitor
deserialize_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:ValueDeserializer
deserialize_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn deserialize_enum<V>($/;"	P	implementation:Value
deserialize_externally_tagged_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_externally_tagged_enum($/;"	f
deserialize_externally_tagged_newtype_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_externally_tagged_newtype_variant($/;"	f
deserialize_externally_tagged_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_externally_tagged_variant($/;"	f
deserialize_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_float	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_float<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_from(type_from: &syn::Type) -> Fragment {$/;"	f
deserialize_generated_identifier	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_generated_identifier($/;"	f
deserialize_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_identifier	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_identifier	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_identifier	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_identifier($/;"	f
deserialize_ignored_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_ignored_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_in_place	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	P	implementation:String
deserialize_in_place	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	P	interface:Deserialize
deserialize_in_place_body	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_in_place_body(_cont: &Container, _params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_in_place_body	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_in_place_body(cont: &Container, params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_integer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_integer<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_internally_tagged_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_internally_tagged_enum($/;"	f
deserialize_internally_tagged_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_internally_tagged_variant($/;"	f
deserialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_map($/;"	f
deserialize_map_in_place	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_map_in_place($/;"	f
deserialize_name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn deserialize_name(&self) -> String {$/;"	P	implementation:Name
deserialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	interface:Deserializer
deserialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_newtype_struct<V>($/;"	f	module:content
deserialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, Self::Er/;"	f
deserialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_newtype_struct($/;"	f
deserialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	implementation:MapVisitor
deserialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	implementation:ValueDeserializer
deserialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	implementation:Value
deserialize_newtype_struct_in_place	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_newtype_struct_in_place(params: &Parameters, field: &Field) -> TokenStream {$/;"	f
deserialize_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	function:missing_field
deserialize_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:MapVisitor
deserialize_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Error>$/;"	P	implementation:ValueDeserializer
deserialize_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, crate::de::Error>$/;"	P	implementation:Value
deserialize_other	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn deserialize_other<V>() -> Result<V, E> {$/;"	f
deserialize_renamed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    deserialize_renamed: bool,$/;"	m	struct:Name
deserialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn deserialize_seq<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_seq($/;"	f
deserialize_seq_in_place	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_seq_in_place($/;"	f
deserialize_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_struct<V>($/;"	P	interface:Deserializer
deserialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_struct<V>($/;"	f	module:content
deserialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_struct($/;"	f
deserialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_struct<V>($/;"	P	implementation:Deserializer
deserialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_struct<V>($/;"	P	implementation:MapVisitor
deserialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_struct<V>($/;"	P	implementation:StrDeserializer
deserialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn deserialize_struct<V>($/;"	P	implementation:ValueDeserializer
deserialize_struct_as_map_visitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_struct_as_map_visitor($/;"	f
deserialize_struct_as_struct_in_place_visitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_struct_as_struct_in_place_visitor($/;"	f
deserialize_struct_as_struct_visitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_struct_as_struct_visitor($/;"	f
deserialize_struct_in_place	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_struct_in_place($/;"	f
deserialize_transparent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_try_from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_try_from(type_try_from: &syn::Type) -> Fragment {$/;"	f
deserialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_tuple($/;"	f
deserialize_tuple_in_place	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_tuple_in_place($/;"	f
deserialize_tuple_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_tuple_struct<V>($/;"	P	interface:Deserializer
deserialize_tuple_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_tuple_struct<V>($/;"	f	module:content
deserialize_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn deserialize_unit_struct<V>($/;"	P	interface:Deserializer
deserialize_unit_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn deserialize_unit_struct<V>($/;"	f	module:content
deserialize_unit_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_unit_struct(params: &Parameters, cattrs: &attr::Container) -> Fragment {$/;"	f
deserialize_untagged_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_untagged_enum($/;"	f
deserialize_untagged_newtype_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_untagged_newtype_variant($/;"	f
deserialize_untagged_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn deserialize_untagged_variant($/;"	f
deserialize_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    deserialize_with: Option<syn::ExprPath>,$/;"	m	struct:Field
deserialize_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    deserialize_with: Option<syn::ExprPath>,$/;"	m	struct:Variant
deserialize_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn deserialize_with(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Field
deserialize_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn deserialize_with(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Variant
dest	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    dest: CowStr<'a>,$/;"	m	struct:LinkDef
digit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^fn digit(chars: &mut str::Chars<'_>) -> Result<u8, DatetimeParseError> {$/;"	f
disable_all_links	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn disable_all_links(&mut self) {$/;"	P	implementation:LinkStack
disabled_ix	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    disabled_ix: usize,$/;"	m	struct:LinkStack
display	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn display<T: fmt::Display>(&mut self, t: T, type_: ArrayState) -> Result<(), Error> {$/;"	P	implementation:Serializer
do_pretty	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^        fn do_pretty(value: &str) -> Repr {$/;"	f	method:Serializer::emit_str
doc	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/mod.rs	/^pub mod doc;$/;"	n
dotted_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn dotted_key(&mut self) -> Result<Vec<(Span, Cow<'a, str>)>, Error> {$/;"	P	implementation:Deserializer
drop	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ctxt.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Ctxt
dry_run	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/main.rs	/^fn dry_run(text: &str, opts: Options) {$/;"	f
dst	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    dst: &'a mut String,$/;"	m	struct:Serializer
dummy	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/lib.rs	/^mod dummy;$/;"	n
e	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    e: E<'a>,$/;"	m	struct:Value
eat	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn eat(&mut self, expected: Token<'a>) -> Result<bool, Error> {$/;"	P	implementation:Deserializer
eat	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn eat(&mut self, expected: Token<'a>) -> Result<bool, Error> {$/;"	P	implementation:Tokenizer
eat_comment	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn eat_comment(&mut self) -> Result<bool, Error> {$/;"	P	implementation:Deserializer
eat_comment	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn eat_comment(&mut self) -> Result<bool, Error> {$/;"	P	implementation:Tokenizer
eat_newline_or_eof	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn eat_newline_or_eof(&mut self) -> Result<(), Error> {$/;"	P	implementation:Deserializer
eat_newline_or_eof	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn eat_newline_or_eof(&mut self) -> Result<(), Error> {$/;"	P	implementation:Tokenizer
eat_spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn eat_spanned(&mut self, expected: Token<'a>) -> Result<Option<Span>, Error> {$/;"	P	implementation:Deserializer
eat_spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn eat_spanned(&mut self, expected: Token<'a>) -> Result<Option<Span>, Error> {$/;"	P	implementation:Tokenizer
eat_whitespace	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn eat_whitespace(&mut self) -> Result<(), Error> {$/;"	P	implementation:Deserializer
eat_whitespace	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn eat_whitespace(&mut self) -> Result<(), Error> {$/;"	P	implementation:Tokenizer
eatc	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn eatc(&mut self, ch: char) -> bool {$/;"	P	implementation:Tokenizer
effective_style	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn effective_style(variant: &Variant) -> Style {$/;"	f
effective_style	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn effective_style(variant: &Variant) -> Style {$/;"	f
elements	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        elements: Vec<Content>,$/;"	m	struct:content::SerializeSeq
elements	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        elements: Vec<Content>,$/;"	m	struct:content::SerializeTuple
emit_array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn emit_array(&mut self, first: &Cell<bool>, len: Option<usize>) -> Result<(), Error> {$/;"	P	implementation:Serializer
emit_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn emit_key(&mut self, type_: ArrayState) -> Result<(), Error> {$/;"	P	implementation:Serializer
emit_key_part	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn emit_key_part(&mut self, key: &State<'_>) -> Result<bool, Error> {$/;"	f	method:Serializer::emit_str
emit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn emit_str(&mut self, value: &str, is_key: bool) -> Result<(), Error> {$/;"	P	implementation:Serializer
emit_table_header	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn emit_table_header(&mut self, state: &State<'_>) -> Result<(), Error> {$/;"	f	method:Serializer::emit_str
encode	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/utf8.rs	/^pub fn encode(c: char) -> Encode {$/;"	f
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    end: usize,$/;"	m	struct:Item
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub fn end(self) -> Result<(), E> {$/;"	f
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn end(mut self) -> Result<M::Ok, M::Error> {$/;"	f	module:content
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn end(self) -> Result<Content, E> {$/;"	f	module:content
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn end(self) -> Result<(), Self::Error> {$/;"	f
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^    fn end(self) -> Result<Ok, Error> {$/;"	f
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeMap
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeSeq
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeStruct
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeStructVariant
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTuple
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTupleStruct
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTupleVariant
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    end: Option<usize>,$/;"	m	struct:SpannedDeserializer
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    end: usize,$/;"	m	struct:Value
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    pub fn end(&mut self) -> Result<(), Error> {$/;"	P	implementation:Deserializer
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn end(self) -> Result<(), Error> {$/;"	P	implementation:Serializer::SerializeSeq
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn end(self) -> Result<(), Error> {$/;"	P	implementation:Serializer::SerializeTable
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    end: usize,$/;"	m	struct:Spanned
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    pub fn end(&self) -> usize {$/;"	P	implementation:Spanned
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub end: usize,$/;"	m	struct:Span
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn end(self) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:SerializeMap
end	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn end(self) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:SerializeVec
end_newline	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    end_newline: bool,$/;"	m	struct:HtmlWriter
end_tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    fn end_tag(&mut self, tag: Tag) -> io::Result<()> {$/;"	f
entities	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/lib.rs	/^mod entities;$/;"	n
entries	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        entries: Vec<(Content, Content)>,$/;"	m	struct:content::SerializeMap
entry	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn entry<S>(&mut self, key: S) -> Entry<'_>$/;"	P	implementation:Map
enum_from_ast	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^fn enum_from_ast<'a>($/;"	f
eof	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn eof(&self) -> Error {$/;"	P	implementation:Deserializer
eq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn eq(&self, other: &CowStr) -> bool {$/;"	P	implementation:CowStr
eq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn eq(&self, other: &InlineStr) -> bool {$/;"	P	implementation:InlineStr
eq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/symbol.rs	/^    fn eq(&self, word: &Symbol) -> bool {$/;"	P	implementation:Ident
eq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/symbol.rs	/^    fn eq(&self, word: &Symbol) -> bool {$/;"	P	implementation:Path
eq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:Map
eq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    fn eq(&self, other: &Self) -> bool {$/;"	P	implementation:Spanned
err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    err: ErrorImpl,$/;"	m	struct:Error
err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::ContentDeserializer
err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::ContentRefDeserializer
err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::EnumDeserializer
err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::EnumRefDeserializer
err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::MapDeserializer
err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::MapRefDeserializer
err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::SeqDeserializer
err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::SeqRefDeserializer
err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::VariantDeserializer
err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::VariantRefDeserializer
err	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn err(input: &str, err: Error) {$/;"	f	module:tests
error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    error: PhantomData<E>,$/;"	m	struct:MapDeserializer
error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::ContentSerializer
error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeMap
error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeSeq
error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeStruct
error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeStructVariant
error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTuple
error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTupleStruct
error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTupleVariant
error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^    error: PhantomData<Error>,$/;"	m	struct:Impossible
error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn error(&self, at: usize, kind: ErrorKind) -> Error {$/;"	P	implementation:Deserializer
error_spanned_by	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ctxt.rs	/^    pub fn error_spanned_by<A: ToTokens, T: Display>(&self, obj: A, msg: T) {$/;"	P	implementation:Ctxt
errors	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ctxt.rs	/^    errors: RefCell<Option<Vec<syn::Error>>>,$/;"	m	struct:Ctxt
escape	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/lib.rs	/^pub mod escape;$/;"	n
escape_href	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^pub fn escape_href<W>(mut w: W, s: &str) -> io::Result<()>$/;"	f
escape_html	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^    pub(crate) fn escape_html<W: StrWrite>(mut w: W, s: &str) -> io::Result<()> {$/;"	f	module:simd
escape_html	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^pub fn escape_html<W: StrWrite>(w: W, s: &str) -> io::Result<()> {$/;"	f
escape_html_scalar	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^fn escape_html_scalar<W: StrWrite>(mut w: W, s: &str) -> io::Result<()> {$/;"	f
escape_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn escape_key(&mut self, key: &str) -> Result<(), Error> {$/;"	P	implementation:Serializer
exhaustive_search	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^    fn exhaustive_search() {$/;"	f	module:simd_test
expand_derive_deserialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^pub fn expand_derive_deserialize($/;"	f
expand_derive_serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^pub fn expand_derive_serialize($/;"	f
expect	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn expect(&mut self, expected: Token<'a>) -> Result<(), Error> {$/;"	P	implementation:Deserializer
expect	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn expect(&mut self, expected: Token<'a>) -> Result<(), Error> {$/;"	P	implementation:Tokenizer
expect_spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn expect_spanned(&mut self, expected: Token<'a>) -> Result<Span, Error> {$/;"	P	implementation:Deserializer
expect_spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn expect_spanned(&mut self, expected: Token<'a>) -> Result<Span, Error> {$/;"	P	implementation:Tokenizer
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IgnoredAny
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:range::Field::deserialize::FieldVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration::deserialize::DurationVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize_in_place
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	module:range
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        pub expecting: &'static str,$/;"	m	struct:range::RangeVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    expecting: &'static str,$/;"	m	struct:FromStrVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ArrayVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BoolVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BytesVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CStringVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CharVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OsStringVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PathBufVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PathVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PhantomDataVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StrVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringInPlaceVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:UnitVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Visitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        expecting: &'static str,$/;"	m	struct:content::TaggedContentVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::ContentVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagOrContentVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f	module:content
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:borrow_cow_str::CowStrVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::InternallyTaggedUnitVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagContentOtherFieldVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagOrContentFieldVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::UntaggedUnitVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    expecting: Option<String>,$/;"	m	struct:Container
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn expecting(&self) -> Option<&str> {$/;"	P	implementation:Container
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Datetime::deserialize::DatetimeVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:DatetimeFromString::deserialize::Visitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:DatetimeKey::deserialize::FieldVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Map::deserialize::Visitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f	function:deserialize
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Value::deserialize::ValueVisitor
expecting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:DatetimeOrTable
expr_is_missing	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn expr_is_missing(field: &Field, cattrs: &attr::Container) -> Fragment {$/;"	f
extend	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    fn extend<T>(&mut self, iter: T)$/;"	P	implementation:Map
field_i	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn field_i(i: usize) -> Ident {$/;"	f
fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fields: &'static [&'static str],$/;"	m	struct:FlatStructAccess
fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStruct
fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStructVariant
fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStructVariantAsMapValue
fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleStruct
fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleVariant
fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fields: Vec<(&'static str, Content)>,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub fields: Vec<Field<'a>>,$/;"	m	struct:Variant
fields_from_ast	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^fn fields_from_ast<'a>($/;"	f
file_checker	/home/sammi/rust/md_puppy/src/command_line.rs	/^pub fn file_checker(config: Input) -> Result<(), Box<dyn Error>> {$/;"	f
file_checker_test	/home/sammi/rust/md_puppy/src/command_line.rs	/^    fn file_checker_test() {$/;"	f	module:tests
filename	/home/sammi/rust/md_puppy/src/command_line.rs	/^    pub filename: String,$/;"	m	struct:Input
find	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn find(&mut self, open_ix: TreeIndex, count: usize) -> Option<TreeIndex> {$/;"	P	implementation:CodeDelims
find_match	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn find_match($/;"	P	implementation:InlineStack
finish_list	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn finish_list(&mut self, ix: usize) {$/;"	P	implementation:FirstPass
finish_list_marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    fn finish_list_marker($/;"	P	implementation:LineStart
first	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    first: bool,$/;"	m	struct:Header
first	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    first: Cell<bool>,$/;"	m	struct:SerializeSeq
first_dup_tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    first_dup_tokens: TokenStream,$/;"	m	struct:VecAttr
fix_linecol	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn fix_linecol<F>(&mut self, f: F)$/;"	P	implementation:Error
fix_offset	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn fix_offset<F>(&mut self, f: F)$/;"	P	implementation:Error
flatten	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    flatten: bool,$/;"	m	struct:Field
flatten	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn flatten(&self) -> bool {$/;"	P	implementation:Field
float	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn float(&mut self, s: &'a str, after_decimal: Option<&'a str>) -> Result<f64, Error> {$/;"	P	implementation:Deserializer
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CowStr
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:InlineStr
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {$/;"	f
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OneOf
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Unexpected
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:a
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:str
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Expected
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BorrowedBytesDeserializer
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BorrowedStrDeserializer
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BytesDeserializer
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CowStrDeserializer
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ExpectedInMap
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ExpectedInSeq
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StrDeserializer
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringDeserializer
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:U32Deserializer
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:UnitDeserializer
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/doc.rs	/^    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Unsupported
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^mod fmt;$/;"	n
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseError
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/symbol.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Symbol
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Date
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Datetime
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:DatetimeParseError
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Offset
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Time
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> Result<(), fmt::Error> {$/;"	P	implementation:Map
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Serializer::Error
fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Value
fmt_primitives	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^macro_rules! fmt_primitives {$/;"	M
footnote_offsets	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn footnote_offsets() {$/;"	f	module:test
foreach_special_simd	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^    unsafe fn foreach_special_simd<F>($/;"	f	module:simd
format_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^fn format_u8(mut n: u8, out: &mut [u8]) -> usize {$/;"	f
forward_to_deserialize_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/macros.rs	/^macro_rules! forward_to_deserialize_any {$/;"	M
forward_to_deserialize_any_helper	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/macros.rs	/^macro_rules! forward_to_deserialize_any_helper {$/;"	M
forward_to_deserialize_any_method	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/macros.rs	/^macro_rules! forward_to_deserialize_any_method {$/;"	M
forward_to_deserialize_other	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^macro_rules! forward_to_deserialize_other {$/;"	M
forwarded_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! forwarded_impl {$/;"	M
fragment	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/lib.rs	/^mod fragment;$/;"	n
from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn from(c: char) -> Self {$/;"	P	implementation:CowStr
from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn from(c: char) -> Self {$/;"	P	implementation:InlineStr
from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn from(s: &'a str) -> Self {$/;"	P	implementation:CowStr
from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn from(s: String) -> Self {$/;"	P	implementation:CowStr
from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn from(self) -> Self::Deserializer {$/;"	f
from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn from(self) -> Self::Deserializer;$/;"	P	interface:IdentifierDeserializer
from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn from(e: Error) -> Self {$/;"	P	implementation:Error
from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn from(val: &'a str) -> Value {$/;"	P	implementation:Value
from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn from(val: BTreeMap<S, V>) -> Value {$/;"	P	implementation:Value
from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn from(val: HashMap<S, V>) -> Value {$/;"	P	implementation:Value
from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn from(val: Vec<V>) -> Value {$/;"	P	implementation:Value
from_ast	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub fn from_ast($/;"	P	implementation:Container
from_ast	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn from_ast($/;"	P	implementation:Field
from_ast	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, item: &syn::DeriveInput) -> Self {$/;"	P	implementation:Container
from_ast	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, variant: &syn::Variant) -> Self {$/;"	P	implementation:Variant
from_attrs	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn from_attrs($/;"	P	implementation:Name
from_bounds	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/size_hint.rs	/^pub fn from_bounds<I>(iter: &I) -> Option<usize>$/;"	f
from_iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    fn from_iter<T>(iter: T) -> Self$/;"	P	implementation:Map
from_kind	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn from_kind(at: Option<usize>, kind: ErrorKind) -> Error {$/;"	P	implementation:Error
from_slice	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^pub fn from_slice<'de, T>(bytes: &'de [u8]) -> Result<T, Error>$/;"	f
from_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    pub fn from_str(rename_all_str: &str) -> Result<Self, ParseError> {$/;"	P	implementation:RenameRule
from_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    fn from_str(date: &str) -> Result<Datetime, DatetimeParseError> {$/;"	P	implementation:Datetime
from_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^pub fn from_str<'de, T>(s: &'de str) -> Result<T, Error>$/;"	f
from_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn from_str(s: &str) -> Result<Value, Self::Err> {$/;"	P	implementation:Value
from_utf8_lossy	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/mod.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> &str {$/;"	f	module:string
from_utf8_lossy	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/mod.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> Cow<str> {$/;"	f	module:string
generics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    generics: syn::Generics,$/;"	m	struct:Parameters
generics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub generics: &'a syn::Generics,$/;"	m	struct:Container
generics	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    generics: syn::Generics,$/;"	m	struct:Parameters
get	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn get(self) -> usize {$/;"	P	implementation:TreeIndex
get	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn get(&self) -> bool {$/;"	P	implementation:BoolAttr
get	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn get(self) -> Option<T> {$/;"	P	implementation:Attr
get	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn get(self) -> Vec<T> {$/;"	P	implementation:VecAttr
get	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn get(&self) -> &Value {$/;"	P	implementation:OccupiedEntry
get	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn get<Q: ?Sized>(&self, key: &Q) -> Option<&Value>$/;"	P	implementation:Map
get	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn get<I: Index>(&self, index: I) -> Option<&Value> {$/;"	P	implementation:Value
get_entity	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/entities.rs	/^pub(crate) fn get_entity(bytes: &[u8]) -> Option<&'static str> {$/;"	f
get_html_end_tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn get_html_end_tag(text_bytes: &[u8]) -> Option<&'static str> {$/;"	f
get_lit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn get_lit_str<'a>(cx: &Ctxt, attr_name: Symbol, lit: &'a syn::Lit) -> Result<&'a syn::LitStr, (/;"	f
get_lit_str2	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn get_lit_str2<'a>($/;"	f
get_lowerbound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn get_lowerbound(&self, c: u8, count: usize, both: bool) -> usize {$/;"	P	implementation:InlineStack
get_member	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn get_member(params: &Parameters, field: &Field, member: &Member) -> TokenStream {$/;"	f
get_multiple_renames	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn get_multiple_renames<'a>($/;"	f
get_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn get_mut(&mut self) -> &mut Value {$/;"	P	implementation:OccupiedEntry
get_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn get_mut<Q: ?Sized>(&mut self, key: &Q) -> Option<&mut Value>$/;"	P	implementation:Map
get_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    pub fn get_mut(&mut self) -> &mut T {$/;"	P	implementation:Spanned
get_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn get_mut<I: Index>(&mut self, index: I) -> Option<&mut Value> {$/;"	P	implementation:Value
get_ref	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    pub fn get_ref(&self) -> &T {$/;"	P	implementation:Spanned
get_renames	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn get_renames<'a>($/;"	f
get_ser_and_de	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn get_ser_and_de<'a, 'b, T, F>($/;"	f
get_serde_meta_items	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^pub fn get_serde_meta_items(cx: &Ctxt, attr: &syn::Attribute) -> Result<Vec<syn::NestedMeta>, ()/;"	f
get_title	/home/sammi/rust/md_puppy/src/command_line.rs	/^fn get_title() -> String {$/;"	f
get_where_predicates	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn get_where_predicates($/;"	f
get_with_tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn get_with_tokens(self) -> Option<(TokenStream, T)> {$/;"	P	implementation:Attr
getter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    getter: Option<syn::ExprPath>,$/;"	m	struct:Field
getter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn getter(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Field
handle_emphasis	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn handle_emphasis(&mut self) {$/;"	P	implementation:Parser
handle_inline	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn handle_inline(&mut self) {$/;"	P	implementation:Parser
handle_inline_pass1	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn handle_inline_pass1(&mut self) {$/;"	P	implementation:Parser
has_flatten	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    has_flatten: bool,$/;"	m	struct:Container
has_flatten	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn has_flatten(&self) -> bool {$/;"	P	implementation:Container
has_getter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    has_getter: bool,$/;"	m	struct:Parameters
has_getter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub fn has_getter(&self) -> bool {$/;"	P	implementation:Data
hash	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	P	implementation:CowStr
hash	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	P	implementation:InlineStr
hash	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	P	implementation:Spanned
header	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    header: Vec<(Span, Cow<'a, str>)>,$/;"	m	struct:Table
headers_equal	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^fn headers_equal<'a, 'b>(hdr_a: &[(Span, Cow<'a, str>)], hdr_b: &[(Span, Cow<'b, str>)]) -> bool/;"	f
helper	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/size_hint.rs	/^fn helper(bounds: (usize, Option<usize>)) -> Option<usize> {$/;"	f
hex	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn hex(&mut self, start: usize, i: usize, len: usize) -> Result<char, Error> {$/;"	P	implementation:Tokenizer
hour	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    hour: u8,$/;"	m	struct:Time
html	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/lib.rs	/^pub mod html;$/;"	n
html_scan_guard	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    html_scan_guard: HtmlScanGuard,$/;"	m	struct:Parser
html_scan_tests	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^    mod html_scan_tests {$/;"	n	module:simd
ident	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub ident: syn::Ident,$/;"	m	struct:Container
ident	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub ident: syn::Ident,$/;"	m	struct:Variant
identifier	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    identifier: Identifier,$/;"	m	struct:Container
identifier	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn identifier(&self) -> Identifier {$/;"	P	implementation:Container
ignored_any	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^mod ignored_any;$/;"	n
impl_copy_clone	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^macro_rules! impl_copy_clone {$/;"	M
impl_deserialize_num	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! impl_deserialize_num {$/;"	M
impl_into_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^macro_rules! impl_into_value {$/;"	M
impls	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^mod impls;$/;"	n
impls	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^mod impls;$/;"	n
impossible	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^mod impossible;$/;"	n
in_place	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    fn in_place(self) -> InPlaceImplGenerics<'a> {$/;"	P	implementation:DeImplGenerics
in_place	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    fn in_place(self) -> InPlaceTypeGenerics<'a> {$/;"	P	implementation:DeTypeGenerics
indent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    indent: usize,$/;"	m	struct:ArraySettings
index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn index(&self, ix: AlignmentIndex) -> &Self::Output {$/;"	P	implementation:Allocations
index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn index(&self, ix: CowIndex) -> &Self::Output {$/;"	P	implementation:Allocations
index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn index(&self, ix: LinkIndex) -> &Self::Output {$/;"	P	implementation:Allocations
index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    fn index(&self, ix: TreeIndex) -> &Self::Output {$/;"	P	implementation:Tree
index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    fn index(&self, index: &Q) -> &Value {$/;"	f
index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn index(&self, index: I) -> &Value {$/;"	f
index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn index<'a>(&self, val: &'a Value) -> Option<&'a Value> {$/;"	P	implementation:String
index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn index<'a>(&self, val: &'a Value) -> Option<&'a Value> {$/;"	P	implementation:str
index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn index<'a>(&self, val: &'a Value) -> Option<&'a Value> {$/;"	P	implementation:usize
index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn index<'a>(&self, val: &'a Value) -> Option<&'a Value> {$/;"	f
index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn index<'a>(&self, val: &'a Value) -> Option<&'a Value>;$/;"	P	interface:Index
index_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    fn index_mut(&mut self, ix: TreeIndex) -> &mut Node<T> {$/;"	P	implementation:Tree
index_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    fn index_mut(&mut self, index: &Q) -> &mut Value {$/;"	f
index_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn index_mut(&mut self, index: I) -> &mut Value {$/;"	f
index_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn index_mut<'a>(&self, val: &'a mut Value) -> Option<&'a mut Value> {$/;"	P	implementation:String
index_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn index_mut<'a>(&self, val: &'a mut Value) -> Option<&'a mut Value> {$/;"	P	implementation:str
index_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn index_mut<'a>(&self, val: &'a mut Value) -> Option<&'a mut Value> {$/;"	P	implementation:usize
index_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn index_mut<'a>(&self, val: &'a mut Value) -> Option<&'a mut Value> {$/;"	f
index_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn index_mut<'a>(&self, val: &'a mut Value) -> Option<&'a mut Value>;$/;"	P	interface:Index
inline_stack	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    inline_stack: InlineStack,$/;"	m	struct:Parser
inline_table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn inline_table(&mut self) -> Result<(Span, Vec<TablePair<'a>>), Error> {$/;"	P	implementation:Deserializer
inlinestr_ascii	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn inlinestr_ascii() {$/;"	f	module:test_special_string
inlinestr_fits_twentytwo	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn inlinestr_fits_twentytwo() {$/;"	f	module:test_special_string
inlinestr_not_fits_twentythree	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn inlinestr_not_fits_twentythree() {$/;"	f	module:test_special_string
inlinestr_unicode	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn inlinestr_unicode() {$/;"	f	module:test_special_string
inner	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    inner: HashMap<usize, VecDeque<TreeIndex>>,$/;"	m	struct:CodeDelims
inner	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    inner: Parser<'a>,$/;"	m	struct:OffsetIter
inner	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    inner: Vec<LinkStackEl>,$/;"	m	struct:LinkStack
inner	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    inner: [u8; MAX_INLINE_STR_LEN],$/;"	m	struct:InlineStr
inner	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    inner: Box<ErrorInner>,$/;"	m	struct:Error
input	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    input: &'a str,$/;"	m	struct:Deserializer
input	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    input: &'a str,$/;"	m	struct:Tokenizer
input	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn input(&self) -> &'a str {$/;"	P	implementation:Tokenizer
insert	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn insert(&mut self, count: usize, ix: TreeIndex) {$/;"	P	implementation:CodeDelims
insert	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn insert<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	P	implementation:VecAttr
insert	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn insert(&mut self, k: String, v: Value) -> Option<Value> {$/;"	P	implementation:Map
insert	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn insert(&mut self, value: Value) -> Value {$/;"	P	implementation:OccupiedEntry
insert	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn insert(self, value: Value) -> &'a mut Value {$/;"	P	implementation:VacantEntry
insert_toml	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/macros.rs	/^pub fn insert_toml(root: &mut Value, path: &[&str], value: Value) {$/;"	f
int_to_int	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! int_to_int {$/;"	M
int_to_uint	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! int_to_uint {$/;"	M
integer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn integer(&self, s: &'a str, radix: u32) -> Result<i64, Error> {$/;"	P	implementation:Deserializer
integer128	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/lib.rs	/^mod integer128;$/;"	n
internals	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/lib.rs	/^mod internals;$/;"	n
interrupt_paragraph_by_list	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn interrupt_paragraph_by_list(&self, suffix: &[u8]) -> bool {$/;"	P	implementation:FirstPass
into_cow	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn into_cow(self, input: &str) -> Cow<'_, str> {$/;"	P	implementation:MaybeString
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn into_deserializer(self) -> Self::Deserializer;$/;"	P	interface:IntoDeserializer
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn into_deserializer(self) -> BytesDeserializer<'a, E> {$/;"	f
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn into_deserializer(self) -> CowStrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	f
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn into_deserializer(self) -> StrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn into_deserializer(self) -> StringDeserializer<E> {$/;"	f
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn into_deserializer(self) -> U32Deserializer<E> {$/;"	f
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn into_deserializer(self) -> UnitDeserializer<E> {$/;"	f
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn into_deserializer(self) -> Self {$/;"	f	module:content
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	P	implementation:Deserializer
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	P	implementation:MapVisitor
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	P	implementation:StrDeserializer
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	P	implementation:Value
into_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn into_deserializer(self) -> Self {$/;"	P	implementation:Value
into_inner	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    pub fn into_inner(self) -> T {$/;"	P	implementation:Spanned
into_iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:Map
into_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn into_mut(self) -> &'a mut Value {$/;"	P	implementation:OccupiedEntry
into_offset_iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub fn into_offset_iter(self) -> OffsetIter<'a> {$/;"	P	implementation:Parser
into_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    pub fn into_string(self) -> String {$/;"	P	implementation:CowStr
invalid_type	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn invalid_type(self, exp: &Expected) -> E {$/;"	f	module:content
is_array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn is_array(&self) -> bool {$/;"	P	implementation:Value
is_ascii_alpha	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn is_ascii_alpha(c: u8) -> bool {$/;"	f
is_ascii_alphanumeric	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn is_ascii_alphanumeric(c: u8) -> bool {$/;"	f
is_ascii_letterdigitdash	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn is_ascii_letterdigitdash(c: u8) -> bool {$/;"	f
is_ascii_punctuation	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/puncttable.rs	/^pub fn is_ascii_punctuation(c: u8) -> bool {$/;"	f
is_ascii_whitespace	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn is_ascii_whitespace(c: u8) -> bool {$/;"	f
is_ascii_whitespace_no_nl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn is_ascii_whitespace_no_nl(c: u8) -> bool {$/;"	f
is_at_eol	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    pub(crate) fn is_at_eol(&self) -> bool {$/;"	P	implementation:LineStart
is_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn is_bool(&self) -> bool {$/;"	P	implementation:Value
is_cow	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn is_cow(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_datetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn is_datetime(&self) -> bool {$/;"	P	implementation:Value
is_digit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn is_digit(c: u8) -> bool {$/;"	f
is_empty	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Tree
is_empty	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Map
is_fenced	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub fn is_fenced(&self) -> bool {$/;"	P	implementation:CodeBlockKind
is_float	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn is_float(&self) -> bool {$/;"	P	implementation:Value
is_html_tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn is_html_tag(tag: &[u8]) -> bool {$/;"	f
is_human_readable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	P	interface:Deserializer
is_human_readable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	P	interface:Serializer
is_implicitly_borrowed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn is_implicitly_borrowed(ty: &syn::Type) -> bool {$/;"	f
is_implicitly_borrowed_reference	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn is_implicitly_borrowed_reference(ty: &syn::Type) -> bool {$/;"	f
is_indented	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub fn is_indented(&self) -> bool {$/;"	P	implementation:CodeBlockKind
is_inline	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn is_inline(&self) -> bool {$/;"	P	implementation:ItemBody
is_integer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn is_integer(&self) -> bool {$/;"	P	implementation:Value
is_keylike	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^fn is_keylike(ch: char) -> bool {$/;"	f
is_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn is_none(&self) -> bool {$/;"	P	implementation:Default
is_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn is_option(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_packed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    is_packed: bool,$/;"	m	struct:Parameters
is_packed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    is_packed: bool,$/;"	m	struct:Container
is_packed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn is_packed(&self) -> bool {$/;"	P	implementation:Container
is_packed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    is_packed: bool,$/;"	m	struct:Parameters
is_populated	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn is_populated(&self) -> bool {$/;"	P	implementation:CodeDelims
is_primitive_path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn is_primitive_path(path: &syn::Path, primitive: &str) -> bool {$/;"	f
is_primitive_type	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn is_primitive_type(ty: &syn::Type, primitive: &str) -> bool {$/;"	f
is_punctuation	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/puncttable.rs	/^pub fn is_punctuation(c: char) -> bool {$/;"	f
is_reference	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn is_reference(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_remote	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    is_remote: bool,$/;"	m	struct:Parameters
is_slice_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn is_slice_u8(ty: &syn::Type) -> bool {$/;"	f
is_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn is_some(self) -> bool {$/;"	P	implementation:Identifier
is_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn is_str(ty: &syn::Type) -> bool {$/;"	f
is_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn is_str(&self) -> bool {$/;"	P	implementation:Value
is_table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn is_table(&self) -> bool {$/;"	P	implementation:Value
is_valid_unquoted_attr_value_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn is_valid_unquoted_attr_value_char(c: u8) -> bool {$/;"	f
item	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub item: T,$/;"	m	struct:Node
item_to_event	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn item_to_event<'a>(item: Item, text: &'a str, allocs: &Allocations<'a>) -> Event<'a> {$/;"	f
item_to_tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn item_to_tag<'a>(item: &Item, allocs: &Allocations<'a>) -> Tag<'a> {$/;"	f
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    iter: I,$/;"	m	struct:HtmlWriter
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    iter: iter::Fuse<I>,$/;"	m	struct:MapDeserializer
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    iter: iter::Fuse<I>,$/;"	m	struct:SeqDeserializer
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        iter: <&'a [(Content<'de>, Content<'de>)] as IntoIterator>::IntoIter,$/;"	m	struct:content::MapRefDeserializer
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        iter: <&'a [Content<'de>] as IntoIterator>::IntoIter,$/;"	m	struct:content::SeqRefDeserializer
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        iter: <Vec<(Content<'de>, Content<'de>)> as IntoIterator>::IntoIter,$/;"	m	struct:content::MapDeserializer
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        iter: <Vec<Content<'de>> as IntoIterator>::IntoIter,$/;"	m	struct:content::SeqDeserializer
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    iter: slice::Iter<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatMapAccess
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    iter: slice::IterMut<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatInternallyTaggedAccess
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    iter: slice::IterMut<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatStructAccess
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    iter: IntoIterImpl,$/;"	m	struct:IntoIter
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    iter: IterImpl<'a>,$/;"	m	struct:Iter
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    iter: IterMutImpl<'a>,$/;"	m	struct:IterMut
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    iter: KeysImpl<'a>,$/;"	m	struct:Keys
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    iter: ValuesImpl<'a>,$/;"	m	struct:Values
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn iter(&self) -> Iter<'_> {$/;"	P	implementation:Map
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    iter: <Map<String, Value> as IntoIterator>::IntoIter,$/;"	m	struct:MapDeserializer
iter	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    iter: vec::IntoIter<Value>,$/;"	m	struct:SeqDeserializer
iter_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn iter_mut(&mut self) -> IterMut<'_> {$/;"	P	implementation:Map
iterate_special_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn iterate_special_bytes<F, T>($/;"	f
iterate_special_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^pub(crate) fn iterate_special_bytes<F, T>($/;"	f
iterator_len_hint	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^fn iterator_len_hint<I>(iter: &I) -> Option<usize>$/;"	f
ix	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    ix: usize,$/;"	m	struct:LineStart
key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        key: Option<Content>,$/;"	m	struct:content::SerializeMap
key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    key: Cow<'a, str>,$/;"	m	struct:StrDeserializer
key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    key: Vec<String>,$/;"	m	struct:ErrorInner
key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn key(&self) -> &String {$/;"	P	implementation:Entry
key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn key(&self) -> &String {$/;"	P	implementation:OccupiedEntry
key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn key(&self) -> &String {$/;"	P	implementation:VacantEntry
key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    key: &'a mut String,$/;"	m	struct:DatetimeOrTable
key_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn key_value(&mut self) -> Result<Line<'a>, Error> {$/;"	P	implementation:Deserializer
keylike	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn keylike(&mut self, start: usize) -> Token<'a> {$/;"	P	implementation:Tokenizer
keylike	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn keylike() {$/;"	f	module:tests
keys	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn keys(&self) -> Keys<'_> {$/;"	P	implementation:Map
kind	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    kind: ErrorKind,$/;"	m	struct:ErrorInner
last_line_blank	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    last_line_blank: bool,$/;"	m	struct:FirstPass
len	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        len: usize,$/;"	m	struct:private::SeedTupleVariant
len	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Map
len	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    len: Option<usize>,$/;"	m	struct:SerializeSeq
lib	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/lib.rs	/^mod lib {$/;"	n
lifetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    lifetime: PhantomData<&'de ()>,$/;"	m	struct:MapDeserializer
line	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn line(&mut self) -> Result<Option<Line<'a>>, Error> {$/;"	P	implementation:Deserializer
line	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    line: Option<usize>,$/;"	m	struct:ErrorInner
line_col	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    pub fn line_col(&self) -> Option<(usize, usize)> {$/;"	P	implementation:Error
link_def_at_eof	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn link_def_at_eof() {$/;"	f	module:test
link_stack	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    link_stack: LinkStack,$/;"	m	struct:Parser
link_type	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub link_type: LinkType,$/;"	m	struct:BrokenLink
linklabel	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/lib.rs	/^mod linklabel;$/;"	n
links	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    links: Vec<(LinkType, CowStr<'a>, CowStr<'a>)>,$/;"	m	struct:Allocations
list_nesting	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    list_nesting: usize,$/;"	m	struct:FirstPass
literal	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    literal: bool,$/;"	m	struct:StringSettings
literal_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn literal_string(&mut self, start: usize) -> Result<Token<'a>, Error> {$/;"	P	implementation:Tokenizer
literal_strings	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn literal_strings() {$/;"	f	module:tests
local	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    local: syn::Ident,$/;"	m	struct:Parameters
lone_hashtag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn lone_hashtag() {$/;"	f	module:test
long_match	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^    fn long_match() {$/;"	f	module:simd_test
lookup_table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    lookup_table: &'b LookupTable,$/;"	m	struct:FirstPass
lots_of_backslashes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn lots_of_backslashes() {$/;"	f	module:test
lower_bounds	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    lower_bounds: [usize; 7],$/;"	m	struct:InlineStack
macros	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/lib.rs	/^mod macros;$/;"	n
macros	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs	/^pub mod macros;$/;"	n
main	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/main.rs	/^pub fn main() -> std::io::Result<()> {$/;"	f
main	/home/sammi/rust/md_puppy/src/main.rs	/^fn main() {$/;"	f
make_code_span	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn make_code_span(&mut self, open: TreeIndex, close: TreeIndex, preceding_backslash: bool) {$/;"	P	implementation:Parser
map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        map: A,$/;"	m	struct:private::MapAsEnum
map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    map: A,$/;"	m	struct:MapAccessDeserializer
map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        map: M,$/;"	m	struct:content::SerializeStructVariantAsMapValue
map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        map: M,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    map: &'a mut M,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs	/^pub mod map;$/;"	n
map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    map: MapImpl<K, V>,$/;"	m	struct:Map
map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    map: Map<String, Value>,$/;"	m	struct:SerializeMap
map_as_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub fn map_as_enum<A>(map: A) -> MapAsEnum<A> {$/;"	f	module:private
map_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! map_impl {$/;"	M
map_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^macro_rules! map_impl {$/;"	M
mark_has_flatten	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn mark_has_flatten(&mut self) {$/;"	P	implementation:Container
mark_transparent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn mark_transparent(&mut self) {$/;"	P	implementation:Field
markdown_compiling	/home/sammi/rust/md_puppy/src/main.rs	/^mod markdown_compiling;$/;"	n
markdown_parse_test	/home/sammi/rust/md_puppy/src/markdown_compiling.rs	/^    fn markdown_parse_test() {$/;"	f	module:tests
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            marker: PhantomData<T>,$/;"	m	struct:deserialize::VecVisitor
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    marker: PhantomData<A>,$/;"	m	struct:ArrayVisitor
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    marker: PhantomData<T>,$/;"	m	struct:OptionVisitor
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    marker: PhantomData<T>,$/;"	m	struct:PhantomDataVisitor
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        marker: PhantomData<E>,$/;"	m	struct:private::UnitOnly
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedBytesDeserializer
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedStrDeserializer
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BytesDeserializer
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:CowStrDeserializer
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:NeverDeserializer
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:SeqDeserializer
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StrDeserializer
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StringDeserializer
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:U32Deserializer
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:UnitDeserializer
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedStrDeserializer
marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StrDeserializer
max	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    max: usize,$/;"	m	struct:MapVisitor
max_inline_str_len_atleast_five	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn max_inline_str_len_atleast_five() {$/;"	f	module:test_special_string
member	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub member: syn::Member,$/;"	m	struct:Field
member_message	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/check.rs	/^fn member_message(member: &Member) -> String {$/;"	f
message	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    message: String,$/;"	m	struct:ErrorInner
min_hrule_offset	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    min_hrule_offset: usize,$/;"	m	struct:LineStart
minute	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    minute: u8,$/;"	m	struct:Time
missing_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>$/;"	f
month	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    month: u8,$/;"	m	struct:Date
multichunk	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^        fn multichunk() {$/;"	f	module:simd::html_scan_tests
mut_if	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn mut_if(is_mut: bool) -> Option<TokenStream> {$/;"	f
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        name: &'static str,$/;"	m	struct:content::TagOrContentVisitor
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStruct
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStructVariant
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStructVariantAsMapValue
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleStruct
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleVariant
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    name: &'static str,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    name: Name,$/;"	m	struct:Container
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    name: Name,$/;"	m	struct:Field
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    name: Name,$/;"	m	struct:Variant
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    name: Symbol,$/;"	m	struct:Attr
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    name: Symbol,$/;"	m	struct:VecAttr
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	P	implementation:Container
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	P	implementation:Field
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	P	implementation:Variant
name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    name: Cow<'a, str>,$/;"	m	struct:DottedTableDeserializer
names	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    names: &'static [&'static str],$/;"	m	struct:OneOf
nanosecond	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    nanosecond: u32,$/;"	m	struct:Time
needs_deserialize_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn needs_deserialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
needs_serialize_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn needs_serialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
never	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    never: !,$/;"	m	struct:NeverDeserializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    fn new(iter: I, writer: W) -> Self {$/;"	f
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn new() -> Self {$/;"	P	implementation:Allocations
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn new() -> Self {$/;"	P	implementation:CodeDelims
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn new(text: &'a str, options: Options, lookup_table: &'b LookupTable) -> FirstPass<'a, 'b> /;"	P	implementation:FirstPass
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub fn new(text: &'a str) -> Parser<'a> {$/;"	P	implementation:Parser
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    pub(crate) fn new(bytes: &[u8]) -> LineStart {$/;"	P	implementation:LineStart
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    fn new(i: usize) -> Self {$/;"	P	implementation:TreeIndex
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn new() -> Self {$/;"	P	implementation:ArrayVisitor
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn new(expecting: &'static str) -> Self {$/;"	P	implementation:FromStrVisitor
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub fn new(iter: I) -> Self {$/;"	f
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub fn new(map: A) -> Self {$/;"	P	implementation:MapAccessDeserializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub fn new(seq: A) -> Self {$/;"	P	implementation:SeqAccessDeserializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub fn new(value: &'a [u8]) -> Self {$/;"	P	implementation:BytesDeserializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub fn new(value: &'de [u8]) -> Self {$/;"	P	implementation:BorrowedBytesDeserializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub fn new(value: &'de str) -> BorrowedStrDeserializer<'de, E> {$/;"	P	implementation:BorrowedStrDeserializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn new() -> Self {$/;"	P	implementation:content::ContentVisitor
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn new(map: &'a [(Content<'de>, Content<'de>)]) -> Self {$/;"	f	module:content
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn new(map: Vec<(Content<'de>, Content<'de>)>) -> Self {$/;"	f	module:content
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn new(name: &'static str) -> Self {$/;"	P	implementation:content::TagOrContentVisitor
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn new(slice: &'a [Content<'de>]) -> Self {$/;"	f	module:content
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn new(vec: Vec<Content<'de>>) -> Self {$/;"	f	module:content
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub fn new(content: &'a Content<'de>) -> Self {$/;"	P	implementation:content::ContentRefDeserializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub fn new(content: Content<'de>) -> Self {$/;"	P	implementation:content::ContentDeserializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub fn new(name: &'static str, expecting: &'static str) -> Self {$/;"	P	implementation:content::TaggedContentVisitor
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	P	implementation:content::InternallyTaggedUnitVisitor
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	P	implementation:content::UntaggedUnitVisitor
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub fn new(variant: Content<'de>, value: Option<Content<'de>>) -> EnumDeserializer<'de, /;"	f	module:content
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn new($/;"	P	implementation:FlatMapAccess
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn new($/;"	P	implementation:FlatStructAccess
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        pub fn new() -> Self {$/;"	P	implementation:content::ContentSerializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	P	implementation:content::SerializeStructVariantAsMapValue
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	P	implementation:content::SerializeTupleVariantAsMapValue
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn new(map: &'a mut M, name: &'static str) -> FlatMapSerializeStructVariantAsMapValue<'a, M>/;"	f
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    fn new(cont: &Container) -> Self {$/;"	P	implementation:Parameters
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ctxt.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Ctxt
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    fn new(cont: &Container) -> Self {$/;"	P	implementation:Parameters
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn new(key: Cow<'a, str>) -> StrDeserializer<'a> {$/;"	P	implementation:StrDeserializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn new(tokens: Tokenizer<'a>, array: bool, require_newline_after_table: bool) -> Header<'a> /;"	P	implementation:Header
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn new(value: Value<'a>) -> ValueDeserializer<'a> {$/;"	P	implementation:ValueDeserializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    pub fn new(input: &'a str) -> Deserializer<'a> {$/;"	P	implementation:Deserializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Map
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn new() -> Self {$/;"	P	implementation:Serializer::Categorize
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    pub fn new(dst: &'a mut String) -> Serializer<'a> {$/;"	P	implementation:Serializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn new(input: &'a str) -> Tokenizer<'a> {$/;"	P	implementation:Tokenizer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn new(map: Map<String, Value>) -> Self {$/;"	P	implementation:MapDeserializer
new	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn new(vec: Vec<Value>) -> Self {$/;"	P	implementation:SeqDeserializer
new	/home/sammi/rust/md_puppy/src/command_line.rs	/^    pub fn new(args: &[String]) -> Result<Input, &str> {$/;"	P	implementation:Input
new	/home/sammi/rust/md_puppy/src/markdown_compiling.rs	/^    pub fn new(filename: String) -> Result<Page, Box<dyn Error>> {$/;"	P	implementation:Page
new_ext	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub fn new_ext(text: &'a str, options: Options) -> Parser<'a> {$/;"	P	implementation:Parser
new_with_broken_link_callback	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub fn new_with_broken_link_callback($/;"	P	implementation:Parser
newtype_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn newtype_variant<T>(self) -> Result<T, Self::Error>$/;"	P	interface:VariantAccess
newtype_variant_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Self::Error>$/;"	P	interface:VariantAccess
newtype_variant_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        fn newtype_variant_seed<T>(mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:private
newtype_variant_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:private
newtype_variant_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, E>$/;"	f	module:content
newtype_variant_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Self::Error>$/;"	P	implementation:TableEnumDeserializer
next	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn next(&mut self) -> Option<Event<'a>> {$/;"	P	implementation:Parser
next	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:OffsetIter
next	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub next: Option<TreeIndex>,$/;"	m	struct:Node
next	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn next(&mut self) -> Result<Option<(Span, Cow<'a, str>)>, TokenError> {$/;"	P	implementation:Header
next	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn next(&mut self) -> Result<Option<(Span, Token<'a>)>, Error> {$/;"	P	implementation:Deserializer
next	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn next(&mut self) -> Option<(usize, char)> {$/;"	P	implementation:CrlfFold
next	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn next(&mut self) -> Result<Option<(Span, Token<'a>)>, Error> {$/;"	P	implementation:Tokenizer
next_element	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	P	interface:SeqAccess
next_element	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	f
next_element_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	P	interface:SeqAccess
next_element_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn next_element_seed<V>(&mut self, seed: V) -> Result<Option<V::Value>, Self::Error>$/;"	f
next_element_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f	module:content
next_element_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn next_element_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	P	implementation:MapVisitor
next_element_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, crate::de::Error>$/;"	P	implementation:SeqDeserializer
next_entry	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	P	interface:MapAccess
next_entry	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	f
next_entry_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	P	interface:MapAccess
next_entry_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	f
next_entry_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn next_entry_seed<TK, TV>($/;"	f
next_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	P	interface:MapAccess
next_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	f
next_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    next_key: Option<String>,$/;"	m	struct:SerializeMap
next_key_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	P	interface:MapAccess
next_key_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	f
next_key_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f	module:content
next_key_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	P	implementation:DatetimeDeserializer
next_key_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	P	implementation:InlineTableDeserializer
next_key_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	P	implementation:MapVisitor
next_key_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Error>$/;"	f
next_key_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, crate::de::Error>$/;"	P	implementation:MapDeserializer
next_pair	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn next_pair(&mut self) -> Option<(First<I::Item>, Second<I::Item>)> {$/;"	f
next_sibling	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn next_sibling(&mut self, cur_ix: TreeIndex) -> Option<TreeIndex> {$/;"	P	implementation:Tree
next_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	P	interface:MapAccess
next_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	f
next_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    next_value: Option<TablePair<'de>>,$/;"	m	struct:MapVisitor
next_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    next_value: Option<Value<'a>>,$/;"	m	struct:InlineTableDeserializer
next_value_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	P	interface:MapAccess
next_value_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	f
next_value_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:content
next_value_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	P	implementation:DatetimeDeserializer
next_value_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	P	implementation:InlineTableDeserializer
next_value_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	P	implementation:MapVisitor
next_value_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Error>$/;"	f
next_value_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, crate::de::Error>$/;"	P	implementation:MapDeserializer
no_dest_refdef	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn no_dest_refdef() {$/;"	f	module:test
no_footnote_refs_without_option	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn no_footnote_refs_without_option() {$/;"	f	module:test
node	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    node: TreeIndex,$/;"	m	struct:LinkStackEl
node_size	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn node_size() {$/;"	f	module:test
nodes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    nodes: Vec<Node<T>>,$/;"	m	struct:Tree
none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: Symbol) -> Self {$/;"	P	implementation:Attr
none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: Symbol) -> Self {$/;"	P	implementation:BoolAttr
none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: Symbol) -> Self {$/;"	P	implementation:VecAttr
nonzero_integers	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! nonzero_integers {$/;"	M
nonzero_integers	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^macro_rules! nonzero_integers {$/;"	M
nop_reserve	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^fn nop_reserve<T>(_seq: T, _n: usize) {}$/;"	f
num_as_self	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! num_as_self {$/;"	M
num_self	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! num_self {$/;"	M
number_or_date	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn number_or_date(&mut self, span: Span, s: &'a str) -> Result<Value<'a>, Error> {$/;"	P	implementation:Deserializer
numbers	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    numbers: HashMap<CowStr<'a>, usize>,$/;"	m	struct:HtmlWriter
occupied	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    occupied: OccupiedEntryImpl<'a>,$/;"	m	struct:OccupiedEntry
offset	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    offset: Option<Offset>,$/;"	m	struct:Datetime
offset_iter_issue_378	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn offset_iter_issue_378() {$/;"	f	module:test
offset_iter_issue_404	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn offset_iter_issue_404() {$/;"	f	module:test
ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^    ok: PhantomData<Ok>,$/;"	m	struct:Impossible
one	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn one(&mut self) -> Option<(usize, char)> {$/;"	P	implementation:Tokenizer
only_right_bytes_matched	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^        fn only_right_bytes_matched() {$/;"	f	module:simd::html_scan_tests
options	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    options: Options,$/;"	m	struct:FirstPass
options	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    options: Options,$/;"	m	struct:Parser
or_insert	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn or_insert(self, default: Value) -> &'a mut Value {$/;"	P	implementation:Entry
or_insert_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn or_insert_with<F>(self, default: F) -> &'a mut Value$/;"	P	implementation:Entry
original	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub original: &'a syn::DeriveInput,$/;"	m	struct:Container
original	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub original: &'a syn::Field,$/;"	m	struct:Field
original	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub original: &'a syn::Variant,$/;"	m	struct:Variant
other	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    other: bool,$/;"	m	struct:Variant
other	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn other(&self) -> bool {$/;"	P	implementation:Variant
overflow_by_addition	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    fn overflow_by_addition() {$/;"	f	module:test
overflow_list	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    fn overflow_list() {$/;"	f	module:test
parse	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/lib.rs	/^mod parse;$/;"	n
parse	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^        fn parse(input: ParseStream) -> parse::Result<Self> {$/;"	P	implementation:parse_lit_into_lifetimes::BorrowedLifetimes
parse_atx_heading	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_atx_heading(&mut self, mut ix: usize, atx_size: usize) -> usize {$/;"	P	implementation:FirstPass
parse_block	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_block(&mut self, mut start_ix: usize) -> usize {$/;"	P	implementation:FirstPass
parse_decimal	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn parse_decimal(bytes: &[u8]) -> (usize, usize) {$/;"	f
parse_fenced_code_block	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_fenced_code_block($/;"	P	implementation:FirstPass
parse_footnote	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_footnote(&mut self, start: usize) -> Option<usize> {$/;"	P	implementation:FirstPass
parse_hex	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn parse_hex(bytes: &[u8]) -> (usize, usize) {$/;"	f
parse_hrule	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_hrule(&mut self, hrule_size: usize, ix: usize) -> usize {$/;"	P	implementation:FirstPass
parse_html_block_type_1_to_5	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_html_block_type_1_to_5($/;"	P	implementation:FirstPass
parse_html_block_type_6_or_7	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_html_block_type_6_or_7($/;"	P	implementation:FirstPass
parse_indented_code_block	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_indented_code_block(&mut self, start_ix: usize, mut remaining_space: usize) -> usiz/;"	P	implementation:FirstPass
parse_integer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn parse_integer($/;"	P	implementation:Deserializer
parse_ip_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! parse_ip_impl {$/;"	M
parse_keylike	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn parse_keylike(&mut self, at: usize, span: Span, key: &'a str) -> Result<Value<'a>, Error>/;"	P	implementation:Deserializer
parse_line	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_line(&mut self, start: usize, mode: TableParseMode) -> (usize, Option<Item>) {$/;"	P	implementation:FirstPass
parse_lit_into_expr_path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn parse_lit_into_expr_path($/;"	f
parse_lit_into_lifetimes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn parse_lit_into_lifetimes($/;"	f
parse_lit_into_path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn parse_lit_into_path(cx: &Ctxt, attr_name: Symbol, lit: &syn::Lit) -> Result<syn::Path, ()> {$/;"	f
parse_lit_into_ty	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn parse_lit_into_ty(cx: &Ctxt, attr_name: Symbol, lit: &syn::Lit) -> Result<syn::Type, ()> {$/;"	f
parse_lit_into_where	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn parse_lit_into_where($/;"	f
parse_lit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn parse_lit_str<T>(s: &syn::LitStr) -> parse::Result<T>$/;"	f
parse_markdown_file	/home/sammi/rust/md_puppy/src/markdown_compiling.rs	/^fn parse_markdown_file(filename: &str) -> Result<String, Box<dyn Error>> {$/;"	f
parse_paragraph	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_paragraph(&mut self, start_ix: usize) -> usize {$/;"	P	implementation:FirstPass
parse_refdef_label	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_refdef_label(&self, start: usize) -> Option<(usize, CowStr<'a>)> {$/;"	P	implementation:FirstPass
parse_refdef_total	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_refdef_total(&mut self, start: usize) -> Option<(usize, LinkLabel<'a>, LinkDef<'a>)/;"	P	implementation:FirstPass
parse_setext_heading	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_setext_heading(&mut self, ix: usize, node_ix: TreeIndex) -> Option<usize> {$/;"	P	implementation:FirstPass
parse_socket_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! parse_socket_impl {$/;"	M
parse_table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_table(&mut self, table_cols: usize, head_start: usize, body_start: usize) -> usize /;"	P	implementation:FirstPass
parse_table_row	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_table_row(&mut self, mut ix: usize, row_cells: usize) -> Option<(usize, TreeIndex)>/;"	P	implementation:FirstPass
parse_table_row_inner	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parse_table_row_inner(&mut self, mut ix: usize, row_cells: usize) -> (usize, TreeIndex) {$/;"	P	implementation:FirstPass
parser_with_extensions	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn parser_with_extensions(text: &str) -> Parser<'_> {$/;"	f	module:test
partial_cmp	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	P	implementation:Spanned
peek	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn peek(&mut self) -> Result<Option<(Span, Token<'a>)>, Error> {$/;"	P	implementation:Deserializer
peek	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn peek(&mut self) -> Result<Option<(Span, Token<'a>)>, Error> {$/;"	P	implementation:Tokenizer
peek_grandparent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn peek_grandparent(&self) -> Option<TreeIndex> {$/;"	P	implementation:Tree
peek_one	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn peek_one(&mut self) -> Option<(usize, char)> {$/;"	P	implementation:Tokenizer
peek_up	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn peek_up(&self) -> Option<TreeIndex> {$/;"	P	implementation:Tree
pending	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pending: Option<&'a Content<'de>>,$/;"	m	struct:FlatInternallyTaggedAccess
pending_content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pending_content: Option<&'a Content<'de>>,$/;"	m	struct:FlatMapAccess
pending_content	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    pending_content: Option<Content<'de>>,$/;"	m	struct:FlatStructAccess
phantom	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        pub phantom: PhantomData<Idx>,$/;"	m	struct:range::RangeVisitor
phantom_data	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    phantom_data: PhantomData<&'de ()>,$/;"	m	struct:SpannedDeserializer
place_lifetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn place_lifetime() -> syn::LifetimeDef {$/;"	f
pop	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn pop(&mut self) -> Option<LinkStackEl> {$/;"	P	implementation:LinkStack
pop	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn pop(&mut self, ix: usize) {$/;"	P	implementation:FirstPass
pop	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn pop(&mut self) -> Option<TreeIndex> {$/;"	P	implementation:Tree
pop_all	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn pop_all(&mut self, tree: &mut Tree<Item>) {$/;"	P	implementation:InlineStack
pos	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/utf8.rs	/^    pos: usize,$/;"	m	struct:Encode
precondition	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_no_de_lifetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn precondition_no_de_lifetime(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_sized	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn precondition_sized(cx: &Ctxt, cont: &Container) {$/;"	f
prepare_enum_variant_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn prepare_enum_variant_enum($/;"	f
pretend	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/lib.rs	/^mod pretend;$/;"	n
pretend_fields_used	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/pretend.rs	/^fn pretend_fields_used(cont: &Container, is_packed: bool) -> TokenStream {$/;"	f
pretend_fields_used_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/pretend.rs	/^fn pretend_fields_used_enum(cont: &Container, variants: &[Variant]) -> TokenStream {$/;"	f
pretend_fields_used_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/pretend.rs	/^fn pretend_fields_used_struct(cont: &Container, fields: &[Field]) -> TokenStream {$/;"	f
pretend_fields_used_struct_packed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/pretend.rs	/^fn pretend_fields_used_struct_packed(cont: &Container, fields: &[Field]) -> TokenStream {$/;"	f
pretend_used	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/pretend.rs	/^pub fn pretend_used(cont: &Container, is_packed: bool) -> TokenStream {$/;"	f
pretend_variants_used	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/pretend.rs	/^fn pretend_variants_used(cont: &Container) -> TokenStream {$/;"	f
pretty	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn pretty() -> ArraySettings {$/;"	P	implementation:ArraySettings
pretty	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn pretty() -> StringSettings {$/;"	P	implementation:StringSettings
pretty	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    pub fn pretty(dst: &'a mut String) -> Serializer<'a> {$/;"	P	implementation:Serializer
pretty_array	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    pub fn pretty_array(&mut self, value: bool) -> &mut Self {$/;"	P	implementation:Serializer
pretty_array_indent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    pub fn pretty_array_indent(&mut self, value: usize) -> &mut Self {$/;"	P	implementation:Serializer
pretty_array_trailing_comma	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    pub fn pretty_array_trailing_comma(&mut self, value: bool) -> &mut Self {$/;"	P	implementation:Serializer
pretty_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    pub fn pretty_string(&mut self, value: bool) -> &mut Self {$/;"	P	implementation:Serializer
pretty_string_literal	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    pub fn pretty_string_literal(&mut self, value: bool) -> &mut Self {$/;"	P	implementation:Serializer
primitive_deserializer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^macro_rules! primitive_deserializer {$/;"	M
primitive_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^macro_rules! primitive_impl {$/;"	M
print_events	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/main.rs	/^fn print_events(text: &str, opts: Options) {$/;"	f
print_long_banner	/home/sammi/rust/md_puppy/src/command_line.rs	/^fn print_long_banner() {$/;"	f
print_short_banner	/home/sammi/rust/md_puppy/src/command_line.rs	/^pub fn print_short_banner() {$/;"	f
private	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^mod private {$/;"	n
process_mask	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^unsafe fn process_mask<F, T>($/;"	f
processing	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub processing: usize,$/;"	m	struct:HtmlScanGuard
puncttable	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/lib.rs	/^mod puncttable;$/;"	n
push	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn push(&mut self, el: InlineEl) {$/;"	P	implementation:InlineStack
push	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn push(&mut self, el: LinkStackEl) {$/;"	P	implementation:LinkStack
push	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn push(&mut self) -> TreeIndex {$/;"	P	implementation:Tree
push	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn push(&mut self, ch: char) {$/;"	P	implementation:MaybeString
push_html	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^pub fn push_html<'a, I>(s: &mut String, iter: I)$/;"	f
push_toml	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/macros.rs	/^pub fn push_toml(root: &mut Value, path: &[&str]) {$/;"	f
quote_block	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^macro_rules! quote_block {$/;"	M
quote_expr	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^macro_rules! quote_expr {$/;"	M
range	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^mod range {$/;"	n
raw_text	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    fn raw_text(&mut self) -> io::Result<()> {$/;"	f
read_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn read_string($/;"	P	implementation:Tokenizer
receiver	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/mod.rs	/^mod receiver;$/;"	n
ref_def_at_eof	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn ref_def_at_eof() {$/;"	f	module:test
refdefs	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    refdefs: HashMap<LinkLabel<'a>, LinkDef<'a>>,$/;"	m	struct:Allocations
reference	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub reference: &'a str,$/;"	m	struct:BrokenLink
relevant_type_params	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^        relevant_type_params: HashSet<syn::Ident>,$/;"	m	struct:with_bound::FindTyParams
remaining_space	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    pub(crate) fn remaining_space(&self) -> usize {$/;"	P	implementation:LineStart
remote	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn remote(&self) -> Option<&syn::Path> {$/;"	P	implementation:Container
remote	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    remote: Option<syn::Path>,$/;"	m	struct:Container
remove	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn remove(self) -> Value {$/;"	P	implementation:OccupiedEntry
remove	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn remove<Q: ?Sized>(&mut self, key: &Q) -> Option<Value>$/;"	P	implementation:Map
rename_all_rules	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn rename_all_rules(&self) -> &RenameAllRules {$/;"	P	implementation:Container
rename_all_rules	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn rename_all_rules(&self) -> &RenameAllRules {$/;"	P	implementation:Variant
rename_all_rules	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    rename_all_rules: RenameAllRules,$/;"	m	struct:Container
rename_all_rules	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    rename_all_rules: RenameAllRules,$/;"	m	struct:Variant
rename_by_rules	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn rename_by_rules(&mut self, rules: &RenameAllRules) {$/;"	P	implementation:Field
rename_by_rules	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn rename_by_rules(&mut self, rules: &RenameAllRules) {$/;"	P	implementation:Variant
rename_fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^fn rename_fields() {$/;"	f
rename_variants	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^fn rename_variants() {$/;"	f
replace_receiver	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^pub fn replace_receiver(input: &mut DeriveInput) {$/;"	f
replacement	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/try.rs	/^pub fn replacement() -> TokenStream {$/;"	f
require_newline_after_table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    require_newline_after_table: bool,$/;"	m	struct:Deserializer
require_newline_after_table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    require_newline_after_table: bool,$/;"	m	struct:Header
requires_default	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn requires_default(field: &attr::Field, _variant: Option<&attr::Variant>) -> bool {$/;"	f
reset	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn reset(&mut self) {$/;"	P	implementation:Tree
respan	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/mod.rs	/^mod respan;$/;"	n
respan	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/respan.rs	/^pub(crate) fn respan(stream: TokenStream, span: Span) -> TokenStream {$/;"	f
respan_token	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/respan.rs	/^fn respan_token(mut token: TokenTree, span: Span) -> TokenTree {$/;"	f
return_carriage_linefeed_ok	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/linklabel.rs	/^    fn return_carriage_linefeed_ok() {$/;"	f	module:test
run	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    pub fn run(mut self) -> io::Result<()> {$/;"	f
run	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn run(mut self) -> (Tree<Item>, Allocations<'a>) {$/;"	P	implementation:FirstPass
same_type	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn same_type(&self, other: &Value) -> bool {$/;"	P	implementation:Value
scalar	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub scalar: [bool; 256],$/;"	m	struct:LookupTable
scalar_iterate_special_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^pub(crate) fn scalar_iterate_special_bytes<F, T>($/;"	f
scan_all_space	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    pub(crate) fn scan_all_space(&mut self) {$/;"	P	implementation:LineStart
scan_attr_value_chars	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn scan_attr_value_chars(data: &[u8]) -> usize {$/;"	f
scan_attribute	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn scan_attribute($/;"	f
scan_attribute_name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn scan_attribute_name(data: &[u8]) -> Option<usize> {$/;"	f
scan_attribute_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn scan_attribute_value($/;"	f
scan_atx_heading	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_atx_heading(data: &[u8]) -> Option<usize> {$/;"	f
scan_autolink	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_autolink(text: &str, start_ix: usize) -> Option<(usize, CowStr<'_>, LinkType)/;"	f
scan_blank_line	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_blank_line(bytes: &[u8]) -> Option<usize> {$/;"	f
scan_blockquote_marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    pub(crate) fn scan_blockquote_marker(&mut self) -> bool {$/;"	P	implementation:LineStart
scan_blockquote_start	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_blockquote_start(data: &[u8]) -> Option<usize> {$/;"	f
scan_ch	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    fn scan_ch(&mut self, c: u8) -> bool {$/;"	P	implementation:LineStart
scan_ch	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_ch(data: &[u8], c: u8) -> usize {$/;"	f
scan_ch_repeat	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_ch_repeat(data: &[u8], c: u8) -> usize {$/;"	f
scan_closing_code_fence	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_closing_code_fence($/;"	f
scan_code_fence	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_code_fence(data: &[u8]) -> Option<(usize, u8)> {$/;"	f
scan_containers	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn scan_containers(tree: &Tree<Item>, line_start: &mut LineStart) -> usize {$/;"	f
scan_email	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn scan_email(text: &str, start_ix: usize) -> Option<(usize, CowStr<'_>)> {$/;"	f
scan_empty_list	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_empty_list(data: &[u8]) -> bool {$/;"	f
scan_entity	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_entity(bytes: &[u8]) -> (usize, Option<CowStr<'static>>) {$/;"	f
scan_eol	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_eol(bytes: &[u8]) -> Option<usize> {$/;"	f
scan_hrule	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_hrule(bytes: &[u8]) -> Result<usize, usize> {$/;"	f
scan_html_block_inner	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_html_block_inner($/;"	f
scan_html_block_tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_html_block_tag(data: &[u8]) -> (usize, &[u8]) {$/;"	f
scan_html_type_7	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_html_type_7(data: &[u8]) -> Option<usize> {$/;"	f
scan_inline_html	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn scan_inline_html(&mut self, bytes: &[u8], ix: usize) -> Option<(Vec<u8>, usize)> {$/;"	P	implementation:Parser
scan_inline_html_comment	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_inline_html_comment($/;"	f
scan_inline_html_processing	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_inline_html_processing($/;"	f
scan_inline_link	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn scan_inline_link($/;"	P	implementation:Parser
scan_link_dest	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_link_dest($/;"	f
scan_link_label	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn scan_link_label<'text, 'tree>($/;"	f
scan_link_label_rest	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/linklabel.rs	/^pub(crate) fn scan_link_label_rest<'t>($/;"	f
scan_link_title	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn scan_link_title($/;"	P	implementation:Parser
scan_list_marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    pub(crate) fn scan_list_marker(&mut self) -> Option<(u8, u64, usize)> {$/;"	P	implementation:LineStart
scan_listitem	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_listitem(bytes: &[u8]) -> Option<(usize, u8, usize, usize)> {$/;"	f
scan_nextline	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_nextline(bytes: &[u8]) -> usize {$/;"	f
scan_nodes_to_ix	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn scan_nodes_to_ix($/;"	f
scan_paragraph_interrupt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn scan_paragraph_interrupt(bytes: &[u8]) -> bool {$/;"	f
scan_refdef	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn scan_refdef(&self, start: usize) -> Option<(usize, LinkDef<'a>)> {$/;"	P	implementation:FirstPass
scan_refdef_space	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn scan_refdef_space(&self, bytes: &[u8], mut i: usize) -> Option<(usize, usize)> {$/;"	P	implementation:FirstPass
scan_refdef_title	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_refdef_title(text: &str) -> Option<(usize, &str)> {$/;"	f
scan_reference	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn scan_reference<'a, 'b>($/;"	f
scan_rev_while	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_rev_while<F>(data: &[u8], mut f: F) -> usize$/;"	f
scan_setext_heading	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_setext_heading(data: &[u8]) -> Option<(usize, u32)> {$/;"	f
scan_space	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    pub(crate) fn scan_space(&mut self, n_space: usize) -> bool {$/;"	P	implementation:LineStart
scan_space_inner	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    fn scan_space_inner(&mut self, mut n_space: usize) -> usize {$/;"	P	implementation:LineStart
scan_space_upto	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    pub(crate) fn scan_space_upto(&mut self, n_space: usize) -> usize {$/;"	P	implementation:LineStart
scan_table_head	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_table_head(data: &[u8]) -> (usize, Vec<Alignment>) {$/;"	f
scan_task_list_marker	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    pub(crate) fn scan_task_list_marker(&mut self) -> Option<bool> {$/;"	P	implementation:LineStart
scan_uri	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn scan_uri(text: &str, start_ix: usize) -> Option<(usize, CowStr<'_>)> {$/;"	f
scan_while	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_while<F>(data: &[u8], mut f: F) -> usize$/;"	f
scan_whitespace_no_nl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn scan_whitespace_no_nl(data: &[u8]) -> usize {$/;"	f
scan_whitespace_with_newline_handler	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^fn scan_whitespace_with_newline_handler($/;"	f
scanners	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/lib.rs	/^mod scanners;$/;"	n
second	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    second: u8,$/;"	m	struct:Time
seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/lib.rs	/^mod seed;$/;"	n
seen_first	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    seen_first: bool,$/;"	m	struct:CodeDelims
self_to_expr_path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn self_to_expr_path(&self, path: &mut Path) {$/;"	P	implementation:ReplaceReceiver
self_to_qself	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn self_to_qself(&self, qself: &mut Option<QSelf>, path: &mut Path) {$/;"	P	implementation:ReplaceReceiver
self_ty	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn self_ty(&self, span: Span) -> TypePath {$/;"	P	implementation:ReplaceReceiver
self_var	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    self_var: Ident,$/;"	m	struct:Parameters
seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    seq: A,$/;"	m	struct:SeqAccessDeserializer
seq_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! seq_impl {$/;"	M
seq_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^macro_rules! seq_impl {$/;"	M
ser	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/lib.rs	/^pub mod ser;$/;"	n
ser	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/mod.rs	/^pub mod ser;$/;"	n
ser	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/lib.rs	/^mod ser;$/;"	n
ser	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs	/^pub mod ser;$/;"	n
ser	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    ser: &'b mut Serializer<'a>,$/;"	m	struct:SerializeSeq
ser_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Container
ser_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Field
ser_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Variant
ser_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    ser_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Container
ser_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    ser_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Field
ser_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    ser_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Variant
serde_if_integer128	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/integer128.rs	/^macro_rules! serde_if_integer128 {$/;"	M
serde_path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn serde_path(&self) -> Cow<syn::Path> {$/;"	P	implementation:Container
serde_path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    serde_path: Option<syn::Path>,$/;"	m	struct:Container
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:content::Content
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Serialize
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Arguments
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:CStr
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:CString
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Duration
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:IpAddr
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Ipv4Addr
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Ipv6Addr
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:OsStr
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:OsString
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Path
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:PathBuf
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:PhantomData
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Serialize
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddr
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddrV4
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddrV6
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:String
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SystemTime
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:T
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:str
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	interface:Serialize
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    serialize: RenameRule,$/;"	m	struct:RenameAllRules
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    serialize: String,$/;"	m	struct:Name
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Datetime
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Map
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Spanned
serialize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Value
serialize_adjacently_tagged_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_adjacently_tagged_variant($/;"	f
serialize_body	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_bool(self, v: bool) -> Result<Content, E> {$/;"	f	module:content
serialize_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_bool(self, _: bool) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_bool(self, _: bool) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_bool(self, _v: bool) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_bool(self, v: bool) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_bool(self, value: bool) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_bytes(self, value: &[u8]) -> Result<Content, E> {$/;"	f	module:content
serialize_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_bytes(self, _: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_bytes(self, _v: &[u8]) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_bytes(self, v: &[u8]) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_bytes(self, _: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_bytes(self, _value: &[u8]) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_bytes(self, value: &[u8]) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_char(self, v: char) -> Result<Content, E> {$/;"	f	module:content
serialize_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_char(self, _: char) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_char(self, _: char) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_char(self, _v: char) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_char(self, v: char) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_char(self, value: char) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_display_bounded_length	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^macro_rules! serialize_display_bounded_length {$/;"	M
serialize_element	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_element	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_element	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeSeq
serialize_element	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTuple
serialize_element	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    fn serialize_element(&self, span: Span) -> TokenStream {$/;"	P	implementation:TupleTrait
serialize_element	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_element<T: ?Sized + ser::Serialize>(&mut self, _: &T) -> Result<(), Self::Error/;"	P	implementation:Serializer::Categorize
serialize_element	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	P	implementation:Serializer::SerializeSeq
serialize_element	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), crate::ser::Error>$/;"	P	implementation:SerializeVec
serialize_entry	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_entry<K: ?Sized, V: ?Sized>(&mut self, key: &K, value: &V) -> Result<(), E>$/;"	f	module:content
serialize_entry	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	f
serialize_entry	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	P	interface:SerializeMap
serialize_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_enum(params: &Parameters, variants: &[Variant], cattrs: &attr::Container) -> Fragme/;"	f
serialize_externally_tagged_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_externally_tagged_variant($/;"	f
serialize_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_f32(self, v: f32) -> Result<Content, E> {$/;"	f	module:content
serialize_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_f32(self, _: f32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_f32(self, _: f32) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_f32(self, _v: f32) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_f32(self, v: f32) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_f32(self, value: f32) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_f64(self, v: f64) -> Result<Content, E> {$/;"	f	module:content
serialize_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_f64(self, _: f64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_f64(self, _: f64) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_f64(self, _v: f64) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_f64(self, v: f64) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_f64(self, value: f64) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>($/;"	f	module:content
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), M::Error>$/;"	f	module:content
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	P	interface:SerializeStruct
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	P	interface:SerializeStructVariant
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTupleStruct
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTupleVariant
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    fn serialize_field(&self, span: Span) -> TokenStream {$/;"	P	implementation:StructTrait
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_field<T: ?Sized + ser::Serialize>(&mut self, _: &T) -> Result<(), Self::Error> /;"	P	implementation:Serializer::Categorize
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_field<T: ?Sized>(&mut self, _: &'static str, _: &T) -> Result<(), Self::Error>$/;"	P	implementation:Serializer::Categorize
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), Error>$/;"	P	implementation:Serializer::SerializeTable
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	P	implementation:Serializer::SerializeSeq
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_field<T: ?Sized>($/;"	P	implementation:SerializeMap
serialize_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), crate::ser::Error>$/;"	P	implementation:SerializeVec
serialize_float	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^macro_rules! serialize_float {$/;"	M	implementation:Serializer
serialize_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_i16(self, v: i16) -> Result<Content, E> {$/;"	f	module:content
serialize_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_i16(self, _: i16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i16(self, _: i16) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i16(self, _v: i16) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i16(self, v: i16) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_i16(self, value: i16) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_i32(self, v: i32) -> Result<Content, E> {$/;"	f	module:content
serialize_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_i32(self, _: i32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i32(self, _: i32) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i32(self, _v: i32) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i32(self, v: i32) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_i32(self, value: i32) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_i64(self, v: i64) -> Result<Content, E> {$/;"	f	module:content
serialize_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_i64(self, _: i64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i64(self, _: i64) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i64(self, _v: i64) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i64(self, v: i64) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_i64(self, value: i64) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_i8(self, v: i8) -> Result<Content, E> {$/;"	f	module:content
serialize_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_i8(self, _: i8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i8(self, _: i8) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i8(self, _v: i8) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_i8(self, v: i8) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_i8(self, value: i8) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_internally_tagged_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_internally_tagged_variant($/;"	f
serialize_into	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_into(params: &Parameters, type_into: &syn::Type) -> Fragment {$/;"	f
serialize_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), E>$/;"	f	module:content
serialize_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Error>$/;"	f
serialize_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeMap
serialize_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_key<T: ?Sized + ser::Serialize>(&mut self, _: &T) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_key<T: ?Sized>(&mut self, input: &T) -> Result<(), Error>$/;"	P	implementation:Serializer::SerializeTable
serialize_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), crate::ser::Error>$/;"	P	implementation:SerializeMap
serialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, E> {$/;"	f	module:content
serialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_map(self, _: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, fmt::Error> {$/;"	P	implementation:Formatter
serialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error>;$/;"	P	interface:Serializer
serialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_map(self, _: Option<usize>) -> Result<Self, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, crate::ser::Error>/;"	P	implementation:Serializer
serialize_name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn serialize_name(&self) -> String {$/;"	P	implementation:Name
serialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_newtype_struct<T: ?Sized>($/;"	f	module:content
serialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, value: &T) -> fmt::Result$/;"	P	implementation:Formatter
serialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	P	interface:Serializer
serialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_newtype_struct($/;"	f
serialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized + ser::Serialize>($/;"	P	implementation:Serializer::Categorize
serialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	P	implementation:Serializer::DateStrEmitter
serialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	P	implementation:Serializer::Serializer
serialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	P	implementation:Serializer::StringExtractor
serialize_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	P	implementation:Serializer
serialize_newtype_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_newtype_variant<T: ?Sized>($/;"	f	module:content
serialize_newtype_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	implementation:Formatter
serialize_newtype_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	interface:Serializer
serialize_newtype_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized + ser::Serialize>($/;"	P	implementation:Serializer::Categorize
serialize_newtype_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	implementation:Serializer::DateStrEmitter
serialize_newtype_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	implementation:Serializer::Serializer
serialize_newtype_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	implementation:Serializer::StringExtractor
serialize_newtype_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	implementation:Serializer
serialize_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_none(self) -> Result<Content, E> {$/;"	f	module:content
serialize_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_none(self) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_none(self) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_none(self) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_none(self) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_none(self) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_renamed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    serialize_renamed: bool,$/;"	m	struct:Name
serialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, E> {$/;"	f	module:content
serialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_seq(self, _: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	f
serialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq, fmt::Error> {$/;"	P	implementation:Formatter
serialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error>;$/;"	P	interface:Serializer
serialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_seq(self, _: Option<usize>) -> Result<Self, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, crate::ser::Error> /;"	P	implementation:Serializer
serialize_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Content, E>$/;"	f	module:content
serialize_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> fmt::Result$/;"	P	implementation:Formatter
serialize_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
serialize_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_some<T: ?Sized + ser::Serialize>(self, v: &T) -> Result<Self::Ok, Self::Error> /;"	P	implementation:Serializer::Categorize
serialize_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> Result<(), Self::Error>$/;"	P	implementation:Serializer::DateStrEmitter
serialize_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> Result<String, Self::Error>$/;"	P	implementation:Serializer::StringExtractor
serialize_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<(), Self::Error>$/;"	P	implementation:Serializer::Serializer
serialize_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Value, crate::ser::Error>$/;"	P	implementation:Serializer
serialize_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_str(self, value: &str) -> Result<Content, E> {$/;"	f	module:content
serialize_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_str(self, _: &str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_str(self, v: &str) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_str(self, _: &str) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_str(self, value: &str) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_str(self, value: &str) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_struct($/;"	f	module:content
serialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_struct($/;"	P	implementation:Formatter
serialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_struct($/;"	P	interface:Serializer
serialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_struct(params: &Parameters, fields: &[Field], cattrs: &attr::Container) -> Fragment/;"	f
serialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_struct($/;"	P	implementation:Serializer::DateStrEmitter
serialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_struct($/;"	P	implementation:Serializer::Serializer
serialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_struct($/;"	P	implementation:Serializer::StringExtractor
serialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_struct(self, _: &'static str, _: usize) -> Result<Self, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_struct($/;"	P	implementation:Serializer
serialize_struct_as_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_struct_as_map($/;"	f
serialize_struct_as_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_struct_as_struct($/;"	f
serialize_struct_tag_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_struct_tag_field(cattrs: &attr::Container, struct_trait: &StructTrait) -> TokenStre/;"	f
serialize_struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_struct_variant($/;"	f	module:content
serialize_struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_struct_variant($/;"	P	implementation:Formatter
serialize_struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_struct_variant($/;"	P	interface:Serializer
serialize_struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_struct_variant<'a>($/;"	f
serialize_struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:Serializer::Categorize
serialize_struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:Serializer::DateStrEmitter
serialize_struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:Serializer::Serializer
serialize_struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_struct_variant($/;"	P	implementation:Serializer::StringExtractor
serialize_struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_struct_variant($/;"	P	implementation:Serializer
serialize_struct_variant_with_flatten	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_struct_variant_with_flatten<'a>($/;"	f
serialize_struct_visitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_struct_visitor($/;"	f
serialize_tagged_newtype	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^pub fn serialize_tagged_newtype<S, T>($/;"	f
serialize_transparent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, E> {$/;"	f	module:content
serialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_tuple(self, _: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	f
serialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple, fmt::Error> {$/;"	P	implementation:Formatter
serialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, Self::Error>;$/;"	P	interface:Serializer
serialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_tuple(self, _: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_tuple	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_tuple_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_tuple_struct($/;"	f	module:content
serialize_tuple_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:Formatter
serialize_tuple_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_tuple_struct($/;"	P	interface:Serializer
serialize_tuple_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:Serializer::Categorize
serialize_tuple_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:Serializer::DateStrEmitter
serialize_tuple_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:Serializer::Serializer
serialize_tuple_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:Serializer::StringExtractor
serialize_tuple_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:Serializer
serialize_tuple_struct_visitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_tuple_struct_visitor($/;"	f
serialize_tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_tuple_variant($/;"	f	module:content
serialize_tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:Formatter
serialize_tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_tuple_variant($/;"	P	interface:Serializer
serialize_tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:Serializer::Categorize
serialize_tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:Serializer::DateStrEmitter
serialize_tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:Serializer::Serializer
serialize_tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:Serializer::StringExtractor
serialize_tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:Serializer
serialize_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_u16(self, v: u16) -> Result<Content, E> {$/;"	f	module:content
serialize_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_u16(self, _: u16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u16(self, _: u16) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u16(self, _v: u16) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u16(self, v: u16) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_u16(self, value: u16) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_u32(self, v: u32) -> Result<Content, E> {$/;"	f	module:content
serialize_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u32(self, _v: u32) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u32(self, v: u32) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_u32(self, value: u32) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_u64(self, v: u64) -> Result<Content, E> {$/;"	f	module:content
serialize_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_u64(self, _: u64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u64(self, _: u64) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u64(self, _v: u64) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u64(self, v: u64) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_u64(self, value: u64) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_u8(self, v: u8) -> Result<Content, E> {$/;"	f	module:content
serialize_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_u8(self, _: u8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u8(self, _: u8) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u8(self, _v: u8) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_u8(self, v: u8) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_u8(self, value: u8) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_unit(self) -> Result<Content, E> {$/;"	f	module:content
serialize_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_unit(self) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_unit(self) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_unit(self) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_unit(self) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_unit(self) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_unit_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_unit_struct(self, name: &'static str) -> Result<Content, E> {$/;"	f	module:content
serialize_unit_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_unit_struct(self, _: &'static str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_unit_struct(self, name: &'static str) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_unit_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_unit_struct(cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_unit_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_unit_struct(self, _: &'static str) -> Result<Self::Ok, Self::Error> {$/;"	P	implementation:Serializer::Categorize
serialize_unit_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::DateStrEmitter
serialize_unit_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<(), Self::Error> {$/;"	P	implementation:Serializer::Serializer
serialize_unit_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<String, Self::Error> {$/;"	P	implementation:Serializer::StringExtractor
serialize_unit_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_unit_struct(self, _name: &'static str) -> Result<Value, crate::ser::Error> {$/;"	P	implementation:Serializer
serialize_unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_unit_variant($/;"	f	module:content
serialize_unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/fmt.rs	/^    fn serialize_unit_variant($/;"	P	implementation:Formatter
serialize_unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_unit_variant($/;"	P	interface:Serializer
serialize_unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:Serializer::Categorize
serialize_unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:Serializer::DateStrEmitter
serialize_unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:Serializer::Serializer
serialize_unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_unit_variant($/;"	P	implementation:Serializer::StringExtractor
serialize_unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_unit_variant($/;"	P	implementation:Serializer
serialize_untagged_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_untagged_variant($/;"	f
serialize_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeMap
serialize_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_value<T: ?Sized + ser::Serialize>(&mut self, _: &T) -> Result<(), Self::Error> /;"	P	implementation:Serializer::Categorize
serialize_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	P	implementation:Serializer::SerializeTable
serialize_value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), crate::ser::Error>$/;"	P	implementation:SerializeMap
serialize_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn serialize_variant($/;"	f
serialize_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn serialize_with(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Field
serialize_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn serialize_with(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Variant
serialize_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    serialize_with: Option<syn::ExprPath>,$/;"	m	struct:Field
serialize_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    serialize_with: Option<syn::ExprPath>,$/;"	m	struct:Variant
set	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn set<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	P	implementation:Attr
set_allow_duplicate_after_longer_table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    pub fn set_allow_duplicate_after_longer_table(&mut self, allow: bool) {$/;"	P	implementation:Deserializer
set_if_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn set_if_none(&mut self, value: T) {$/;"	P	implementation:Attr
set_lowerbound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn set_lowerbound(&mut self, c: u8, count: usize, both: bool, new_bound: usize) {$/;"	P	implementation:InlineStack
set_opt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn set_opt<A: ToTokens>(&mut self, obj: A, value: Option<T>) {$/;"	P	implementation:Attr
set_require_newline_after_table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    pub fn set_require_newline_after_table(&mut self, require: bool) {$/;"	P	implementation:Deserializer
set_true	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    fn set_true<A: ToTokens>(&mut self, obj: A) {$/;"	P	implementation:BoolAttr
settings	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    settings: Rc<Settings>,$/;"	m	struct:Serializer
simd	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^mod simd {$/;"	n
simd	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/lib.rs	/^mod simd;$/;"	n
simd	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub simd: [u8; 16],$/;"	m	struct:LookupTable
simd_iterate_special_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^unsafe fn simd_iterate_special_bytes<F, T>($/;"	f
simd_test	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^mod simd_test {$/;"	n
simple_broken_link_callback	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn simple_broken_link_callback() {$/;"	f	module:test
simple_match	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^    fn simple_match() {$/;"	f	module:simd_test
simple_no_match	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^    fn simple_no_match() {$/;"	f	module:simd_test
single_open_fish	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/simd.rs	/^    fn single_open_fish() {$/;"	f	module:simd_test
single_open_fish_bracket	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn single_open_fish_bracket() {$/;"	f	module:test
site_name	/home/sammi/rust/md_puppy/src/command_line.rs	/^    pub site_name: String,$/;"	m	struct:Input
size_hint	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	interface:MapAccess
size_hint	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	interface:SeqAccess
size_hint	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn size_hint(&self) -> Option<usize> {$/;"	f	module:content
size_hint	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/mod.rs	/^pub mod size_hint;$/;"	n
size_hint	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	implementation:MapDeserializer
size_hint	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	implementation:SeqDeserializer
skip_deserializing	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn skip_deserializing(&self) -> bool {$/;"	P	implementation:Field
skip_deserializing	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn skip_deserializing(&self) -> bool {$/;"	P	implementation:Variant
skip_deserializing	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    skip_deserializing: bool,$/;"	m	struct:Field
skip_deserializing	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    skip_deserializing: bool,$/;"	m	struct:Variant
skip_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	P	interface:SerializeStruct
skip_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	P	interface:SerializeStructVariant
skip_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    fn skip_field(&self, span: Span) -> Option<TokenStream> {$/;"	P	implementation:StructTrait
skip_serializing	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn skip_serializing(&self) -> bool {$/;"	P	implementation:Field
skip_serializing	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn skip_serializing(&self) -> bool {$/;"	P	implementation:Variant
skip_serializing	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    skip_serializing: bool,$/;"	m	struct:Field
skip_serializing	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    skip_serializing: bool,$/;"	m	struct:Variant
skip_serializing_if	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn skip_serializing_if(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Field
skip_serializing_if	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    skip_serializing_if: Option<syn::ExprPath>,$/;"	m	struct:Field
skip_to_newline	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn skip_to_newline(&mut self) {$/;"	P	implementation:Tokenizer
small_boxed_str_clones_to_stack	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn small_boxed_str_clones_to_stack() {$/;"	f	module:test_special_string
source	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/std_error.rs	/^    fn source(&self) -> Option<&(Error + 'static)> {$/;"	P	interface:Error
spaces_remaining	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    spaces_remaining: usize,$/;"	m	struct:LineStart
span	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    pub span: std::ops::Range<usize>,$/;"	m	struct:BrokenLink
span	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    span: Option<Span>,$/;"	m	struct:StrDeserializer
span	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    pub fn span(&self) -> (usize, usize) {$/;"	P	implementation:Spanned
spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn spanned(inner: (Span, Cow<'a, str>)) -> StrDeserializer<'a> {$/;"	P	implementation:StrDeserializer
spanned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs	/^mod spanned;$/;"	n
spanned_tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn spanned_tokens(s: &syn::LitStr) -> parse::Result<TokenStream> {$/;"	f
special_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn special_bytes(options: &Options) -> [bool; 256] {$/;"	f
spine	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    spine: Vec<TreeIndex>, \/\/ indices of nodes on path to current node$/;"	m	struct:Tree
spine_len	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn spine_len(&self) -> usize {$/;"	P	implementation:Tree
split	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        fn split(self) -> (A, B) {$/;"	P	implementation:private::B
split	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        fn split(self) -> (Self::First, Self::Second);$/;"	P	interface:private::Pair
split_with_de_lifetime	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn split_with_de_lifetime($/;"	f
stack	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    stack: Vec<InlineEl>,$/;"	m	struct:InlineStack
start	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    start: TreeIndex, \/\/ offset of tree node$/;"	m	struct:InlineEl
start	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    start: usize,$/;"	m	struct:Item
start	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    start: Option<usize>,$/;"	m	struct:SpannedDeserializer
start	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    start: usize,$/;"	m	struct:Value
start	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    pub fn start(&self) -> usize {$/;"	P	implementation:Spanned
start	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    start: usize,$/;"	m	struct:Spanned
start	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub start: usize,$/;"	m	struct:Span
start_tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    fn start_tag(&mut self, tag: Tag<'a>) -> io::Result<()> {$/;"	f
state	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    state: State<'a>,$/;"	m	struct:Serializer
std_error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/lib.rs	/^mod std_error;$/;"	n
step_span	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn step_span(&mut self, start: usize) -> Span {$/;"	P	implementation:Tokenizer
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^static HTML_ESCAPES: [&'static str; 5] = ["", "&quot;", "&amp;", "&lt;", "&gt;"];$/;"	v
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs", "nanos"];$/;"	v	method:Duration::deserialize
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs_since_epoch", "nanos_since_epoch"];$/;"	v	method:SystemTime::deserialize
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Ok", "Err"];$/;"	v	function:deserialize
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Unbounded", "Included", "Excluded"];$/;"	v	function:deserialize
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    pub const FIELDS: &'static [&'static str] = &["start", "end"];$/;"	v	module:range
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a str {$/;"	c
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^impl<'a> Expected for &'a str {$/;"	c
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for &'a str$/;"	c
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'a, E> IdentifierDeserializer<'a, E> for &'a str$/;"	c
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^impl Serialize for str {$/;"	c
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl Index for str {$/;"	c
str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl Sealed for str {}$/;"	c
string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/mod.rs	/^mod string {$/;"	n
string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    string: Option<StringSettings>,$/;"	m	struct:Settings
string_or_table	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn string_or_table(&mut self) -> Result<(Value<'a>, Option<Cow<'a, str>>), Error> {$/;"	P	implementation:Deserializer
strings	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/lib.rs	/^mod strings;$/;"	n
struct_from_ast	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^fn struct_from_ast<'a>($/;"	f
struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn struct_variant<V>($/;"	P	interface:VariantAccess
struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        fn struct_variant<V>($/;"	f	module:private
struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn struct_variant<V>($/;"	f	module:content
struct_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn struct_variant<V>($/;"	P	implementation:TableEnumDeserializer
style	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub style: Style,$/;"	m	struct:Variant
sub	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    fn sub(self, rhs: usize) -> Self {$/;"	P	implementation:TreeIndex
substr_offset	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn substr_offset(&self, s: &'a str) -> usize {$/;"	P	implementation:Tokenizer
surgerize_tight_list	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^fn surgerize_tight_list(tree: &mut Tree<Item>, list_ix: TreeIndex) {$/;"	f
symbol	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/mod.rs	/^mod symbol;$/;"	n
syn_error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ctxt.rs	/^    pub fn syn_error(&self, err: syn::Error) {$/;"	P	implementation:Ctxt
t	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^        fn t(input: &str) {$/;"	f	function:tests::keylike
t	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^        fn t(input: &str, expected: &[((usize, usize), Token<'_>, &str)]) {$/;"	f	function:tests::all
t	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^        fn t(input: &str, val: &str, multiline: bool) {$/;"	f	function:tests::basic_strings
t	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^        fn t(input: &str, val: &str, multiline: bool) {$/;"	f	function:tests::literal_strings
tab_start	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^    tab_start: usize,$/;"	m	struct:LineStart
table_alignments	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    table_alignments: Vec<Alignment>,$/;"	m	struct:HtmlWriter
table_cell_index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    table_cell_index: usize,$/;"	m	struct:HtmlWriter
table_header	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn table_header(&mut self) -> Result<Line<'a>, Error> {$/;"	P	implementation:Deserializer
table_indices	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    table_indices: &'b HashMap<Vec<Cow<'de, str>>, Vec<usize>>,$/;"	m	struct:MapVisitor
table_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn table_key(&mut self) -> Result<(Span, Cow<'a, str>), Error> {$/;"	P	implementation:Deserializer
table_key	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    pub fn table_key(&mut self) -> Result<(Span, Cow<'a, str>), Error> {$/;"	P	implementation:Tokenizer
table_offset	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn table_offset() {$/;"	f	module:test
table_pindices	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    table_pindices: &'b HashMap<Vec<Cow<'de, str>>, Vec<usize>>,$/;"	m	struct:MapVisitor
table_state	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    table_state: TableState,$/;"	m	struct:HtmlWriter
tables	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn tables(&mut self) -> Result<Vec<Table<'a>>, Error> {$/;"	P	implementation:Deserializer
tables	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    tables: &'b mut [Table<'de>],$/;"	m	struct:MapVisitor
tables_last	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^pub fn tables_last<'a, I, K, V, S>(data: &'a I, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Serializer
tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub tag: &'static str,$/;"	m	struct:content::TagContentOtherFieldVisitor
tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub tag: &'static str,$/;"	m	struct:content::TagOrContentFieldVisitor
tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        pub tag: T,$/;"	m	struct:content::TaggedContent
tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    tag: &'static str,$/;"	m	struct:TaggedSerializer
tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn tag(&self) -> &TagType {$/;"	P	implementation:Container
tag	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    tag: TagType,$/;"	m	struct:Container
tag_name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        tag_name: &'static str,$/;"	m	struct:content::TaggedContentVisitor
test	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/linklabel.rs	/^mod test {$/;"	n
test	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^mod test {$/;"	n
test	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^mod test {$/;"	n
test_ascii	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/puncttable.rs	/^    fn test_ascii() {$/;"	f	module:tests
test_format_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^fn test_format_u8() {$/;"	f
test_special_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^mod test_special_string {$/;"	n
test_unicode	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/puncttable.rs	/^    fn test_unicode() {$/;"	f	module:tests
tests	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/puncttable.rs	/^mod tests {$/;"	n
tests	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^mod tests {$/;"	n
tests	/home/sammi/rust/md_puppy/src/command_line.rs	/^mod tests {$/;"	n
tests	/home/sammi/rust/md_puppy/src/markdown_compiling.rs	/^mod tests {$/;"	n
text	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    text: &'a str,$/;"	m	struct:FirstPass
text	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    text: &'a str,$/;"	m	struct:Parser
this	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    this: syn::Path,$/;"	m	struct:Parameters
this	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    this: syn::Path,$/;"	m	struct:Parameters
time	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    time: Option<Time>,$/;"	m	struct:Datetime
title	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    title: Option<CowStr<'a>>,$/;"	m	struct:LinkDef
title	/home/sammi/rust/md_puppy/src/markdown_compiling.rs	/^    pub title: String,$/;"	m	struct:Page
to_compile_errors	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/lib.rs	/^fn to_compile_errors(errors: Vec<syn::Error>) -> proc_macro2::TokenStream {$/;"	f
to_linecol	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn to_linecol(&self, offset: usize) -> (usize, usize) {$/;"	P	implementation:Deserializer
to_owned	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn to_owned(&mut self, input: &str) {$/;"	P	implementation:MaybeString
to_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^pub fn to_string<T: ?Sized>(value: &T) -> Result<String, Error>$/;"	f
to_string_pretty	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^pub fn to_string_pretty<T: ?Sized>(value: &T) -> Result<String, Error>$/;"	f
to_tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	P	implementation:DeImplGenerics
to_tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	P	implementation:DeTypeGenerics
to_tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	P	implementation:InPlaceImplGenerics
to_tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	P	implementation:InPlaceTypeGenerics
to_tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	P	implementation:Expr
to_tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	P	implementation:Match
to_tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	P	implementation:Stmts
to_unknown	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    fn to_unknown(self) -> Self {$/;"	P	implementation:LinkType
to_vec	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^pub fn to_vec<T: ?Sized>(value: &T) -> Result<Vec<u8>, Error>$/;"	f
token_error	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn token_error(&self, error: TokenError) -> Error {$/;"	P	implementation:Deserializer
tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    tokens: TokenStream,$/;"	m	struct:Attr
tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    tokens: Tokenizer<'a>,$/;"	m	struct:Deserializer
tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    tokens: Tokenizer<'a>,$/;"	m	struct:Header
tokens	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs	/^mod tokens;$/;"	n
toml	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/macros.rs	/^macro_rules! toml {$/;"	M
toml_internal	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/macros.rs	/^macro_rules! toml_internal {$/;"	M
trailing_comma	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    trailing_comma: bool,$/;"	m	struct:ArraySettings
transparent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn transparent(&self) -> bool {$/;"	P	implementation:Container
transparent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn transparent(&self) -> bool {$/;"	P	implementation:Field
transparent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    transparent: bool,$/;"	m	struct:Container
transparent	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    transparent: bool,$/;"	m	struct:Field
traverse	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/macros.rs	/^fn traverse<'a>(root: &'a mut Value, path: &[&str]) -> &'a mut Value {$/;"	f
tree	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/lib.rs	/^mod tree;$/;"	n
tree	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    tree: Tree<Item>,$/;"	m	struct:FirstPass
tree	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    tree: Tree<Item>,$/;"	m	struct:Parser
try	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/lib.rs	/^mod try;$/;"	n
try_from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/strings.rs	/^    fn try_from(s: &str) -> Result<InlineStr, StringTooLongError> {$/;"	P	implementation:InlineStr
try_from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn try_from<T>(value: T) -> Result<Value, crate::ser::Error>$/;"	P	implementation:Value
try_into	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn try_into<'de, T>(self) -> Result<T, crate::de::Error>$/;"	P	implementation:Value
tuple_impls	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! tuple_impls {$/;"	M
tuple_impls	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impls.rs	/^macro_rules! tuple_impls {$/;"	M
tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn tuple_variant<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:VariantAccess
tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        fn tuple_variant<V>(mut self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:private
tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:private
tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
tuple_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn tuple_variant<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	implementation:TableEnumDeserializer
ty	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/parse.rs	/^    ty: LinkStackTy,$/;"	m	struct:LinkStackEl
ty	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    ty: PhantomData<T>,$/;"	m	struct:FromStrVisitor
ty	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/ast.rs	/^    pub ty: &'a syn::Type,$/;"	m	struct:Field
type_	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/ser.rs	/^    type_: Cell<Option<ArrayState>>,$/;"	m	struct:SerializeSeq
type_from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn type_from(&self) -> Option<&syn::Type> {$/;"	P	implementation:Container
type_from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    type_from: Option<syn::Type>,$/;"	m	struct:Container
type_ident	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    type_ident: &'static str,$/;"	m	struct:TaggedSerializer
type_into	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn type_into(&self) -> Option<&syn::Type> {$/;"	P	implementation:Container
type_into	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    type_into: Option<syn::Type>,$/;"	m	struct:Container
type_name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type_name: &'a str,$/;"	m	struct:content::InternallyTaggedUnitVisitor
type_name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        type_name: &'a str,$/;"	m	struct:content::UntaggedUnitVisitor
type_name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^    fn type_name(&self) -> String {$/;"	P	implementation:Parameters
type_name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^    fn type_name(&self) -> String {$/;"	P	implementation:Parameters
type_name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn type_name(&self) -> &'static str {$/;"	P	implementation:E
type_of_item	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^fn type_of_item(cont: &Container) -> syn::Type {$/;"	f
type_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    pub fn type_str(&self) -> &'static str {$/;"	P	implementation:Value
type_try_from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    pub fn type_try_from(&self) -> Option<&syn::Type> {$/;"	P	implementation:Container
type_try_from	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    type_try_from: Option<syn::Type>,$/;"	m	struct:Container
u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for u32$/;"	c
u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'de, E> IdentifierDeserializer<'de, E> for u64$/;"	c
u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a [u8] {$/;"	c
u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for &'a [u8]$/;"	c
u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^impl<'a, E> IdentifierDeserializer<'a, E> for &'a [u8]$/;"	c
uint_to_self	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! uint_to_self {$/;"	M
unescape	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/scanners.rs	/^pub(crate) fn unescape(input: &str) -> CowStr<'_> {$/;"	f
unexpected	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn unexpected(&self) -> Unexpected {$/;"	P	implementation:content::Content
ungroup	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/mod.rs	/^pub fn ungroup(mut ty: &Type) -> &Type {$/;"	f
unit_only	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    pub fn unit_only<T, E>(t: T) -> (T, UnitOnly<E>) {$/;"	f	module:private
unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn unit_variant(self) -> Result<(), Self::Error>;$/;"	P	interface:VariantAccess
unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        fn unit_variant(mut self) -> Result<(), Self::Error> {$/;"	f	module:private
unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        fn unit_variant(self) -> Result<(), Self::Error> {$/;"	f	module:private
unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn unit_variant(self) -> Result<(), E> {$/;"	f	module:content
unit_variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn unit_variant(self) -> Result<(), Self::Error> {$/;"	P	implementation:TableEnumDeserializer
unknown	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/case.rs	/^    unknown: &'a str,$/;"	m	struct:ParseError
unraw	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/dummy.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
unraw	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
unwrap_to_variant_closure	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn unwrap_to_variant_closure($/;"	f
usage	/home/sammi/rust/md_puppy/src/command_line.rs	/^pub fn usage() {$/;"	f
usize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^impl From<Span> for (usize, usize) {$/;"	c
usize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl Index for usize {$/;"	c
usize	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^impl Sealed for usize {}$/;"	c
utf8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^mod utf8;$/;"	n
vacant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    vacant: VacantEntryImpl<'a>,$/;"	m	struct:VacantEntry
validate_struct_keys	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    validate_struct_keys: bool,$/;"	m	struct:ValueDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^pub mod value;$/;"	n
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    value: &'a [u8],$/;"	m	struct:BytesDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    value: &'a str,$/;"	m	struct:StrDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    value: &'de [u8],$/;"	m	struct:BorrowedBytesDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    value: &'de str,$/;"	m	struct:BorrowedStrDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    value: Cow<'a, str>,$/;"	m	struct:CowStrDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    value: Option<Second<I::Item>>,$/;"	m	struct:MapDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    value: String,$/;"	m	struct:StringDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    value: u32,$/;"	m	struct:U32Deserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::EnumRefDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::MapRefDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::VariantRefDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::EnumDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::MapDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::VariantDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        value: PhantomData<Content<'de>>,$/;"	m	struct:content::ContentVisitor
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        value: PhantomData<TagOrContent<'de>>,$/;"	m	struct:content::TagOrContentVisitor
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        value: PhantomData<TaggedContent<'de, T>>,$/;"	m	struct:content::TaggedContentVisitor
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    value: &'a str,$/;"	m	struct:StrDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    value: &'de str,$/;"	m	struct:BorrowedStrDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    value: Option<T>,$/;"	m	struct:Attr
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    pub value: Datetime,$/;"	m	struct:DatetimeFromString
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn value(&mut self) -> Result<Value<'a>, Error> {$/;"	P	implementation:Deserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    value: Option<T>,$/;"	m	struct:SpannedDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    value: Value<'a>,$/;"	m	struct:DottedTableDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    value: Value<'a>,$/;"	m	struct:TableEnumDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    value: Value<'a>,$/;"	m	struct:ValueDeserializer
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/lib.rs	/^pub mod value;$/;"	n
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^    value: T,$/;"	m	struct:Spanned
value	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    value: Option<(String, Value)>,$/;"	m	struct:MapDeserializer
values	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/attr.rs	/^    values: Vec<T>,$/;"	m	struct:VecAttr
values	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    values: Option<Vec<TablePair<'a>>>,$/;"	m	struct:Table
values	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    values: iter::Peekable<vec::IntoIter<TablePair<'de>>>,$/;"	m	struct:MapVisitor
values	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    values: vec::IntoIter<TablePair<'a>>,$/;"	m	struct:InlineTableDeserializer
values	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn values(&self) -> Values<'_> {$/;"	P	implementation:Map
variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn variant<V>(self) -> Result<(V, Self::Variant), Self::Error>$/;"	P	interface:EnumAccess
variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        variant: &'a Content<'de>,$/;"	m	struct:content::EnumRefDeserializer
variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        variant: Content<'de>,$/;"	m	struct:content::EnumDeserializer
variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        variant: &'static str,$/;"	m	struct:content::SerializeStructVariant
variant	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        variant: &'static str,$/;"	m	struct:content::SerializeTupleVariant
variant_ident	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    variant_ident: &'static str,$/;"	m	struct:TaggedSerializer
variant_identifier	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^macro_rules! variant_identifier {$/;"	M
variant_index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        variant_index: u32,$/;"	m	struct:content::SerializeStructVariant
variant_index	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^        variant_index: u32,$/;"	m	struct:content::SerializeTupleVariant
variant_name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        variant_name: &'a str,$/;"	m	struct:content::InternallyTaggedUnitVisitor
variant_name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        variant_name: &'a str,$/;"	m	struct:content::UntaggedUnitVisitor
variant_name	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/ser.rs	/^    variant_name: &'static str,$/;"	m	struct:TaggedSerializer
variant_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	P	interface:EnumAccess
variant_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn variant_seed<T>(mut self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), E>$/;"	f	module:content
variant_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f	module:content
variant_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn variant_seed<V>(mut self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	P	implementation:InlineTableDeserializer
variant_seed	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	P	implementation:DottedTableDeserializer
vec	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    vec: Vec<Value>,$/;"	m	struct:SerializeVec
visit_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_bool<E>(self, x: bool) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	P	implementation:BoolVisitor
visit_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_bool	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            fn visit_bool<E>(self, value: bool) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_borrowed_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:BytesVisitor
visit_borrowed_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:PathVisitor
visit_borrowed_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:StrVisitor
visit_borrowed_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'de [u8]) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_borrowed_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_borrowed_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_borrowed_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_borrowed_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_borrowed_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:BytesVisitor
visit_borrowed_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:PathVisitor
visit_borrowed_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:StrVisitor
visit_borrowed_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_borrowed_str<E>(self, v: &'de str) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_borrowed_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_borrowed_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_borrowed_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_borrowed_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_byte_buf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_byte_buf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_byte_buf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_byte_buf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_byte_buf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_byte_buf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_byte_buf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_byte_buf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_byte_buf	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_bytes<E>(self, bytes: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:IgnoredAny
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:range::Field::deserialize::FieldVisitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_bytes	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	P	implementation:CharVisitor
visit_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_char	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_content_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn visit_content_map<'de, V, E>($/;"	f	module:content
visit_content_map_ref	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn visit_content_map_ref<'a, 'de, V, E>($/;"	f	module:content
visit_content_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn visit_content_seq<'de, V, E>(content: Vec<Content<'de>>, visitor: V) -> Result<V::Value, /;"	f	module:content
visit_content_seq_ref	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^    fn visit_content_seq_ref<'a, 'de, V, E>($/;"	f	module:content
visit_data_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_data_mut(&mut self, data: &mut Data) {$/;"	P	implementation:ReplaceReceiver
visit_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:OsStringVisitor
visit_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_enum<V>(self, _visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_enum	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_enum<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_expr_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_expr_mut(&mut self, expr: &mut Expr) {$/;"	P	implementation:ReplaceReceiver
visit_expr_path_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_expr_path_mut(&mut self, expr: &mut ExprPath) {$/;"	P	implementation:ReplaceReceiver
visit_expr_path_mut_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_expr_path_mut_impl(&mut self, expr: &mut ExprPath) {$/;"	P	implementation:ReplaceReceiver
visit_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_f32<E>(self, v: f32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_f32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_f64<E>(self, x: f64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_f64<E>(self, v: f64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_f64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            fn visit_f64<E>(self, value: f64) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_field	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^        fn visit_field(&mut self, field: &'ast syn::Field) {$/;"	P	implementation:with_bound::FindTyParams
visit_generics_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_generics_mut(&mut self, generics: &mut Generics) {$/;"	P	implementation:ReplaceReceiver
visit_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_i16<E>(self, v: i16) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_i32<E>(self, v: i32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            fn visit_i32<E>(self, value: i32) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_i64<E>(self, x: i64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_i64<E>(self, v: i64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_i8<E>(self, v: i8) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_macro	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^        fn visit_macro(&mut self, _mac: &'ast syn::Macro) {}$/;"	P	implementation:with_bound::FindTyParams
visit_macro_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_macro_mut(&mut self, _mac: &mut Macro) {}$/;"	P	implementation:ReplaceReceiver
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:Duration::deserialize::DurationVisitor
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f	module:range
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_map<A>(self, map: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_map<M>(self, mut access: M) -> Result<(), M::Error>$/;"	P	implementation:content::InternallyTaggedUnitVisitor
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_map<M>(self, mut map: M) -> Result<Self::Value, M::Error>$/;"	f	module:content
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_map<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Datetime, V::Error>$/;"	P	implementation:Datetime::deserialize::DatetimeVisitor
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:Map::deserialize::Visitor
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/spanned.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Spanned<T>, V::Error>$/;"	f	function:deserialize
visit_map	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            fn visit_map<V>(self, mut visitor: V) -> Result<Value, V::Error>$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:IgnoredAny
visit_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:Visitor
visit_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::ContentVisitor
visit_newtype_struct	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_none<E>(self) -> Result<(), E>$/;"	P	implementation:content::UntaggedUnitVisitor
visit_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_none	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_path	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^        fn visit_path(&mut self, path: &'ast syn::Path) {$/;"	P	implementation:with_bound::FindTyParams
visit_path_arguments	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^        fn visit_path_arguments(&mut self, arguments: &'ast syn::PathArguments) {$/;"	P	implementation:with_bound::FindTyParams
visit_path_arguments_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_path_arguments_mut(&mut self, arguments: &mut PathArguments) {$/;"	P	implementation:ReplaceReceiver
visit_path_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_path_mut(&mut self, path: &mut Path) {$/;"	P	implementation:ReplaceReceiver
visit_path_segment	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^        fn visit_path_segment(&mut self, segment: &'ast syn::PathSegment) {$/;"	P	implementation:with_bound::FindTyParams
visit_return_type	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^        fn visit_return_type(&mut self, return_type: &'ast syn::ReturnType) {$/;"	P	implementation:with_bound::FindTyParams
visit_return_type_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_return_type_mut(&mut self, return_type: &mut ReturnType) {$/;"	P	implementation:ReplaceReceiver
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:Duration::deserialize::DurationVisitor
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize_in_place
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	module:range
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_seq<A>(self, _: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:ArrayVisitor
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:CStringVisitor
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_seq<A>(self, seq: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_seq<S>(self, _: S) -> Result<(), S::Error>$/;"	P	implementation:content::InternallyTaggedUnitVisitor
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_seq<S>(self, mut seq: S) -> Result<Self::Value, S::Error>$/;"	f	module:content
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_seq<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_seq<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_seq	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            fn visit_seq<V>(self, mut visitor: V) -> Result<Value, V::Error>$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:IgnoredAny
visit_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:Visitor
visit_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::ContentVisitor
visit_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_some	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            fn visit_some<D>(self, deserializer: D) -> Result<Value, D::Error>$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:IgnoredAny
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:range::Field::deserialize::FieldVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:CharVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	P	implementation:content::TagContentOtherFieldVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	P	implementation:content::TagOrContentFieldVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^            fn visit_str<E>(self, s: &str) -> Result<(), E>$/;"	P	implementation:DatetimeKey::deserialize::FieldVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^            fn visit_str<E>(self, s: &str) -> Result<DatetimeFromString, E>$/;"	P	implementation:DatetimeFromString::deserialize::Visitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            fn visit_str<E>(self, value: &str) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn visit_str<E>(self, s: &str) -> Result<bool, E>$/;"	P	implementation:DatetimeOrTable
visit_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            fn visit_string<E>(self, value: String) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_string	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^    fn visit_string<E>(self, s: String) -> Result<bool, E>$/;"	P	implementation:DatetimeOrTable
visit_type	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^        fn visit_type(&mut self, ty: &'ast syn::Type) {$/;"	P	implementation:with_bound::FindTyParams
visit_type_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_type_mut(&mut self, ty: &mut Type) {$/;"	P	implementation:ReplaceReceiver
visit_type_mut_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_type_mut_impl(&mut self, ty: &mut Type) {$/;"	P	implementation:ReplaceReceiver
visit_type_param_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^        fn visit_type_param_bound(&mut self, bound: &'ast syn::TypeParamBound) {$/;"	P	implementation:with_bound::FindTyParams
visit_type_param_bound_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_type_param_bound_mut(&mut self, bound: &mut TypeParamBound) {$/;"	P	implementation:ReplaceReceiver
visit_type_path_mut	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_type_path_mut(&mut self, ty: &mut TypePath) {$/;"	P	implementation:ReplaceReceiver
visit_type_path_mut_impl	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/internals/receiver.rs	/^    fn visit_type_path_mut_impl(&mut self, ty: &mut TypePath) {$/;"	P	implementation:ReplaceReceiver
visit_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_u16<E>(self, v: u16) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u16	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_u32<E>(self, v: u32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u32	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            fn visit_u32<E>(self, value: u32) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_u64<E>(self, x: u64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^                    fn visit_u64<E>(self, value: u64) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_u64<E>(self, v: u64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u64	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/value.rs	/^            fn visit_u64<E: de::Error>(self, value: u64) -> Result<Value, E> {$/;"	P	implementation:Value::deserialize::ValueVisitor
visit_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_u8<E>(self, v: u8) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u8	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/ignored_any.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:PhantomDataVisitor
visit_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:UnitVisitor
visit_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/mod.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_unit<E>(self) -> Result<(), E>$/;"	P	implementation:content::UntaggedUnitVisitor
visit_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_unit	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^            fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:Map::deserialize::Visitor
visited	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    visited: bool,$/;"	m	struct:DatetimeDeserializer
visitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        visitor: V,$/;"	m	struct:private::SeedStructVariant
visitor	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/de/value.rs	/^        visitor: V,$/;"	m	struct:private::SeedTupleVariant
void	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.133/src/ser/impossible.rs	/^    void: Void,$/;"	m	struct:Impossible
walk_spine	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn walk_spine(&self) -> impl std::iter::DoubleEndedIterator<Item = &TreeIndex> {$/;"	P	implementation:Tree
whitespace_normalization	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/linklabel.rs	/^    fn whitespace_normalization() {$/;"	f	module:test
whitespace_token	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/tokens.rs	/^    fn whitespace_token(&mut self, start: usize) -> Token<'a> {$/;"	P	implementation:Tokenizer
with_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^pub fn with_bound($/;"	f
with_capacity	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/tree.rs	/^    pub fn with_capacity(cap: usize) -> Tree<T> {$/;"	P	implementation:Tree
with_capacity	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/map.rs	/^    pub fn with_capacity(capacity: usize) -> Self {$/;"	P	implementation:Map
with_lifetime_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^pub fn with_lifetime_bound(generics: &syn::Generics, lifetime: &str) -> syn::Generics {$/;"	f
with_self_bound	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^pub fn with_self_bound($/;"	f
with_struct_key_validation	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/de.rs	/^    fn with_struct_key_validation(mut self) -> Self {$/;"	P	implementation:ValueDeserializer
with_where_predicates	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^pub fn with_where_predicates($/;"	f
with_where_predicates_from_fields	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^pub fn with_where_predicates_from_fields($/;"	f
with_where_predicates_from_variants	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^pub fn with_where_predicates_from_variants($/;"	f
without_defaults	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/bound.rs	/^pub fn without_defaults(generics: &syn::Generics) -> syn::Generics {$/;"	f
wrap_deserialize_field_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn wrap_deserialize_field_with($/;"	f
wrap_deserialize_variant_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn wrap_deserialize_variant_with($/;"	f
wrap_deserialize_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/de.rs	/^fn wrap_deserialize_with($/;"	f
wrap_in_const	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/dummy.rs	/^pub fn wrap_in_const($/;"	f
wrap_serialize_field_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn wrap_serialize_field_with($/;"	f
wrap_serialize_variant_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn wrap_serialize_variant_with($/;"	f
wrap_serialize_with	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.133/src/ser.rs	/^fn wrap_serialize_with($/;"	f
write	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    fn write(&mut self, s: &str) -> io::Result<()> {$/;"	f
write_fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^    fn write_fmt(&mut self, args: Arguments) -> io::Result<()> {$/;"	P	implementation:String
write_fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^    fn write_fmt(&mut self, args: Arguments) -> io::Result<()> {$/;"	f
write_fmt	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^    fn write_fmt(&mut self, args: Arguments) -> io::Result<()>;$/;"	P	interface:StrWrite
write_html	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^pub fn write_html<'a, I, W>(writer: W, iter: I) -> io::Result<()>$/;"	f
write_newline	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    fn write_newline(&mut self) -> io::Result<()> {$/;"	f
write_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^    fn write_str(&mut self, s: &str) -> io::Result<()> {$/;"	P	implementation:String
write_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^    fn write_str(&mut self, s: &str) -> io::Result<()> {$/;"	f
write_str	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/escape.rs	/^    fn write_str(&mut self, s: &str) -> io::Result<()>;$/;"	P	interface:StrWrite
writer	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.8.0/src/html.rs	/^    writer: W,$/;"	m	struct:HtmlWriter
year	/home/sammi/.cargo/registry/src/github.com-1ecc6299db9ec823/toml-0.5.8/src/datetime.rs	/^    year: u16,$/;"	m	struct:Date
