!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
A	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^impl<'de, 'a, A: ?Sized> MapAccess<'de> for &'a mut A$/;"	c
A	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^impl<'de, 'a, A: ?Sized> SeqAccess<'de> for &'a mut A$/;"	c
AMP_ESCAPE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^static AMP_ESCAPE: &str = "&amp;";$/;"	v
Abort	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Abort,$/;"	e	enum:TransitProcessResult
Accepts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^impl Accepts {$/;"	c
Accepts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^impl Default for Accepts {$/;"	c
Accepts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^pub(super) struct Accepts {$/;"	s
AccessDescription	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl Stackable for AccessDescription {$/;"	c
AccessDescriptionRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl AccessDescriptionRef {$/;"	c
Accessed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Accessed,$/;"	e	enum:DirEntryAttr
Action	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^pub struct Action {$/;"	s
ActionKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^pub(crate) enum ActionKind {$/;"	g
Active	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    Active,$/;"	e	enum:TableParseMode
ActualNumOccurrences	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    ActualNumOccurrences,$/;"	e	enum:ContextKind
ActualNumValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    ActualNumValues,$/;"	e	enum:ContextKind
Address	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    Address(IpAddr),$/;"	e	enum:Ip
Adhoc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^impl Adhoc {$/;"	c
Adhoc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^pub struct Adhoc;$/;"	s
AdhocKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^pub trait AdhocKind: Sized {$/;"	i
Adjacent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    Adjacent { tag: String, content: String },$/;"	e	enum:TagType
AdjustTokenPrivileges	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn AdjustTokenPrivileges($/;"	f	function:inner::acquire_privileges
AesKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/aes.rs	/^impl AesKey {$/;"	c
AesKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/aes.rs	/^pub struct AesKey(ffi::AES_KEY);$/;"	s
Alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    Alias(usize),$/;"	e	enum:Event
Alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    Alias(String),$/;"	e	enum:TokenType
Alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    Alias(usize),$/;"	e	enum:Yaml
Alignment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^pub enum Alignment {$/;"	g
AlignmentIndex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub(crate) struct AlignmentIndex(usize);$/;"	s
All	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    All,$/;"	e	enum:HttpVersionPref
All	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    All(ProxyScheme),$/;"	e	enum:Intercept
AllArgsOverrideSelf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    AllArgsOverrideSelf,$/;"	e	enum:AppSettings
Allocations	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'a> Allocations<'a> {$/;"	c
Allocations	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'a> Index<AlignmentIndex> for Allocations<'a> {$/;"	c
Allocations	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'a> Index<CowIndex> for Allocations<'a> {$/;"	c
Allocations	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'a> Index<HeadingIndex> for Allocations<'a> {$/;"	c
Allocations	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'a> Index<LinkIndex> for Allocations<'a> {$/;"	c
Allocations	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub(crate) struct Allocations<'a> {$/;"	s
AllowExternalSubcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    AllowExternalSubcommands,$/;"	e	enum:AppSettings
AllowHyphenValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    AllowHyphenValues,$/;"	e	enum:AppSettings
AllowHyphenValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    AllowHyphenValues,$/;"	e	enum:ArgSettings
AllowInvalidUtf8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    AllowInvalidUtf8,$/;"	e	enum:ArgSettings
AllowInvalidUtf8ForExternalSubcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    AllowInvalidUtf8ForExternalSubcommands,$/;"	e	enum:AppSettings
AllowLeadingHyphen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    AllowLeadingHyphen,$/;"	e	enum:AppSettings
AllowLeadingHyphen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    AllowLeadingHyphen,$/;"	e	enum:ArgSettings
AllowMissingPositional	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    AllowMissingPositional,$/;"	e	enum:AppSettings
AllowNegativeNumbers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    AllowNegativeNumbers,$/;"	e	enum:AppSettings
AlpnError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl AlpnError {$/;"	c
AlpnError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct AlpnError(c_int);$/;"	s
AlreadyExists	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    AlreadyExists,$/;"	e	enum:ErrorKind
Always	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/color.rs	/^    Always,$/;"	e	enum:ColorChoice
Ambiguous	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Ambiguous { timestamp: V, min: D, max: D },$/;"	e	enum:SerdeError
Ambiguous	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    Ambiguous(T \/*min*\/, T \/*max*\/),$/;"	e	enum:LocalResult
Anchor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    Anchor(String),$/;"	e	enum:TokenType
Any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    Any,$/;"	e	enum:TScalarStyle
AnyPath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    AnyPath,$/;"	e	enum:ValueHint
App	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^impl fmt::Display for App<'_> {$/;"	c
App	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^impl<'help> App<'help> {$/;"	c
App	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^impl<'help> Default for App<'help> {$/;"	c
App	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^impl<'help> Index<&'_ Id> for App<'help> {$/;"	c
App	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^pub struct App<'help> {$/;"	s
AppFlags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^impl Default for AppFlags {$/;"	c
AppFlags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^pub struct AppFlags(Flags);$/;"	s
AppSettings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^impl FromStr for AppSettings {$/;"	c
AppSettings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^pub enum AppSettings {$/;"	g
April	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    April = 3,$/;"	e	enum:Month
ArcWeak	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for ArcWeak<T>$/;"	c
ArcWeak	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for ArcWeak<T>$/;"	c
Arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^impl<'help> Arg<'help> {$/;"	c
Arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^impl<'help> Display for Arg<'help> {$/;"	c
Arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^impl<'help> Eq for Arg<'help> {}$/;"	c
Arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^impl<'help> From<&'_ Arg<'help>> for Arg<'help> {$/;"	c
Arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^impl<'help> Ord for Arg<'help> {$/;"	c
Arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^impl<'help> PartialEq for Arg<'help> {$/;"	c
Arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^impl<'help> PartialOrd for Arg<'help> {$/;"	c
Arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^impl<'help> fmt::Debug for Arg<'help> {$/;"	c
Arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^pub struct Arg<'help> {$/;"	s
Arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^    Arg(String, &'a str),$/;"	e	enum:Flag
ArgEnum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^pub trait ArgEnum: Sized + Clone {$/;"	i
ArgFlags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^impl Default for ArgFlags {$/;"	c
ArgFlags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^pub struct ArgFlags(Flags);$/;"	s
ArgGroup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^impl Clone for ArgGroup<'_> {$/;"	c
ArgGroup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^impl<'help> ArgGroup<'help> {$/;"	c
ArgGroup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^impl<'help> From<&'_ ArgGroup<'help>> for ArgGroup<'help> {$/;"	c
ArgGroup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^impl<'help> From<&'help Yaml> for ArgGroup<'help> {$/;"	c
ArgGroup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^pub struct ArgGroup<'help> {$/;"	s
ArgMatcher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^impl ArgMatcher {$/;"	c
ArgMatcher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^impl Deref for ArgMatcher {$/;"	c
ArgMatcher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^pub(crate) struct ArgMatcher(ArgMatches);$/;"	s
ArgMatches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl ArgMatches {$/;"	c
ArgMatches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^pub struct ArgMatches {$/;"	s
ArgPredicate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_predicate.rs	/^impl<'help> From<Option<&'help std::ffi::OsStr>> for ArgPredicate<'help> {$/;"	c
ArgPredicate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_predicate.rs	/^pub(crate) enum ArgPredicate<'help> {$/;"	g
ArgProvider	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^impl Default for ArgProvider {$/;"	c
ArgProvider	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^pub(crate) enum ArgProvider {$/;"	g
ArgRequiredElseHelp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    ArgRequiredElseHelp,$/;"	e	enum:AppSettings
ArgSettings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^impl FromStr for ArgSettings {$/;"	c
ArgSettings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^pub enum ArgSettings {$/;"	g
Args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^pub trait Args: FromArgMatches + Sized {$/;"	i
Args	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^pub struct Args {$/;"	s
ArgsNegateSubcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    ArgsNegateSubcommands,$/;"	e	enum:AppSettings
ArgumentConflict	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    ArgumentConflict,$/;"	e	enum:ErrorKind
ArgumentNotFound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    ArgumentNotFound,$/;"	e	enum:ErrorKind
Arguments	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<'a> Serialize for fmt::Arguments<'a> {$/;"	c
Array	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    Array(self::Array),$/;"	e	enum:Yaml
Array	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^pub type Array = Vec<Yaml>;$/;"	t
ArrayInPlaceVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct ArrayInPlaceVisitor<'a, A: 'a>(&'a mut A);$/;"	s
ArrayVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for ArrayVisitor<[T; 0]> {$/;"	c
ArrayVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<A> ArrayVisitor<A> {$/;"	c
ArrayVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct ArrayVisitor<A> {$/;"	s
Asn1BitStringRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl Asn1BitStringRef {$/;"	c
Asn1Flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl Asn1Flag {$/;"	c
Asn1Flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^pub struct Asn1Flag(c_int);$/;"	s
Asn1GeneralizedTimeRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl fmt::Display for Asn1GeneralizedTimeRef {$/;"	c
Asn1Integer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl Asn1Integer {$/;"	c
Asn1IntegerRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl Asn1IntegerRef {$/;"	c
Asn1Object	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl Asn1Object {$/;"	c
Asn1ObjectRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl Asn1ObjectRef {$/;"	c
Asn1ObjectRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl fmt::Debug for Asn1ObjectRef {$/;"	c
Asn1ObjectRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl fmt::Display for Asn1ObjectRef {$/;"	c
Asn1StringRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl Asn1StringRef {$/;"	c
Asn1StringRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl fmt::Debug for Asn1StringRef {$/;"	c
Asn1Time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl Asn1Time {$/;"	c
Asn1Time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl PartialEq for Asn1Time {$/;"	c
Asn1Time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl PartialEq<Asn1TimeRef> for Asn1Time {$/;"	c
Asn1Time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl PartialOrd for Asn1Time {$/;"	c
Asn1Time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl PartialOrd<Asn1TimeRef> for Asn1Time {$/;"	c
Asn1Time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl<'a> PartialEq<&'a Asn1TimeRef> for Asn1Time {$/;"	c
Asn1Time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl<'a> PartialOrd<&'a Asn1TimeRef> for Asn1Time {$/;"	c
Asn1TimeRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl Asn1TimeRef {$/;"	c
Asn1TimeRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl PartialEq for Asn1TimeRef {$/;"	c
Asn1TimeRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl PartialEq<Asn1Time> for Asn1TimeRef {$/;"	c
Asn1TimeRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl PartialOrd for Asn1TimeRef {$/;"	c
Asn1TimeRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl PartialOrd<Asn1Time> for Asn1TimeRef {$/;"	c
Asn1TimeRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl fmt::Debug for Asn1TimeRef {$/;"	c
Asn1TimeRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl fmt::Display for Asn1TimeRef {$/;"	c
Asn1TimeRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl<'a> PartialEq<Asn1Time> for &'a Asn1TimeRef {$/;"	c
Asn1TimeRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl<'a> PartialOrd<Asn1Time> for &'a Asn1TimeRef {$/;"	c
Asn1Type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^impl Asn1Type {$/;"	c
Asn1Type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^pub struct Asn1Type(c_int);$/;"	s
AsyncConn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^pub(crate) trait AsyncConn:$/;"	i
AttachedValueNotConsumed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    AttachedValueNotConsumed,$/;"	e	enum:ParseResult
Attempt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^impl<'a> Attempt<'a> {$/;"	c
Attempt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^pub struct Attempt<'a> {$/;"	s
Attr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^impl<'c, T> Attr<'c, T> {$/;"	c
Attr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^struct Attr<'c, T> {$/;"	s
AttrChar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    AttrChar,$/;"	e	enum:PercentEncoding
August	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    August = 7,$/;"	e	enum:Month
AuthorityKeyIdentifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^impl AuthorityKeyIdentifier {$/;"	c
AuthorityKeyIdentifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^impl Default for AuthorityKeyIdentifier {$/;"	c
AuthorityKeyIdentifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^pub struct AuthorityKeyIdentifier {$/;"	s
Auto	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/color.rs	/^    Auto,$/;"	e	enum:ColorChoice
AutoSi	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    AutoSi,$/;"	e	enum:SecondsFormat
Autolink	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Autolink,$/;"	e	enum:LinkType
B	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^impl<A, B> BothDebug for (A, B)$/;"	c
B	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^impl<A, B> NotBothDebug for &(A, B) {$/;"	c
B	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    impl<A, B> Pair for (A, B) {$/;"	c	module:private
BAD_VALUE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^static BAD_VALUE: Yaml = Yaml::BadValue;$/;"	v
BEGIN_TAGS	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    static BEGIN_TAGS: &[&[u8]; 4] = &[b"pre", b"style", b"script", b"textarea"];$/;"	v	function:get_html_end_tag
BTreeMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, K, V, E> IntoDeserializer<'de, E> for BTreeMap<K, V>$/;"	c
BTreeSet	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, T, E> IntoDeserializer<'de, E> for BTreeSet<T>$/;"	c
Backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    impl Backtrace {$/;"	c	module:capture
Backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    impl Debug for Backtrace {$/;"	c	module:capture
Backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    impl Display for Backtrace {$/;"	c	module:capture
Backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    pub(crate) struct Backtrace {$/;"	s	module:capture
Backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^pub(crate) enum Backtrace {}$/;"	g
Backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^impl Backtrace {$/;"	c
Backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^impl Display for Backtrace {$/;"	c
Backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^struct Backtrace(backtrace::Backtrace);$/;"	s
Backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^struct Backtrace;$/;"	s
BacktraceFrame	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    impl Debug for BacktraceFrame {$/;"	c	module:capture
BacktraceFrame	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    struct BacktraceFrame {$/;"	s	module:capture
BacktraceStatus	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    pub(crate) enum BacktraceStatus {$/;"	g	module:capture
BacktraceSymbol	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    impl Debug for BacktraceSymbol {$/;"	c	module:capture
BacktraceSymbol	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    struct BacktraceSymbol {$/;"	s	module:capture
BadFormat	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    BadFormat,$/;"	e	enum:ParseErrorKind
BadHashmapKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    BadHashmapKey,$/;"	e	enum:EmitError
BadValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    BadValue,$/;"	e	enum:Yaml
BaseInfo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    BaseInfo,$/;"	e	enum:DirEntryAttr
Bash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/bash.rs	/^impl Generator for Bash {$/;"	c
Bash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/bash.rs	/^pub struct Bash;$/;"	s
Bash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    Bash,$/;"	e	enum:Shell
Bash	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^    Bash,$/;"	e	enum:Shell
BasicConstraints	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^impl BasicConstraints {$/;"	c
BasicConstraints	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^impl Default for BasicConstraints {$/;"	c
BasicConstraints	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^pub struct BasicConstraints {$/;"	s
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl BigNum {$/;"	c
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl Eq for BigNum {}$/;"	c
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl Neg for BigNum {$/;"	c
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl Ord for BigNum {$/;"	c
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl PartialEq for BigNum {$/;"	c
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl PartialEq<BigNumRef> for BigNum {$/;"	c
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl PartialOrd for BigNum {$/;"	c
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl PartialOrd<BigNumRef> for BigNum {$/;"	c
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl fmt::Debug for BigNum {$/;"	c
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl fmt::Display for BigNum {$/;"	c
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl<'a> Neg for &'a BigNum {$/;"	c
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl<'a> Shl<i32> for &'a BigNum {$/;"	c
BigNum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl<'a> Shr<i32> for &'a BigNum {$/;"	c
BigNumContext	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl BigNumContext {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl Eq for BigNumRef {}$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl Ord for BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl PartialEq<BigNum> for BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl PartialEq<BigNumRef> for BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl PartialOrd<BigNum> for BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl PartialOrd<BigNumRef> for BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl fmt::Debug for BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl fmt::Display for BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl<'a, 'b> Add<&'b BigNumRef> for &'a BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl<'a, 'b> Div<&'b BigNumRef> for &'a BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl<'a, 'b> Mul<&'b BigNumRef> for &'a BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl<'a, 'b> Rem<&'b BigNumRef> for &'a BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl<'a, 'b> Sub<&'b BigNumRef> for &'a BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl<'a> Neg for &'a BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl<'a> Shl<i32> for &'a BigNumRef {$/;"	c
BigNumRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl<'a> Shr<i32> for &'a BigNumRef {$/;"	c
BinNameBuilt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    BinNameBuilt,$/;"	e	enum:AppSettings
BioMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^impl BioMethod {$/;"	c
BioMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^pub struct BioMethod(BIO_METHOD);$/;"	s
BioMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^unsafe impl Send for BioMethod {}$/;"	c
BioMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^unsafe impl Sync for BioMethod {}$/;"	c
Block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^    Block(TokenStream),$/;"	e	enum:Fragment
BlockEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    BlockEnd,$/;"	e	enum:TokenType
BlockEntry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    BlockEntry,$/;"	e	enum:TokenType
BlockMappingFirstKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    BlockMappingFirstKey,$/;"	e	enum:State
BlockMappingKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    BlockMappingKey,$/;"	e	enum:State
BlockMappingStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    BlockMappingStart,$/;"	e	enum:TokenType
BlockMappingValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    BlockMappingValue,$/;"	e	enum:State
BlockNode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    BlockNode,$/;"	e	enum:State
BlockQuote	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    BlockQuote,$/;"	e	enum:Tag
BlockQuote	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    BlockQuote,$/;"	e	enum:ItemBody
BlockSequenceEntry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    BlockSequenceEntry,$/;"	e	enum:State
BlockSequenceFirstEntry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    BlockSequenceFirstEntry,$/;"	e	enum:State
BlockSequenceStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    BlockSequenceStart,$/;"	e	enum:TokenType
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    Body,$/;"	e	enum:TableState
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl From<&'static [u8]> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl From<&'static str> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl From<Bytes> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl From<File> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl From<String> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl From<Vec<u8>> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl From<hyper::Body> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl fmt::Debug for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^pub struct Body {$/;"	s
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^impl From<Response> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^impl Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^impl From<&'static [u8]> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^impl From<&'static str> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^impl From<Bytes> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^impl From<File> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^impl From<String> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^impl From<Vec<u8>> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^pub struct Body {$/;"	s
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    Body,$/;"	e	enum:Kind
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^impl Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^impl From<&'static [u8]> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^impl From<&'static str> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^impl From<Bytes> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^impl From<String> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^impl From<Vec<u8>> for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^impl fmt::Debug for Body {$/;"	c
Body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^pub struct Body {$/;"	s
Bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    Bool(bool),$/;"	e	enum:ContextValue
Bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Bool(bool),$/;"	e	enum:Unexpected
Bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Bool(bool),$/;"	e	enum:content::Content
Bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        Bool(bool),$/;"	e	enum:content::Content
BoolAttr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^impl<'c> BoolAttr<'c> {$/;"	c
BoolAttr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^struct BoolAttr<'c>(Attr<'c, ()>);$/;"	s
BoolVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Visitor<'de> for BoolVisitor {$/;"	c
BoolVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct BoolVisitor;$/;"	s
Boolean	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Boolean(bool),$/;"	e	enum:DirEntryValue
Boolean	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    Boolean,$/;"	e	enum:Unsupported
Boolean	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    Boolean(bool),$/;"	e	enum:Yaml
Borrowed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    Borrowed(&'a str),$/;"	e	enum:CowStr
Borrowed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'de, E> IdentifierDeserializer<'de, E> for Borrowed<'de, [u8]>$/;"	c
Borrowed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'de, E> IdentifierDeserializer<'de, E> for Borrowed<'de, str>$/;"	c
Borrowed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^pub struct Borrowed<'de, T: 'de + ?Sized>(pub &'de T);$/;"	s
Borrowed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    Borrowed(BTreeSet<syn::Lifetime>),$/;"	e	enum:BorrowedLifetimes
BorrowedBytesDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> BorrowedBytesDeserializer<'de, E> {$/;"	c
BorrowedBytesDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> Debug for BorrowedBytesDeserializer<'de, E> {$/;"	c
BorrowedBytesDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> Deserializer<'de> for BorrowedBytesDeserializer<'de, E>$/;"	c
BorrowedBytesDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct BorrowedBytesDeserializer<'de, E> {$/;"	s
BorrowedLifetimes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^enum BorrowedLifetimes {$/;"	g
BorrowedLifetimes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^impl BorrowedLifetimes {$/;"	c
BorrowedLifetimes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    impl Parse for BorrowedLifetimes {$/;"	c	function:parse_lit_into_lifetimes
BorrowedLifetimes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    struct BorrowedLifetimes(Punctuated<syn::Lifetime, Token![+]>);$/;"	s	function:parse_lit_into_lifetimes
BorrowedStrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> BorrowedStrDeserializer<'de, E> {$/;"	c
BorrowedStrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> Debug for BorrowedStrDeserializer<'de, E> {$/;"	c
BorrowedStrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> de::EnumAccess<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct BorrowedStrDeserializer<'de, E> {$/;"	s
BorrowedStrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'de, E> Deserializer<'de> for BorrowedStrDeserializer<'de, E>$/;"	c
BorrowedStrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^pub struct BorrowedStrDeserializer<'de, E> {$/;"	s
BothDebug	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^pub trait BothDebug {$/;"	i
Bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Bound<T>$/;"	c
Bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T> Serialize for Bound<T>$/;"	c
BoundVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        impl<'de, T> Visitor<'de> for BoundVisitor<T>$/;"	c	function:deserialize
BoundVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        struct BoundVisitor<T>(PhantomData<Bound<T>>);$/;"	s	function:deserialize
Box	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl From<Error> for Box<dyn StdError + 'static> {$/;"	c
Box	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl From<Error> for Box<dyn StdError + Send + 'static> {$/;"	c
Box	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl From<Error> for Box<dyn StdError + Send + Sync + 'static> {$/;"	c
Box	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^impl BoxedKind for Box<dyn StdError + Send + Sync> {}$/;"	c
Box	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^impl<T: Args> Args for Box<T> {$/;"	c
Box	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^impl<T: CommandFactory> CommandFactory for Box<T> {$/;"	c
Box	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^impl<T: FromArgMatches> FromArgMatches for Box<T> {$/;"	c
Box	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^impl<T: Parser> Parser for Box<T> {$/;"	c
Box	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^impl<T: Subcommand> Subcommand for Box<T> {$/;"	c
BoxConn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^type BoxConn = Box<dyn AsyncConn>;$/;"	t
BoxError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub(crate) type BoxError = Box<dyn StdError + Send + Sync>;$/;"	t
Boxed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^impl Boxed {$/;"	c
Boxed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^pub struct Boxed;$/;"	s
Boxed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    Boxed(Box<str>),$/;"	e	enum:CowStr
BoxedError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^impl Debug for BoxedError {$/;"	c
BoxedError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^impl Display for BoxedError {$/;"	c
BoxedError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^impl StdError for BoxedError {$/;"	c
BoxedError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^pub struct BoxedError(pub Box<dyn StdError + Send + Sync>);$/;"	s
BoxedKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^pub trait BoxedKind: Sized {$/;"	i
BreakAtWith	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    BreakAtWith(usize, T),$/;"	e	enum:LoopInstruction
BrokenLink	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub struct BrokenLink<'a> {$/;"	s
BrokenLinkCallback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub type BrokenLinkCallback<'input, 'borrow> =$/;"	t
Brotli	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    Brotli(FramedRead<BrotliDecoder<StreamReader<Peekable<IoStream>, Bytes>>, BytesCodec>),$/;"	e	enum:Inner
Brotli	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    Brotli,$/;"	e	enum:DecoderType
Buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^impl Buf {$/;"	c
Buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^impl Write for Buf {$/;"	c
Buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^struct Buf {$/;"	s
Buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/format.rs	/^impl<'a> Buf<'a> {$/;"	c
Buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/format.rs	/^impl<'a> Write for Buf<'a> {$/;"	c
Buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/format.rs	/^pub struct Buf<'a> {$/;"	s
Buffer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    Buffer(&'writer mut Colorizer),$/;"	e	enum:HelpWriter
Buffered	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^    Buffered {$/;"	e	enum:ChainState
Build	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^    Build,$/;"	e	enum:Commands
Builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^impl Builder {$/;"	c
Builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^pub struct Builder {$/;"	s
Builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    Builder,$/;"	e	enum:Kind
Builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs	/^impl ResponseBuilderExt for http::response::Builder {$/;"	c
Builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^impl<'a, 'b> Builder<'a, 'b> {$/;"	c
Builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^impl<'a, 'b> Default for Builder<'a, 'b> {$/;"	c
Builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^pub struct Builder<'a, 'b> {$/;"	s
Built	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    Built,$/;"	e	enum:AppSettings
BuiltNativeTls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    BuiltNativeTls(native_tls_crate::TlsConnector),$/;"	e	enum:TlsBackend
BuiltRustls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    BuiltRustls(rustls::ClientConfig),$/;"	e	enum:TlsBackend
ByteArray	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    ByteArray,$/;"	e	enum:Unsupported
ByteBuf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        ByteBuf(Vec<u8>),$/;"	e	enum:content::Content
Bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        Bytes(Vec<u8>),$/;"	e	enum:capture::BytesOrWide
Bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    Bytes(Bytes),$/;"	e	enum:Kind
Bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    Bytes(Cursor<Bytes>),$/;"	e	enum:Reader
Bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    Bytes(Bytes),$/;"	e	enum:Inner
Bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Bytes(&'a [u8]),$/;"	e	enum:Unexpected
Bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Bytes(&'de [u8]),$/;"	e	enum:content::Content
Bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        Bytes(Vec<u8>),$/;"	e	enum:content::Content
BytesDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'a, E> BytesDeserializer<'a, E> {$/;"	c
BytesDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'a, E> Debug for BytesDeserializer<'a, E> {$/;"	c
BytesDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, 'a, E> Deserializer<'de> for BytesDeserializer<'a, E>$/;"	c
BytesDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct BytesDeserializer<'a, E> {$/;"	s
BytesOrWide	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    enum BytesOrWide {$/;"	g	module:capture
BytesOrWide	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    impl Debug for BytesOrWide {$/;"	c	module:capture
BytesVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'a> Visitor<'a> for BytesVisitor {$/;"	c
BytesVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct BytesVisitor;$/;"	s
Bzip2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^    Bzip2,$/;"	e	enum:CompressionMethod
Bzip2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    Bzip2(Crc32Reader<BzDecoder<CryptoReader<'a>>>),$/;"	e	enum:ZipFileReader
Bzip2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    Bzip2(BzEncoder<W>),$/;"	e	enum:GenericZipWriter
CALLED_BACK	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CALLED_BACK: AtomicBool = AtomicBool::new(false);$/;"	v	function:client_hello
CALLED_BACK	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CALLED_BACK: AtomicBool = AtomicBool::new(false);$/;"	v	function:new_session_callback
CALLED_BACK	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CALLED_BACK: AtomicBool = AtomicBool::new(false);$/;"	v	function:new_session_callback_swapped_ctx
CALLED_BACK	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CALLED_BACK: AtomicBool = AtomicBool::new(false);$/;"	v	function:sni_callback_swapped_ctx
CALLED_BACK	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CALLED_BACK: AtomicBool = AtomicBool::new(false);$/;"	v	function:ssl_verify_callback
CALLED_BACK	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CALLED_BACK: AtomicBool = AtomicBool::new(false);$/;"	v	function:tmp_dh_callback
CALLED_BACK	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CALLED_BACK: AtomicBool = AtomicBool::new(false);$/;"	v	function:tmp_dh_callback_ssl
CALLED_BACK	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CALLED_BACK: AtomicBool = AtomicBool::new(false);$/;"	v	function:tmp_ecdh_callback
CALLED_BACK	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CALLED_BACK: AtomicBool = AtomicBool::new(false);$/;"	v	function:tmp_ecdh_callback_ssl
CALLED_BACK	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CALLED_BACK: AtomicBool = AtomicBool::new(false);$/;"	v	function:verify_callback
CALLED_BACK_CLIENT	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CALLED_BACK_CLIENT: AtomicBool = AtomicBool::new(false);$/;"	v	function:status_callbacks
CALLED_BACK_SERVER	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CALLED_BACK_SERVER: AtomicBool = AtomicBool::new(false);$/;"	v	function:status_callbacks
CERT	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^static CERT: &[u8] = include_bytes!("..\/..\/..\/test\/cert.pem");$/;"	v
CLIENT_CALLED	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static CLIENT_CALLED: AtomicBool = AtomicBool::new(false);$/;"	v	function:psk_ciphers
CRCTABLE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^static CRCTABLE: [u32; 256] = [$/;"	v
CStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for CStr {$/;"	c
CString	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Deserialize<'de> for CString {$/;"	c
CString	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for CString {$/;"	c
CStringVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Visitor<'de> for CStringVisitor {$/;"	c
CStringVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct CStringVisitor;$/;"	s
CType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    type CType = ffi::SSL_CIPHER;$/;"	t	implementation:SslCipher
CType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    type CType = ffi::SSL_CIPHER;$/;"	t	implementation:SslCipherRef
CType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type CType = T::StackType;$/;"	t	implementation:Stack
CType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type CType = T::StackType;$/;"	t	implementation:StackRef
CallbackState	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^impl<F> CallbackState<F> {$/;"	c
CallbackState	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^impl<F> Drop for CallbackState<F> {$/;"	c
CallbackState	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^pub struct CallbackState<F> {$/;"	s
CamelCase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    CamelCase,$/;"	e	enum:RenameRule
Capture	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    impl Capture {$/;"	c	module:capture
Capture	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    struct Capture {$/;"	s	module:capture
Captured	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        Captured(LazilyResolvedCapture),$/;"	e	enum:capture::Inner
Captured	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        Captured,$/;"	e	enum:capture::BacktraceStatus
Captures	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^pub(crate) trait Captures<'a> {}$/;"	i
CaseInsensitive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    CaseInsensitive,$/;"	e	enum:ArgSettings
CastTo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^pub trait CastTo {$/;"	i
Cell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Cell<T>$/;"	c
Cell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T> Serialize for Cell<T>$/;"	c
Center	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Center,$/;"	e	enum:Alignment
CentralDirectoryEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^impl CentralDirectoryEnd {$/;"	c
CentralDirectoryEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^pub struct CentralDirectoryEnd {$/;"	s
Cert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^enum Cert {$/;"	g
Certificate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^impl Certificate {$/;"	c
Certificate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^impl fmt::Debug for Certificate {$/;"	c
Certificate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^pub struct Certificate {$/;"	s
Chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^impl Default for Chain<'_> {$/;"	c
Chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^impl DoubleEndedIterator for Chain<'_> {$/;"	c
Chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^impl ExactSizeIterator for Chain<'_> {$/;"	c
Chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^impl<'a> Chain<'a> {$/;"	c
Chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^impl<'a> Iterator for Chain<'a> {$/;"	c
Chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^pub(crate) struct Chain<'a> {$/;"	s
Chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^pub struct Chain<'a> {$/;"	s
ChainState	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^pub(crate) enum ChainState<'a> {$/;"	g
Char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Char(char),$/;"	e	enum:Unexpected
Char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Char(char),$/;"	e	enum:content::Content
Char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        Char(char),$/;"	e	enum:content::Content
Char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    Char,$/;"	e	enum:Unsupported
CharVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Visitor<'de> for CharVisitor {$/;"	c
CharVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct CharVisitor;$/;"	s
Child	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/graph.rs	/^impl<T> Child<T> {$/;"	c
Child	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/graph.rs	/^struct Child<T> {$/;"	s
ChildGraph	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/graph.rs	/^impl<T> ChildGraph<T>$/;"	c
ChildGraph	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/graph.rs	/^pub(crate) struct ChildGraph<T>(Vec<Child<T>>);$/;"	s
Cipher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^impl Cipher {$/;"	c
Cipher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^pub struct Cipher(*const ffi::EVP_CIPHER);$/;"	s
Cipher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^unsafe impl Send for Cipher {}$/;"	c
Cipher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^unsafe impl Sync for Cipher {}$/;"	c
CipherBits	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct CipherBits {$/;"	s
Cleanup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^        impl<'a> Drop for Cleanup<'a> {$/;"	c	method:X509StoreContextRef::init
Cleanup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^        struct Cleanup<'a>(&'a mut X509StoreContextRef);$/;"	s	method:X509StoreContextRef::init
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^impl Client {$/;"	c
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^pub struct Client {$/;"	s
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl Client {$/;"	c
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl Default for Client {$/;"	c
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl fmt::Debug for Client {$/;"	c
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^pub struct Client {$/;"	s
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^impl Client {$/;"	c
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^impl Default for Client {$/;"	c
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^impl fmt::Debug for Client {$/;"	c
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^pub struct Client {$/;"	s
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^impl Client {$/;"	c
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^impl Default for Client {$/;"	c
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^impl fmt::Debug for Client {$/;"	c
Client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^pub struct Client {$/;"	s
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^impl ClientBuilder {$/;"	c
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^pub struct ClientBuilder {$/;"	s
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl ClientBuilder {$/;"	c
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl Default for ClientBuilder {$/;"	c
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl fmt::Debug for ClientBuilder {$/;"	c
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^pub struct ClientBuilder {$/;"	s
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^impl ClientBuilder {$/;"	c
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^impl Default for ClientBuilder {$/;"	c
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^impl From<async_impl::ClientBuilder> for ClientBuilder {$/;"	c
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^impl fmt::Debug for ClientBuilder {$/;"	c
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^pub struct ClientBuilder {$/;"	s
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^impl ClientBuilder {$/;"	c
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^impl Default for ClientBuilder {$/;"	c
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^impl fmt::Debug for ClientBuilder {$/;"	c
ClientBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^pub struct ClientBuilder {$/;"	s
ClientCert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^enum ClientCert {$/;"	g
ClientHandle	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^impl ClientHandle {$/;"	c
ClientHandle	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^struct ClientHandle {$/;"	s
ClientHelloResponse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl ClientHelloResponse {$/;"	c
ClientHelloResponse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct ClientHelloResponse(c_int);$/;"	s
ClientRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl ClientRef {$/;"	c
ClientRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^struct ClientRef {$/;"	s
ClientSslBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^impl ClientSslBuilder {$/;"	c
ClientSslBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^pub struct ClientSslBuilder {$/;"	s
Closed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    Closed,$/;"	e	enum:GenericZipWriter
CmsContentInfo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/cms.rs	/^impl CmsContentInfo {$/;"	c
CmsContentInfoRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/cms.rs	/^impl CmsContentInfoRef {$/;"	c
Code	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Code(CowStr<'a>),$/;"	e	enum:Event
Code	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Code(CowIndex),$/;"	e	enum:ItemBody
CodeBlock	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    CodeBlock(CodeBlockKind<'a>),$/;"	e	enum:Tag
CodeBlockKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^impl<'a> CodeBlockKind<'a> {$/;"	c
CodeBlockKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^pub enum CodeBlockKind<'a> {$/;"	g
CodeDelims	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl CodeDelims {$/;"	c
CodeDelims	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^struct CodeDelims {$/;"	s
Collapsed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Collapsed,$/;"	e	enum:LinkType
Collapsed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Collapsed(Option<TreeIndex>),$/;"	e	enum:RefScan
CollapsedUnknown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    CollapsedUnknown,$/;"	e	enum:LinkType
ColorAlways	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    ColorAlways,$/;"	e	enum:AppSettings
ColorAuto	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    ColorAuto,$/;"	e	enum:AppSettings
ColorChoice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/color.rs	/^impl Default for ColorChoice {$/;"	c
ColorChoice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/color.rs	/^pub enum ColorChoice {$/;"	g
ColorNever	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    ColorNever,$/;"	e	enum:AppSettings
ColoredHelp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    ColoredHelp,$/;"	e	enum:AppSettings
Colorizer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^impl Colorizer {$/;"	c
Colorizer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^impl Display for Colorizer {$/;"	c
Colorizer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^pub(crate) struct Colorizer {$/;"	s
Command	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^pub type Command<'help> = App<'help>;$/;"	t
Command	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^    Command(String, &'a str),$/;"	e	enum:Flag
CommandFactory	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^pub trait CommandFactory: Sized {$/;"	i
CommandLine	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/value_source.rs	/^    CommandLine,$/;"	e	enum:ValueSource
CommandName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    CommandName,$/;"	e	enum:ValueHint
CommandString	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    CommandString,$/;"	e	enum:ValueHint
CommandWithArguments	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    CommandWithArguments,$/;"	e	enum:ValueHint
Commands	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^pub enum Commands {$/;"	g
CompressionMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^impl CompressionMethod {$/;"	c
CompressionMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^impl fmt::Display for CompressionMethod {$/;"	c
CompressionMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^pub enum CompressionMethod {$/;"	g
Conf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/conf.rs	/^impl Conf {$/;"	c
ConfMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/conf.rs	/^impl ConfMethod {$/;"	c
ConfMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/conf.rs	/^pub struct ConfMethod(*mut ffi::CONF_METHOD);$/;"	s
Config	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl Config {$/;"	c
Config	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^struct Config {$/;"	s
Config	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^impl Config {$/;"	c
Config	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^impl Default for Config {$/;"	c
Config	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^struct Config {$/;"	s
Conflicts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^impl Conflicts {$/;"	c
Conflicts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^struct Conflicts {$/;"	s
Conn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^impl AsyncRead for Conn {$/;"	c
Conn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^impl AsyncWrite for Conn {$/;"	c
Conn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^impl Connection for Conn {$/;"	c
ConnectConfiguration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^impl ConnectConfiguration {$/;"	c
ConnectConfiguration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^impl Deref for ConnectConfiguration {$/;"	c
ConnectConfiguration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^impl DerefMut for ConnectConfiguration {$/;"	c
ConnectConfiguration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^pub struct ConnectConfiguration {$/;"	s
Connecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^pub(crate) type Connecting = Pin<Box<dyn Future<Output = Result<Conn, BoxError>> + Send>>;$/;"	t
Connector	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^impl Connector {$/;"	c
Connector	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^impl Service<Uri> for Connector {$/;"	c
Connector	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^pub(crate) struct Connector {$/;"	s
Container	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^impl<'a> Container<'a> {$/;"	c
Container	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^pub struct Container<'a> {$/;"	s
Container	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^impl Container {$/;"	c
Container	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^pub struct Container {$/;"	s
Content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Content(Content<'de>),$/;"	e	enum:content::TagOrContent
Content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Content,$/;"	e	enum:content::TagContentOtherField
Content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Content,$/;"	e	enum:content::TagOrContentField
Content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de> Content<'de> {$/;"	c	module:content
Content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de> Deserialize<'de> for Content<'de> {$/;"	c	module:content
Content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub enum Content<'de> {$/;"	g	module:content
Content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl Serialize for Content {$/;"	c	module:content
Content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    pub enum Content {$/;"	g	module:content
ContentDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> ContentDeserializer<'de, E> {$/;"	c	module:content
ContentDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> Deserializer<'de> for ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> de::IntoDeserializer<'de, E> for ContentDeserializer<'de, E>$/;"	c	module:content
ContentDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub struct ContentDeserializer<'de, E> {$/;"	s	module:content
ContentRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'a, 'de, E> ContentRefDeserializer<'a, 'de, E> {$/;"	c	module:content
ContentRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'a, 'de, E> ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, 'a, E> Deserializer<'de> for ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, 'a, E> de::IntoDeserializer<'de, E> for ContentRefDeserializer<'a, 'de, E>$/;"	c	module:content
ContentRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub struct ContentRefDeserializer<'a, 'de: 'a, E> {$/;"	s	module:content
ContentSerializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<E> ContentSerializer<E> {$/;"	c	module:content
ContentSerializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<E> Serializer for ContentSerializer<E>$/;"	c	module:content
ContentSerializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    pub struct ContentSerializer<E> {$/;"	s	module:content
ContentVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de> ContentVisitor<'de> {$/;"	c	module:content
ContentVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de> Visitor<'de> for ContentVisitor<'de> {$/;"	c	module:content
ContentVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    struct ContentVisitor<'de> {$/;"	s	module:content
Context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^pub trait Context<T, E>: context::private::Sealed {$/;"	i
ContextError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^impl<C, E> Debug for ContextError<C, E>$/;"	c
ContextError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^impl<C, E> Display for ContextError<C, E>$/;"	c
ContextError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^impl<C, E> StdError for ContextError<C, E>$/;"	c
ContextError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^impl<C> StdError for ContextError<C, Error>$/;"	c
ContextError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^pub(crate) struct ContextError<C, E> {$/;"	s
ContextKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^pub enum ContextKind {$/;"	g
ContextValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^pub enum ContextValue {$/;"	g
ContinueAndSkip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    ContinueAndSkip(usize),$/;"	e	enum:LoopInstruction
ContinueOrAbort	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    ContinueOrAbort,$/;"	e	enum:TransitProcessResult
Cookie	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^impl<'a> Cookie<'a> {$/;"	c
Cookie	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^impl<'a> fmt::Debug for Cookie<'a> {$/;"	c
Cookie	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^pub struct Cookie<'a>(cookie_crate::Cookie<'a>);$/;"	s
CookieParseError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^impl std::error::Error for CookieParseError {}$/;"	c
CookieParseError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^impl<'a> fmt::Debug for CookieParseError {$/;"	c
CookieParseError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^impl<'a> fmt::Display for CookieParseError {$/;"	c
CookieParseError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^pub(crate) struct CookieParseError(cookie_crate::ParseError);$/;"	s
CookieStore	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^pub trait CookieStore: Send + Sync {$/;"	i
CopyOptions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^impl CopyOptions {$/;"	c
CopyOptions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^impl Default for CopyOptions {$/;"	c
CopyOptions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub struct CopyOptions {$/;"	s
CopyOptions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^impl CopyOptions {$/;"	c
CopyOptions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^impl Default for CopyOptions {$/;"	c
CopyOptions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^pub struct CopyOptions {$/;"	s
Cow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> From<CowStr<'a>> for Cow<'a, str> {$/;"	c
Cow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, 'a, T: ?Sized> Deserialize<'de> for Cow<'a, T>$/;"	c
Cow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for Cow<'a, str>$/;"	c
CowBytesVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'a> Visitor<'a> for CowBytesVisitor {$/;"	c	function:borrow_cow_bytes
CowBytesVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    struct CowBytesVisitor;$/;"	s	function:borrow_cow_bytes
CowIndex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub(crate) struct CowIndex(usize);$/;"	s
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    impl<'a, 'de: 'a> Deserialize<'de> for CowStr<'a> {$/;"	c	module:serde_impl
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    impl<'a> Serialize for CowStr<'a> {$/;"	c	module:serde_impl
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> AsRef<str> for CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> Borrow<str> for CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> Deref for CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> From<&'a str> for CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> From<Cow<'a, char>> for CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> From<Cow<'a, str>> for CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> From<String> for CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> From<char> for CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> Hash for CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> fmt::Display for CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> std::clone::Clone for CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> std::cmp::PartialEq<CowStr<'a>> for CowStr<'a> {$/;"	c
CowStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^pub enum CowStr<'a> {$/;"	g
CowStrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'a, E> Clone for CowStrDeserializer<'a, E> {$/;"	c
CowStrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'a, E> Debug for CowStrDeserializer<'a, E> {$/;"	c
CowStrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, 'a, E> de::Deserializer<'de> for CowStrDeserializer<'a, E>$/;"	c
CowStrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for CowStrDeserializer<'a, E>$/;"	c
CowStrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct CowStrDeserializer<'a, E> {$/;"	s
CowStrVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    impl<'de> de::Visitor<'de> for CowStrVisitor {$/;"	c	module:serde_impl
CowStrVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    struct CowStrVisitor;$/;"	s	module:serde_impl
CowStrVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'a> Visitor<'a> for CowStrVisitor {$/;"	c	function:borrow_cow_str
CowStrVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    struct CowStrVisitor;$/;"	s	function:borrow_cow_str
Crc32Reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^impl<R: Read> Read for Crc32Reader<R> {$/;"	c
Crc32Reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^impl<R> Crc32Reader<R> {$/;"	c
Crc32Reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^pub struct Crc32Reader<R> {$/;"	s
Created	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Created,$/;"	e	enum:DirEntryAttr
Crypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^impl Crypter {$/;"	c
Crypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^impl Drop for Crypter {$/;"	c
Crypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^pub struct Crypter {$/;"	s
Crypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^unsafe impl Send for Crypter {}$/;"	c
Crypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^unsafe impl Sync for Crypter {}$/;"	c
CryptoReader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^enum CryptoReader<'a> {$/;"	g
CryptoReader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^impl<'a> CryptoReader<'a> {$/;"	c
CryptoReader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^impl<'a> Read for CryptoReader<'a> {$/;"	c
Ctime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    Ctime,$/;"	e	enum:Fmt
Ctxt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ctxt.rs	/^impl Ctxt {$/;"	c
Ctxt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ctxt.rs	/^impl Drop for Ctxt {$/;"	c
Ctxt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ctxt.rs	/^pub struct Ctxt {$/;"	s
Custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    Custom,$/;"	e	enum:ContextKind
Custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    Custom(Custom),$/;"	e	enum:Intercept
Custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl Custom {$/;"	c
Custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl fmt::Debug for Custom {$/;"	c
Custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^struct Custom {$/;"	s
Custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    Custom(Box<dyn Fn(Attempt) -> Action + Send + Sync + 'static>),$/;"	e	enum:PolicyKind
CustomExtAddState	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub struct CustomExtAddState<T>(Option<T>);$/;"	s
D_FMT	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^static D_FMT: &'static [Item<'static>] =$/;"	v
D_T_FMT	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^static D_T_FMT: &'static [Item<'static>] = &[$/;"	v
Data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    type Data = Bytes;$/;"	t
Data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    type Data = Bytes;$/;"	t	implementation:ImplStream
Data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    type Data = Bytes;$/;"	t	implementation:WrapHyper
Data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    type Data = Bytes;$/;"	t	implementation:Decoder
Data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^impl<'a> Data<'a> {$/;"	c
Data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^pub enum Data<'a> {$/;"	g
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone, Tz2: TimeZone> PartialEq<Date<Tz2>> for Date<Tz> {$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Add<OldDuration> for Date<Tz> {$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Copy for Date<Tz> where <Tz as TimeZone>::Offset: Copy {}$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Date<Tz> {$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Date<Tz>$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Datelike for Date<Tz> {$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Eq for Date<Tz> {}$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Ord for Date<Tz> {$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> PartialOrd for Date<Tz> {$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Sub<Date<Tz>> for Date<Tz> {$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> Sub<OldDuration> for Date<Tz> {$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> fmt::Debug for Date<Tz> {$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> fmt::Display for Date<Tz>$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^impl<Tz: TimeZone> hash::Hash for Date<Tz> {$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^pub struct Date<Tz: TimeZone> {$/;"	s
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^unsafe impl<Tz: TimeZone> Send for Date<Tz> where <Tz as TimeZone>::Offset: Send {}$/;"	c
Date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<Utc>> for js_sys::Date {$/;"	c
DateImpl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub type DateImpl = i32;$/;"	t
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl Decodable for DateTime<FixedOffset> {$/;"	c	module:rustc_serialize
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl Decodable for DateTime<Local> {$/;"	c	module:rustc_serialize
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl Decodable for DateTime<Utc> {$/;"	c	module:rustc_serialize
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<'de> de::Deserialize<'de> for DateTime<FixedOffset> {$/;"	c	module:serde
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<'de> de::Deserialize<'de> for DateTime<Local> {$/;"	c	module:serde
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<'de> de::Deserialize<'de> for DateTime<Utc> {$/;"	c	module:serde
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<Tz: TimeZone> Encodable for DateTime<Tz> {$/;"	c	module:rustc_serialize
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<Tz: TimeZone> From<TsSeconds<Tz>> for DateTime<Tz> {$/;"	c	module:rustc_serialize
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<Tz: TimeZone> ser::Serialize for DateTime<Tz> {$/;"	c	module:serde
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl DateTime<FixedOffset> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<&js_sys::Date> for DateTime<Utc> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<FixedOffset>> for DateTime<Local> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<FixedOffset>> for DateTime<Utc> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<Local>> for DateTime<FixedOffset> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<Local>> for DateTime<Utc> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<Utc>> for DateTime<FixedOffset> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<DateTime<Utc>> for DateTime<Local> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<SystemTime> for DateTime<Local> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<SystemTime> for DateTime<Utc> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl From<js_sys::Date> for DateTime<Utc> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl str::FromStr for DateTime<Local> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl str::FromStr for DateTime<Utc> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone, Tz2: TimeZone> PartialEq<DateTime<Tz2>> for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone, Tz2: TimeZone> PartialOrd<DateTime<Tz2>> for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Add<OldDuration> for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Copy for DateTime<Tz> where <Tz as TimeZone>::Offset: Copy {}$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> DateTime<Tz>$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Datelike for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Eq for DateTime<Tz> {}$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Ord for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Sub<DateTime<Tz>> for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Sub<OldDuration> for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> Timelike for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> fmt::Debug for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> fmt::Display for DateTime<Tz>$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> hash::Hash for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub struct DateTime<Tz: TimeZone> {$/;"	s
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^unsafe impl<Tz: TimeZone> Send for DateTime<Tz> where <Tz as TimeZone>::Offset: Send {}$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^impl str::FromStr for DateTime<FixedOffset> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl<Tz: TimeZone> Add<FixedOffset> for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl<Tz: TimeZone> Sub<FixedOffset> for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^impl<Tz: TimeZone> DurationRound for DateTime<Tz> {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^impl ::std::default::Default for DateTime {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^impl DateTime {$/;"	c
DateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^pub struct DateTime {$/;"	s
DateTimeVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<'de> de::Visitor<'de> for DateTimeVisitor {$/;"	c	module:serde
DateTimeVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    struct DateTimeVisitor;$/;"	s	module:serde
Datelike	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub trait Datelike: Sized {$/;"	i
Day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Day,$/;"	e	enum:Numeric
DeImplGenerics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^impl<'a> DeImplGenerics<'a> {$/;"	c
DeImplGenerics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^impl<'a> ToTokens for DeImplGenerics<'a> {$/;"	c
DeImplGenerics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^struct DeImplGenerics<'a>(&'a Parameters);$/;"	s
DeTypeGenerics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^impl<'a> DeTypeGenerics<'a> {$/;"	c
DeTypeGenerics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^impl<'a> ToTokens for DeTypeGenerics<'a> {$/;"	c
DeTypeGenerics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^struct DeTypeGenerics<'a>(&'a Parameters);$/;"	s
DebugLength	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^impl<'a> fmt::Debug for DebugLength<'a> {$/;"	c
DebugLength	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^struct DebugLength<'a>(&'a Option<u64>);$/;"	s
December	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    December = 11,$/;"	e	enum:Month
Decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    Decode,$/;"	e	enum:Kind
Decoder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^impl Decoder {$/;"	c
Decoder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^impl HttpBody for Decoder {$/;"	c
Decoder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^impl Stream for Decoder {$/;"	c
Decoder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^impl fmt::Debug for Decoder {$/;"	c
Decoder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^pub(crate) struct Decoder {$/;"	s
DecoderType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^enum DecoderType {$/;"	g
Decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    Decrypt,$/;"	e	enum:Mode
Decrypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^impl<'a> Decrypter<'a> {$/;"	c
Decrypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^impl<'a> Drop for Decrypter<'a> {$/;"	c
Decrypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^pub struct Decrypter<'a> {$/;"	s
Decrypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^unsafe impl<'a> Send for Decrypter<'a> {}$/;"	c
Decrypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^unsafe impl<'a> Sync for Decrypter<'a> {}$/;"	c
Default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    Default,$/;"	e	enum:UsageToken
Default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    Default,$/;"	e	enum:Style
Default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    Default,$/;"	e	enum:TlsBackend
Default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    Default,$/;"	e	enum:Default
Default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^impl Default {$/;"	c
Default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^pub enum Default {$/;"	g
DefaultTls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    DefaultTls(HttpConnector, TlsConnector),$/;"	e	enum:Inner
DefaultValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/value_source.rs	/^    DefaultValue,$/;"	e	enum:ValueSource
Deflate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    Deflate(FramedRead<ZlibDecoder<StreamReader<Peekable<IoStream>, Bytes>>, BytesCodec>),$/;"	e	enum:Inner
Deflate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    Deflate,$/;"	e	enum:DecoderType
Deflated	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^    Deflated,$/;"	e	enum:CompressionMethod
Deflated	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    Deflated(Crc32Reader<flate2::read::DeflateDecoder<CryptoReader<'a>>>),$/;"	e	enum:ZipFileReader
Deflater	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    Deflater(DeflateEncoder<W>),$/;"	e	enum:GenericZipWriter
DelayedFormat	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl<'a, I: Iterator<Item = B> + Clone, B: Borrow<Item<'a>>> DelayedFormat<I> {$/;"	c
DelayedFormat	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl<'a, I: Iterator<Item = B> + Clone, B: Borrow<Item<'a>>> fmt::Display for DelayedFormat<I> {$/;"	c
DelayedFormat	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub struct DelayedFormat<I> {$/;"	s
Der	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    Der(Vec<u8>),$/;"	e	enum:Cert
Derive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/mod.rs	/^pub enum Derive {$/;"	g
DeriveDisplayOrder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    DeriveDisplayOrder,$/;"	e	enum:AppSettings
Deriver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^impl<'a> Deriver<'a> {$/;"	c
Deriver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^impl<'a> Drop for Deriver<'a> {$/;"	c
Deriver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^pub struct Deriver<'a>(*mut ffi::EVP_PKEY_CTX, PhantomData<&'a ()>);$/;"	s
Deriver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^unsafe impl<'a> Send for Deriver<'a> {}$/;"	c
Deriver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^unsafe impl<'a> Sync for Deriver<'a> {}$/;"	c
Deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Deserialize<'de> for ! {$/;"	c
Deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Deserialize<'de> for () {$/;"	c
Deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub trait Deserialize<'de>: Sized {$/;"	i
Deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/mod.rs	/^    Deserialize,$/;"	e	enum:Derive
DeserializeOwned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub trait DeserializeOwned: for<'de> Deserialize<'de> {}$/;"	i
DeserializeSeed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub trait DeserializeSeed<'de>: Sized {$/;"	i
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	t	interface:IntoDeserializer
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub trait Deserializer<'de>: Sized {$/;"	i
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Deserializer = BytesDeserializer<'a, E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Deserializer = CowStrDeserializer<'a, E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Deserializer = MapDeserializer<'de, <Self as IntoIterator>::IntoIter, E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Deserializer = NeverDeserializer<E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Deserializer = SeqDeserializer<<Self as IntoIterator>::IntoIter, E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Deserializer = StringDeserializer<E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Deserializer = U32Deserializer<E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Deserializer = UnitDeserializer<E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Deserializer = Self;$/;"	t	module:content
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    type Deserializer = <u64 as IntoDeserializer<'de, E>>::Deserializer;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    type Deserializer = BorrowedBytesDeserializer<'de, E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    type Deserializer = BorrowedStrDeserializer<'de, E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    type Deserializer = BytesDeserializer<'a, E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    type Deserializer = StrDeserializer<'a, E>;$/;"	t
Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    type Deserializer: Deserializer<'de, Error = E>;$/;"	t	interface:IdentifierDeserializer
Dh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^impl Dh<Params> {$/;"	c
Dh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^impl<T> Dh<T>$/;"	c
Dh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> TryFrom<PKey<T>> for Dh<T> {$/;"	c
DhRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^impl<T> DhRef<T>$/;"	c
DigestBytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^impl AsRef<[u8]> for DigestBytes {$/;"	c
DigestBytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^impl Clone for DigestBytes {$/;"	c
DigestBytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^impl Deref for DigestBytes {$/;"	c
DigestBytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^impl DerefMut for DigestBytes {$/;"	c
DigestBytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^impl fmt::Debug for DigestBytes {$/;"	c
DigestBytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^pub struct DigestBytes {$/;"	s
DirContent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub struct DirContent {$/;"	s
DirEntryAttr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub enum DirEntryAttr {$/;"	g
DirEntryValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub enum DirEntryValue {$/;"	g
DirOptions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^impl DirOptions {$/;"	c
DirOptions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub struct DirOptions {$/;"	s
DirPath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    DirPath,$/;"	e	enum:ValueHint
DisableColoredHelp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    DisableColoredHelp,$/;"	e	enum:AppSettings
DisableHelpFlag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    DisableHelpFlag,$/;"	e	enum:AppSettings
DisableHelpFlags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    DisableHelpFlags,$/;"	e	enum:AppSettings
DisableHelpSubcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    DisableHelpSubcommand,$/;"	e	enum:AppSettings
DisableVersion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    DisableVersion,$/;"	e	enum:AppSettings
DisableVersionFlag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    DisableVersionFlag,$/;"	e	enum:AppSettings
Disabled	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        Disabled,$/;"	e	enum:capture::BacktraceStatus
Disabled	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        Disabled,$/;"	e	enum:capture::Inner
Disabled	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    Disabled,$/;"	e	enum:TableParseMode
Disabled	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Disabled,$/;"	e	enum:LinkStackTy
DisplayError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^impl<M> Debug for DisplayError<M>$/;"	c
DisplayError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^impl<M> Display for DisplayError<M>$/;"	c
DisplayError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^impl<M> StdError for DisplayError<M> where M: Display + 'static {}$/;"	c
DisplayError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^pub struct DisplayError<M>(pub M);$/;"	s
DisplayHelp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    DisplayHelp,$/;"	e	enum:ErrorKind
DisplayHelpOnMissingArgumentOrSubcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    DisplayHelpOnMissingArgumentOrSubcommand,$/;"	e	enum:ErrorKind
DisplayOrder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^impl Default for DisplayOrder {$/;"	c
DisplayOrder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^impl DisplayOrder {$/;"	c
DisplayOrder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^pub(crate) enum DisplayOrder {$/;"	g
DisplayVersion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    DisplayVersion,$/;"	e	enum:ErrorKind
DnsResolve	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(super) enum DnsResolve {$/;"	g	module:socks
DnsResolverWithOverrides	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^impl<Resolver, Iter> Service<Name> for DnsResolverWithOverrides<Resolver>$/;"	c
DnsResolverWithOverrides	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^impl<Resolver: Clone> DnsResolverWithOverrides<Resolver> {$/;"	c
DnsResolverWithOverrides	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^pub(crate) struct DnsResolverWithOverrides<Resolver>$/;"	s
DocumentContent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    DocumentContent,$/;"	e	enum:State
DocumentEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    DocumentEnd,$/;"	e	enum:Event
DocumentEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    DocumentEnd,$/;"	e	enum:State
DocumentEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    DocumentEnd,$/;"	e	enum:TokenType
DocumentStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    DocumentStart,$/;"	e	enum:Event
DocumentStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    DocumentStart,$/;"	e	enum:State
DocumentStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    DocumentStart,$/;"	e	enum:TokenType
DomainMatcher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl DomainMatcher {$/;"	c
DomainMatcher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^struct DomainMatcher(Vec<String>);$/;"	s
DontCollapseArgsInUsage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    DontCollapseArgsInUsage,$/;"	e	enum:AppSettings
DontDelimitTrailingValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    DontDelimitTrailingValues,$/;"	e	enum:AppSettings
Dos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    Dos = 0,$/;"	e	enum:System
DosPath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    DosPath,$/;"	e	enum:DirEntryAttr
DoubleQuoted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    DoubleQuoted,$/;"	e	enum:TScalarStyle
Dsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^impl Dsa<Private> {$/;"	c
Dsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^impl Dsa<Public> {$/;"	c
Dsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^impl<T> Clone for Dsa<T> {$/;"	c
Dsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^impl<T> fmt::Debug for Dsa<T> {$/;"	c
Dsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> TryFrom<PKey<T>> for Dsa<T> {$/;"	c
DsaRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^impl<T> DsaRef<T>$/;"	c
DsaRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^impl<T> ToOwned for DsaRef<T> {$/;"	c
Dst	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^pub(crate) trait Dst {$/;"	i
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Add for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Div<i32> for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Mul<i32> for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Neg for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Sub for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl fmt::Display for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^pub struct Duration {$/;"	s
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Deserialize<'de> for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Add for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Div<i32> for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Mul<i32> for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Neg for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Sub for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl fmt::Display for Duration {$/;"	c
Duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^pub struct Duration {$/;"	s
DurationExceedsLimit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    DurationExceedsLimit,$/;"	e	enum:RoundingError
DurationExceedsTimestamp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    DurationExceedsTimestamp,$/;"	e	enum:RoundingError
DurationRound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^pub trait DurationRound: Sized {$/;"	i
DurationVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        impl<'de> Visitor<'de> for DurationVisitor {$/;"	c	method:Duration::deserialize
DurationVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        impl<'de> Visitor<'de> for DurationVisitor {$/;"	c	method:SystemTime::deserialize
DurationVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s	method:Duration::deserialize
DurationVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        struct DurationVisitor;$/;"	s	method:SystemTime::deserialize
E	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    impl<E> StdError for E$/;"	c	module:ext
E	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^impl<E> TraitKind for E where E: Into<Error> {}$/;"	c
EMPTY	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^        static EMPTY: [Vec<OsString>; 0] = [];$/;"	v	method:GroupedValues::default
EMPTY	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^        static EMPTY: [Vec<OsString>; 0] = [];$/;"	v	method:OsValues::default
EMPTY	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^        static EMPTY: [Vec<OsString>; 0] = [];$/;"	v	method:Values::default
EMPTY	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^        static EMPTY: [usize; 0] = [];$/;"	v	method:Indices::default
ENABLED	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^            static ENABLED: AtomicUsize = AtomicUsize::new(0);$/;"	v	method:capture::Backtrace::enabled
EVP_DigestVerifyFinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^unsafe fn EVP_DigestVerifyFinal($/;"	f
EcGroup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl EcGroup {$/;"	c
EcGroupRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl EcGroupRef {$/;"	c
EcKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl EcKey<Params> {$/;"	c
EcKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl EcKey<Private> {$/;"	c
EcKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl EcKey<Public> {$/;"	c
EcKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl<T> Clone for EcKey<T> {$/;"	c
EcKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl<T> fmt::Debug for EcKey<T> {$/;"	c
EcKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> TryFrom<PKey<T>> for EcKey<T> {$/;"	c
EcKeyRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl<T> EcKeyRef<T>$/;"	c
EcKeyRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl<T> ToOwned for EcKeyRef<T> {$/;"	c
EcPoint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl EcPoint {$/;"	c
EcPointRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl EcPointRef {$/;"	c
EcdsaSig	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ecdsa.rs	/^impl EcdsaSig {$/;"	c
EcdsaSigRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ecdsa.rs	/^impl EcdsaSigRef {$/;"	c
Either	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    impl<A, B> Iterator for Either<A, B>$/;"	c	module:itertools
Either	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(crate) enum Either<A, B> {$/;"	g	module:itertools
Elvish	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/elvish.rs	/^impl Generator for Elvish {$/;"	c
Elvish	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/elvish.rs	/^pub struct Elvish;$/;"	s
Elvish	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    Elvish,$/;"	e	enum:Shell
Elvish	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^    Elvish,$/;"	e	enum:Shell
Email	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Email,$/;"	e	enum:LinkType
EmailAddress	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    EmailAddress,$/;"	e	enum:ValueHint
EmitError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^impl Display for EmitError {$/;"	c
EmitError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^impl Error for EmitError {$/;"	c
EmitError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^impl From<fmt::Error> for EmitError {$/;"	c
EmitError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^pub enum EmitError {$/;"	g
EmitResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^pub type EmitResult = Result<(), EmitError>;$/;"	t
Emphasis	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Emphasis,$/;"	e	enum:Tag
Emphasis	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Emphasis,$/;"	e	enum:ItemBody
EmptyValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    EmptyValue,$/;"	e	enum:ErrorKind
Encode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/utf8.rs	/^impl Encode {$/;"	c
Encode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/utf8.rs	/^pub struct Encode {$/;"	s
Encrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    Encrypt,$/;"	e	enum:Mode
Encrypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^impl<'a> Drop for Encrypter<'a> {$/;"	c
Encrypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^impl<'a> Encrypter<'a> {$/;"	c
Encrypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^pub struct Encrypter<'a> {$/;"	s
Encrypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^unsafe impl<'a> Send for Encrypter<'a> {}$/;"	c
Encrypter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^unsafe impl<'a> Sync for Encrypter<'a> {}$/;"	c
End	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    End(Tag<'a>),$/;"	e	enum:Event
End	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        End,$/;"	e	enum:range::Field
End	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    End,$/;"	e	enum:State
Enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Enum,$/;"	e	enum:Unexpected
Enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    Enum,$/;"	e	enum:Unsupported
Enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    Enum(Vec<Variant<'a>>),$/;"	e	enum:Data
EnumAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub trait EnumAccess<'de>: Sized {$/;"	i
EnumDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> EnumDeserializer<'de, E>$/;"	c	module:content
EnumDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> de::EnumAccess<'de> for EnumDeserializer<'de, E>$/;"	c	module:content
EnumDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub struct EnumDeserializer<'de, E>$/;"	s	module:content
EnumRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, 'a, E> de::EnumAccess<'de> for EnumRefDeserializer<'a, 'de, E>$/;"	c	module:content
EnumRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    struct EnumRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
EnvGuard	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    impl Drop for EnvGuard {$/;"	c	module:tests
EnvGuard	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    struct EnvGuard {$/;"	s	module:tests
EnvVariable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/value_source.rs	/^    EnvVariable,$/;"	e	enum:ValueSource
Equals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_predicate.rs	/^    Equals(&'help std::ffi::OsStr),$/;"	e	enum:ArgPredicate
EqualsNotProvided	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    EqualsNotProvided {$/;"	e	enum:ParseResult
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    type Err = ParseError;$/;"	t	implementation:DateTime
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    type Err = ParseMonthError;$/;"	t	implementation:Month
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    type Err = ParseWeekdayError;$/;"	t	implementation:Weekday
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    type Err = ParseError;$/;"	t	implementation:DateTime
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Err = ParseError;$/;"	t	implementation:NaiveDate
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    type Err = ParseError;$/;"	t	implementation:NaiveDateTime
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    type Err = ParseError;$/;"	t	implementation:NaiveTime
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    type Err = RoundingError;$/;"	t	implementation:DateTime
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    type Err: fmt::Debug + fmt::Display;$/;"	t	interface:DurationRound
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    type Err: std::error::Error;$/;"	t	interface:DurationRound
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    type Err = String;$/;"	t	implementation:AppSettings
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    type Err = String;$/;"	t	implementation:ArgSettings
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    type Err = Error;$/;"	t	implementation:RegexRef
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    type Err = String;$/;"	t	implementation:ValueHint
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    type Err = String;$/;"	t	implementation:Shell
Err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            Err,$/;"	e	enum:deserialize::Field
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    impl StdError for Error {$/;"	c	module:ext
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl AsRef<dyn StdError + Send + Sync> for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl AsRef<dyn StdError> for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl Debug for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl Deref for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl DerefMut for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl Display for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl Drop for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl<E> From<E> for Error$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^pub struct Error {$/;"	s
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Error,$/;"	e	enum:Item
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    type Error = <Self as FromStr>::Err;$/;"	t	implementation:RegexRef
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^        impl Foo for Error {}$/;"	c	module:tests::clap_error_impl_send_sync
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^impl Display for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^impl Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^impl From<fmt::Error> for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^impl From<io::Error> for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^impl error::Error for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^pub struct Error {$/;"	s
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    Error,$/;"	e	enum:Style
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^impl Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^impl From<IoError> for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^impl From<OsString> for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^impl From<StripPrefixError> for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^impl StdError for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^pub struct Error {$/;"	s
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^impl Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^impl From<ErrorStack> for fmt::Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^impl From<ErrorStack> for io::Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^impl error::Error for Error {}$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^impl fmt::Debug for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^pub struct Error {$/;"	s
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^unsafe impl Send for Error {}$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^unsafe impl Sync for Error {}$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    type Error = ErrorStack;$/;"	t	implementation:Dh
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    type Error = ErrorStack;$/;"	t	implementation:Dsa
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    type Error = ErrorStack;$/;"	t	implementation:EcKey
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    type Error = ErrorStack;$/;"	t	implementation:PKey
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    type Error = ErrorStack;$/;"	t	implementation:Rsa
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^impl Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^impl From<ErrorStack> for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^impl error::Error for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^pub struct Error {$/;"	s
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    type Error = InvalidHeadingLevel;$/;"	t	implementation:HeadingLevel
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    type Error = StringTooLongError;$/;"	t	implementation:InlineStr
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    type Error = Box<dyn std::error::Error + Send + Sync>;$/;"	t	implementation:WrapHyper
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    type Error = E;$/;"	t
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    type Error = crate::Error;$/;"	t	implementation:ImplStream
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    Error(Option<crate::Error>),$/;"	e	enum:PendingInner
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    type Error = crate::Error;$/;"	t	implementation:Decoder
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    type Error = crate::Error;$/;"	t
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    type Error = crate::Error;$/;"	t	implementation:HttpRequest
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    type Error = crate::Error;$/;"	t
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    type Error = <Resolver as Service<Name>>::Error;$/;"	t
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    type Error = <hyper::client::HttpConnector as Service<Uri>>::Error;$/;"	t	implementation:HttpConnector
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    type Error = BoxError;$/;"	t	implementation:Connector
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^    type Error = BoxError;$/;"	t	implementation:TrustDnsResolver
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^impl Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^impl From<crate::error::Error> for js_sys::Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^impl StdError for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^impl fmt::Debug for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^impl fmt::Display for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub struct Error {$/;"	s
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    Error(Box<dyn StdError + Send + Sync>),$/;"	e	enum:ActionKind
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    type Error = crate::Error;$/;"	t
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    type Error = crate::Error;$/;"	t	implementation:HttpRequest
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    type Error = A::Error;$/;"	t
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:Deserializer
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:EnumAccess
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:MapAccess
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:SeqAccess
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    type Error: Error;$/;"	t	interface:VariantAccess
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        type Error = A::Error;$/;"	t	module:private
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        type Error = E;$/;"	t	module:private
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Error = A::Error;$/;"	t
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Error = E;$/;"	t
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl Debug for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl Display for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl de::Error for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl error::Error for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl ser::Error for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct Error {$/;"	s
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Error = E;$/;"	t	function:missing_field
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Error = E;$/;"	t	module:content
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    type Error = E;$/;"	t
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/doc.rs	/^impl Display for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/doc.rs	/^impl error::Error for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/doc.rs	/^impl ser::Error for Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/doc.rs	/^pub struct Error;$/;"	s
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        type Error = E;$/;"	t	module:content
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        type Error = M::Error;$/;"	t	module:content
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type Error = M::Error;$/;"	t
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type Error = S::Error;$/;"	t
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    type Error = fmt::Error;$/;"	t	implementation:Formatter
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^impl Error for fmt::Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^    type Error = Error;$/;"	t
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeMap
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeSeq
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeStruct
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeStructVariant
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTuple
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTupleStruct
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:SerializeTupleVariant
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Error: Error;$/;"	t	interface:Serializer
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/std_error.rs	/^pub trait Error: Debug + Display {$/;"	i
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl From<PathPersistError> for io::Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl From<PersistError> for io::Error {$/;"	c
Error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/result.rs	/^impl From<ZipError> for io::Error {$/;"	c
ErrorCode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^impl ErrorCode {$/;"	c
ErrorCode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^pub struct ErrorCode(c_int);$/;"	s
ErrorImpl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl ErrorImpl {$/;"	c
ErrorImpl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl<E> Debug for ErrorImpl<E>$/;"	c
ErrorImpl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl<E> Display for ErrorImpl<E>$/;"	c
ErrorImpl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl<E> ErrorImpl<E> {$/;"	c
ErrorImpl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^impl<E> StdError for ErrorImpl<E>$/;"	c
ErrorImpl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^pub(crate) struct ErrorImpl<E = ()> {$/;"	s
ErrorImpl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^impl ErrorImpl {$/;"	c
ErrorImpl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^type ErrorImpl = ();$/;"	t
ErrorImpl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^type ErrorImpl = Box<str>;$/;"	t
ErrorInner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^struct ErrorInner {$/;"	s
ErrorKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^impl ErrorKind {$/;"	c
ErrorKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^impl std::fmt::Display for ErrorKind {$/;"	c
ErrorKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^pub enum ErrorKind {$/;"	g
ErrorKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^impl ErrorKind {$/;"	c
ErrorKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^pub enum ErrorKind {$/;"	g
ErrorStack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^impl ErrorStack {$/;"	c
ErrorStack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^impl error::Error for ErrorStack {}$/;"	c
ErrorStack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^impl fmt::Display for ErrorStack {$/;"	c
ErrorStack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^pub struct ErrorStack(Vec<Error>);$/;"	s
ErrorVTable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    *(p.as_ptr() as *const &'static ErrorVTable)$/;"	v	function:vtable
ErrorVTable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^struct ErrorVTable {$/;"	s
Escape	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    impl fmt::Debug for Escape<'_> {$/;"	c	module:verbose
Escape	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    struct Escape<'a>(&'a [u8]);$/;"	s	module:verbose
Event	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^pub enum Event<'a> {$/;"	g
Event	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^impl Event {$/;"	c
Event	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^pub enum Event {$/;"	g
EventReceiver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^pub trait EventReceiver {$/;"	i
Excluded	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            Excluded,$/;"	e	enum:deserialize::Field
Exclusive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    Exclusive,$/;"	e	enum:ArgSettings
ExecutablePath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    ExecutablePath,$/;"	e	enum:ValueHint
Exists	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Exists,$/;"	e	enum:TransitState
Expected	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub trait Expected {$/;"	i
ExpectedInMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl Expected for ExpectedInMap {$/;"	c
ExpectedInMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^struct ExpectedInMap(usize);$/;"	s
ExpectedInSeq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl Expected for ExpectedInSeq {$/;"	c
ExpectedInSeq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^struct ExpectedInSeq(usize);$/;"	s
ExpectedNumValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    ExpectedNumValues,$/;"	e	enum:ContextKind
Explicit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    Explicit(usize),$/;"	e	enum:DisplayOrder
ExplodingStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    impl Read for ExplodingStream {$/;"	c	function:flush_panic
ExplodingStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    impl Read for ExplodingStream {$/;"	c	function:read_panic
ExplodingStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    impl Read for ExplodingStream {$/;"	c	function:write_panic
ExplodingStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    impl Write for ExplodingStream {$/;"	c	function:flush_panic
ExplodingStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    impl Write for ExplodingStream {$/;"	c	function:read_panic
ExplodingStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    impl Write for ExplodingStream {$/;"	c	function:write_panic
ExplodingStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    struct ExplodingStream(TcpStream);$/;"	s	function:flush_panic
ExplodingStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    struct ExplodingStream(TcpStream);$/;"	s	function:read_panic
ExplodingStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    struct ExplodingStream(TcpStream);$/;"	s	function:write_panic
Expr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^    Expr(TokenStream),$/;"	e	enum:Fragment
Expr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^impl ToTokens for Expr {$/;"	c
Expr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^pub struct Expr(pub Fragment);$/;"	s
Ext	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Ext,$/;"	e	enum:DirEntryAttr
ExtendedKeyUsage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^impl Default for ExtendedKeyUsage {$/;"	c
ExtendedKeyUsage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^impl ExtendedKeyUsage {$/;"	c
ExtendedKeyUsage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^pub struct ExtendedKeyUsage {$/;"	s
External	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    External,$/;"	e	enum:TagType
ExternallyTagged	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    ExternallyTagged {$/;"	e	enum:StructVariant
ExternallyTagged	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    ExternallyTagged {$/;"	e	enum:TupleVariant
F32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        F32(f32),$/;"	e	enum:content::Content
F32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        F32(f32),$/;"	e	enum:content::Content
F64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        F64(f64),$/;"	e	enum:content::Content
F64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        F64(f64),$/;"	e	enum:content::Content
FMT_NONE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^        static FMT_NONE: &'static [Item<'static>; 0] = &[];$/;"	v	method:StrftimeItems::with_remainer
FOUND_EXTENSION	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static FOUND_EXTENSION: AtomicBool = AtomicBool::new(false);$/;"	v	function:custom_extensions
FREQUENCY	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static mut FREQUENCY: i64 = 0;$/;"	v	function:inner::frequency
FT	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^impl<FT: ForeignType> ForeignTypeExt for FT {}$/;"	c
FT	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^impl<FT: ForeignTypeRef> ForeignTypeRefExt for FT {}$/;"	c
Failed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Failed,$/;"	e	enum:RefScan
Failure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    Failure(MidHandshakeSslStream<S>),$/;"	e	enum:HandshakeError
February	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    February = 1,$/;"	e	enum:Month
Fenced	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Fenced(CowStr<'a>),$/;"	e	enum:CodeBlockKind
FencedCodeBlock	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    FencedCodeBlock(CowIndex),$/;"	e	enum:ItemBody
Field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        enum Field {$/;"	g	function:deserialize
Field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        enum Field {$/;"	g	method:Duration::deserialize
Field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        enum Field {$/;"	g	method:SystemTime::deserialize
Field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	function:deserialize
Field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	method:Duration::deserialize
Field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        impl<'de> Deserialize<'de> for Field {$/;"	c	method:SystemTime::deserialize
Field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    enum Field {$/;"	g	module:range
Field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    impl<'de> Deserialize<'de> for Field {$/;"	c	module:range
Field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^pub struct Field<'a> {$/;"	s
Field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    Field,$/;"	e	enum:Identifier
Field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^impl Field {$/;"	c
Field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^pub struct Field {$/;"	s
FieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:Duration::deserialize::Field::deserialize
FieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:SystemTime::deserialize::Field::deserialize
FieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:deserialize::Field::deserialize
FieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:Duration::deserialize::Field::deserialize
FieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:SystemTime::deserialize::Field::deserialize
FieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                struct FieldVisitor;$/;"	s	method:deserialize::Field::deserialize
FieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            impl<'de> Visitor<'de> for FieldVisitor {$/;"	c	method:range::Field::deserialize
FieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            struct FieldVisitor;$/;"	s	method:range::Field::deserialize
FileNotFound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/result.rs	/^    FileNotFound,$/;"	e	enum:ZipError
FileOptions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^impl Default for FileOptions {$/;"	c
FileOptions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^impl FileOptions {$/;"	c
FileOptions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^pub struct FileOptions {$/;"	s
FilePath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    FilePath,$/;"	e	enum:ValueHint
FileSize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    FileSize,$/;"	e	enum:DirEntryAttr
Finalized	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    Finalized,$/;"	e	enum:State
FindTyParams	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^    impl<'ast> FindTyParams<'ast> {$/;"	c	function:with_bound
FindTyParams	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^    struct FindTyParams<'ast> {$/;"	s	function:with_bound
First	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        type First = A;$/;"	t	implementation:private::B
First	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        type First;$/;"	t	interface:private::Pair
First	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub type First<T> = <T as Pair>::First;$/;"	t	module:private
FirstPass	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^impl<'a, 'b> FirstPass<'a, 'b> {$/;"	c
FirstPass	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^struct FirstPass<'a, 'b> {$/;"	s
Fish	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/fish.rs	/^impl Generator for Fish {$/;"	c
Fish	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/fish.rs	/^pub struct Fish;$/;"	s
Fish	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    Fish,$/;"	e	enum:Shell
Fish	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^    Fish,$/;"	e	enum:Shell
Fixed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Fixed(Fixed),$/;"	e	enum:Item
Fixed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub enum Fixed {$/;"	g
FixedOffset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl FixedOffset {$/;"	c
FixedOffset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl Offset for FixedOffset {$/;"	c
FixedOffset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl TimeZone for FixedOffset {$/;"	c
FixedOffset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl fmt::Debug for FixedOffset {$/;"	c
FixedOffset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl fmt::Display for FixedOffset {$/;"	c
FixedOffset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^pub struct FixedOffset {$/;"	s
Flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^enum Flag<'a> {$/;"	g
Flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^impl Ord for Flag<'_> {$/;"	c
Flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^impl PartialEq for Flag<'_> {$/;"	c
Flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^impl PartialOrd for Flag<'_> {$/;"	c
FlagSubCommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    FlagSubCommand(String),$/;"	e	enum:ParseResult
FlatInternallyTaggedAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatInternallyTaggedAccess<'a, 'de, E>$/;"	c
FlatInternallyTaggedAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^pub struct FlatInternallyTaggedAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'a, 'de, E> FlatMapAccess<'a, 'de, E> {$/;"	c
FlatMapAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatMapAccess<'a, 'de, E>$/;"	c
FlatMapAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^pub struct FlatMapAccess<'a, 'de: 'a, E> {$/;"	s
FlatMapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'a, 'de, E> Deserializer<'de> for FlatMapDeserializer<'a, 'de, E>$/;"	c
FlatMapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'a, 'de, E> FlatMapDeserializer<'a, 'de, E>$/;"	c
FlatMapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^pub struct FlatMapDeserializer<'a, 'de: 'a, E>($/;"	s
FlatMapSerializeMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^impl<'a, M> ser::SerializeMap for FlatMapSerializeMap<'a, M>$/;"	c
FlatMapSerializeMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^pub struct FlatMapSerializeMap<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^impl<'a, M> ser::SerializeStruct for FlatMapSerializeStruct<'a, M>$/;"	c
FlatMapSerializeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^pub struct FlatMapSerializeStruct<'a, M: 'a>(&'a mut M);$/;"	s
FlatMapSerializeStructVariantAsMapValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^impl<'a, M> FlatMapSerializeStructVariantAsMapValue<'a, M>$/;"	c
FlatMapSerializeStructVariantAsMapValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^impl<'a, M> ser::SerializeStructVariant for FlatMapSerializeStructVariantAsMapValue<'a, M>$/;"	c
FlatMapSerializeStructVariantAsMapValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^pub struct FlatMapSerializeStructVariantAsMapValue<'a, M: 'a> {$/;"	s
FlatMapSerializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^impl<'a, M> FlatMapSerializer<'a, M>$/;"	c
FlatMapSerializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^impl<'a, M> Serializer for FlatMapSerializer<'a, M>$/;"	c
FlatMapSerializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^pub struct FlatMapSerializer<'a, M: 'a>(pub &'a mut M);$/;"	s
FlatStructAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'a, 'de, E> FlatStructAccess<'a, 'de, E> {$/;"	c
FlatStructAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'a, 'de, E> MapAccess<'de> for FlatStructAccess<'a, 'de, E>$/;"	c
FlatStructAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^pub struct FlatStructAccess<'a, 'de: 'a, E> {$/;"	s
Float	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Float(f64),$/;"	e	enum:Unexpected
Float	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    Float,$/;"	e	enum:Unsupported
FlowEntry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    FlowEntry,$/;"	e	enum:TokenType
FlowMappingEmptyValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    FlowMappingEmptyValue,$/;"	e	enum:State
FlowMappingEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    FlowMappingEnd,$/;"	e	enum:TokenType
FlowMappingFirstKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    FlowMappingFirstKey,$/;"	e	enum:State
FlowMappingKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    FlowMappingKey,$/;"	e	enum:State
FlowMappingStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    FlowMappingStart,$/;"	e	enum:TokenType
FlowMappingValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    FlowMappingValue,$/;"	e	enum:State
FlowSequenceEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    FlowSequenceEnd,$/;"	e	enum:TokenType
FlowSequenceEntry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    FlowSequenceEntry,$/;"	e	enum:State
FlowSequenceEntryMappingEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    FlowSequenceEntryMappingEnd,$/;"	e	enum:State
FlowSequenceEntryMappingKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    FlowSequenceEntryMappingKey,$/;"	e	enum:State
FlowSequenceEntryMappingValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    FlowSequenceEntryMappingValue,$/;"	e	enum:State
FlowSequenceFirstEntry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    FlowSequenceFirstEntry,$/;"	e	enum:State
FlowSequenceStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    FlowSequenceStart,$/;"	e	enum:TokenType
Fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^type Fmt<'a> = &'static [Item<'static>];$/;"	t
Fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^type Fmt<'a> = Vec<Item<'a>>;$/;"	t
Fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^enum Fmt<'a> {$/;"	g
FmtError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    FmtError(fmt::Error),$/;"	e	enum:EmitError
FnvHasher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/fnv.rs	/^impl FnvHasher {$/;"	c
FnvHasher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/fnv.rs	/^impl Hasher for FnvHasher {$/;"	c
FnvHasher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/fnv.rs	/^pub(crate) struct FnvHasher(u64);$/;"	s
Foled	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    Foled,$/;"	e	enum:TScalarStyle
Follow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    Follow,$/;"	e	enum:ActionKind
Foo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^        trait Foo: std::error::Error + Send + Sync + 'static {}$/;"	i	module:tests::clap_error_impl_send_sync
Footnote	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/linklabel.rs	/^    Footnote(CowStr<'a>),$/;"	e	enum:ReferenceLabel
FootnoteDefinition	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    FootnoteDefinition(CowStr<'a>),$/;"	e	enum:Tag
FootnoteDefinition	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    FootnoteDefinition(CowIndex),$/;"	e	enum:ItemBody
FootnoteReference	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    FootnoteReference(CowStr<'a>),$/;"	e	enum:Event
FootnoteReference	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    FootnoteReference(CowIndex),$/;"	e	enum:ItemBody
ForUrl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^        impl fmt::Display for ForUrl<'_> {$/;"	c	method:Error::fmt
ForUrl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^        struct ForUrl<'a>(Option<&'a Url>);$/;"	s	method:Error::fmt
ForbidEmptyValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    ForbidEmptyValues,$/;"	e	enum:ArgSettings
ForeignTypeExt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^pub trait ForeignTypeExt: ForeignType {$/;"	i
ForeignTypeRefExt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^pub trait ForeignTypeRefExt: ForeignTypeRef {$/;"	i
Form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^impl Default for Form {$/;"	c
Form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^impl Form {$/;"	c
Form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^impl fmt::Debug for Form {$/;"	c
Form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^pub struct Form {$/;"	s
Form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^impl Default for Form {$/;"	c
Form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^impl Form {$/;"	c
Form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^impl fmt::Debug for Form {$/;"	c
Form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^pub struct Form {$/;"	s
Form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^impl Default for Form {$/;"	c
Form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^impl Form {$/;"	c
Form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^impl fmt::Debug for Form {$/;"	c
Form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^pub struct Form {$/;"	s
FormParts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^impl<P: PartProps> FormParts<P> {$/;"	c
FormParts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^impl<P: fmt::Debug> FormParts<P> {$/;"	c
FormParts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^pub(crate) struct FormParts<P> {$/;"	s
FormParts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^impl<P: PartProps> FormParts<P> {$/;"	c
FormParts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^impl<P: fmt::Debug> FormParts<P> {$/;"	c
FormParts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^pub(crate) struct FormParts<P> {$/;"	s
Format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    Format,$/;"	e	enum:ErrorKind
FormatWrapped	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            impl<'a, D: fmt::Debug> fmt::Display for FormatWrapped<'a, D> {$/;"	c	method:serde::DateTime::serialize
FormatWrapped	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            struct FormatWrapped<'a, D: 'a> {$/;"	s	method:serde::DateTime::serialize
FormatWrapped	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^            impl<'a, D: fmt::Debug> fmt::Display for FormatWrapped<'a, D> {$/;"	c	method:serde::NaiveDate::serialize
FormatWrapped	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^            struct FormatWrapped<'a, D: 'a> {$/;"	s	method:serde::NaiveDate::serialize
FormatWrapped	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            impl<'a, D: fmt::Debug> fmt::Display for FormatWrapped<'a, D> {$/;"	c	method:serde::NaiveDateTime::serialize
FormatWrapped	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            struct FormatWrapped<'a, D: 'a> {$/;"	s	method:serde::NaiveDateTime::serialize
Formatted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    Formatted(Colorizer),$/;"	e	enum:Message
Formatter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^impl<'a, 'b> Serializer for &'a mut fmt::Formatter<'b> {$/;"	c
Fragment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^impl AsRef<TokenStream> for Fragment {$/;"	c
Fragment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^pub enum Fragment {$/;"	g
Fri	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Fri = 4,$/;"	e	enum:Weekday
FromArgMatches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^pub trait FromArgMatches: Sized {$/;"	i
FromCp437	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^pub trait FromCp437 {$/;"	i
FromStrVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for FromStrVisitor<T>$/;"	c
FromStrVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<T> FromStrVisitor<T> {$/;"	c
FromStrVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct FromStrVisitor<T> {$/;"	s
FullName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    FullName,$/;"	e	enum:DirEntryAttr
Future	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    type Future = Connecting;$/;"	t	implementation:Connector
Future	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    type Future = Either<$/;"	t
Future	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    type Future =$/;"	t	implementation:HttpConnector
Future	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^    type Future = Pin<Box<dyn Future<Output = Result<Self::Response, Self::Error>> + Send>>;$/;"	t	implementation:TrustDnsResolver
Gai	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    Gai(hyper::client::HttpConnector),$/;"	e	enum:HttpConnector
GaiWithDnsOverrides	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    GaiWithDnsOverrides(hyper::client::HttpConnector<DnsResolverWithOverrides<GaiResolver>>),$/;"	e	enum:HttpConnector
GeneralName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl Stackable for GeneralName {$/;"	c
GeneralNameRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl GeneralNameRef {$/;"	c
GeneralNameRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl fmt::Debug for GeneralNameRef {$/;"	c
Generated	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    Generated,$/;"	e	enum:ArgProvider
GeneratedMutated	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    GeneratedMutated,$/;"	e	enum:ArgProvider
Generator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/mod.rs	/^pub trait Generator {$/;"	i
GenericZipWriter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^enum GenericZipWriter<W: Write + io::Seek> {$/;"	g
GenericZipWriter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^impl<W: Write + io::Seek> GenericZipWriter<W> {$/;"	c
Global	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    Global,$/;"	e	enum:ArgSettings
GlobalVersion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    GlobalVersion,$/;"	e	enum:AppSettings
Good	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    Good,$/;"	e	enum:Style
GroupedValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> Default for GroupedValues<'a> {$/;"	c
GroupedValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> DoubleEndedIterator for GroupedValues<'a> {$/;"	c
GroupedValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> ExactSizeIterator for GroupedValues<'a> {}$/;"	c
GroupedValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> Iterator for GroupedValues<'a> {$/;"	c
GroupedValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^pub struct GroupedValues<'a> {$/;"	s
Gzip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    Gzip(FramedRead<GzipDecoder<StreamReader<Peekable<IoStream>, Bytes>>, BytesCodec>),$/;"	e	enum:Inner
Gzip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    Gzip,$/;"	e	enum:DecoderType
H1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    H1 = 1,$/;"	e	enum:HeadingLevel
H2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    H2,$/;"	e	enum:HeadingLevel
H3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    H3,$/;"	e	enum:HeadingLevel
H4	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    H4,$/;"	e	enum:HeadingLevel
H5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    H5,$/;"	e	enum:HeadingLevel
H6	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    H6,$/;"	e	enum:HeadingLevel
HEX_CHARS	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^static HEX_CHARS: &[u8] = b"0123456789ABCDEF";$/;"	v
HREF_SAFE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^static HREF_SAFE: [u8; 128] = [$/;"	v
HTML_ESCAPES	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^static HTML_ESCAPES: [&str; 5] = ["", "&quot;", "&amp;", "&lt;", "&gt;"];$/;"	v
HTML_ESCAPE_TABLE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^static HTML_ESCAPE_TABLE: [u8; 256] = create_html_escape_table();$/;"	v
HandshakeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^impl<S: fmt::Debug> StdError for HandshakeError<S> {$/;"	c
HandshakeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^impl<S: fmt::Debug> fmt::Display for HandshakeError<S> {$/;"	c
HandshakeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^impl<S> From<ErrorStack> for HandshakeError<S> {$/;"	c
HandshakeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^pub enum HandshakeError<S> {$/;"	g
HardBreak	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    HardBreak,$/;"	e	enum:Event
HardBreak	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    HardBreak,$/;"	e	enum:ItemBody
HasParams	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^pub unsafe trait HasParams {}$/;"	i
HasPrivate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^pub unsafe trait HasPrivate {}$/;"	i
HasPublic	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^pub unsafe trait HasPublic {}$/;"	i
Hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    Hash(self::Hash),$/;"	e	enum:Yaml
Hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^pub type Hash = LinkedHashMap<Yaml, Yaml>;$/;"	t
HashDir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^pub struct HashDir;$/;"	s
HashMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, K, V, S, E> IntoDeserializer<'de, E> for HashMap<K, V, S>$/;"	c
HashSet	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, T, S, E> IntoDeserializer<'de, E> for HashSet<T, S>$/;"	c
Hasher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^impl Clone for Hasher {$/;"	c
Hasher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^impl Drop for Hasher {$/;"	c
Hasher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^impl Hasher {$/;"	c
Hasher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^impl Write for Hasher {$/;"	c
Hasher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^pub struct Hasher {$/;"	s
Hasher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^unsafe impl Send for Hasher {}$/;"	c
Hasher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^unsafe impl Sync for Hasher {}$/;"	c
Head	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    Head,$/;"	e	enum:TableState
Heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Heading(HeadingLevel, Option<&'a str>, Vec<&'a str>),$/;"	e	enum:Tag
Heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Heading(HeadingLevel, Option<HeadingIndex>), \/\/ heading level$/;"	e	enum:ItemBody
HeadingAttributes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub(crate) struct HeadingAttributes<'a> {$/;"	s
HeadingIndex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub(crate) struct HeadingIndex(NonZeroUsize);$/;"	s
HeadingLevel	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^impl Display for HeadingLevel {$/;"	c
HeadingLevel	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^impl TryFrom<usize> for HeadingLevel {$/;"	c
HeadingLevel	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^pub enum HeadingLevel {$/;"	g
Help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    Help,$/;"	e	enum:UsageToken
Help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^impl<'help, 'cmd, 'writer> Help<'help, 'cmd, 'writer> {$/;"	c
Help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^pub(crate) struct Help<'help, 'cmd, 'writer> {$/;"	s
HelpExpected	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    HelpExpected,$/;"	e	enum:AppSettings
HelpFlag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    HelpFlag,$/;"	e	enum:ParseResult
HelpWriter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^pub(crate) enum HelpWriter<'writer> {$/;"	g
Hidden	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    Hidden,$/;"	e	enum:AppSettings
Hidden	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    Hidden,$/;"	e	enum:ArgSettings
HiddenLongHelp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    HiddenLongHelp,$/;"	e	enum:ArgSettings
HiddenShortHelp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    HiddenShortHelp,$/;"	e	enum:ArgSettings
HideDefaultValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    HideDefaultValue,$/;"	e	enum:ArgSettings
HideEnv	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    HideEnv,$/;"	e	enum:ArgSettings
HideEnvValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    HideEnvValues,$/;"	e	enum:ArgSettings
HidePossibleValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    HidePossibleValues,$/;"	e	enum:AppSettings
HidePossibleValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    HidePossibleValues,$/;"	e	enum:ArgSettings
HidePossibleValuesInHelp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    HidePossibleValuesInHelp,$/;"	e	enum:AppSettings
Hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    Hint,$/;"	e	enum:Style
Hostname	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    Hostname,$/;"	e	enum:ValueHint
Hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Hour,$/;"	e	enum:Numeric
Hour12	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Hour12,$/;"	e	enum:Numeric
Html	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Html(CowStr<'a>),$/;"	e	enum:Event
Html	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Html,$/;"	e	enum:ItemBody
HtmlScanGuard	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub(crate) struct HtmlScanGuard {$/;"	s
HtmlWriter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^impl<'a, I, W> HtmlWriter<'a, I, W>$/;"	c
HtmlWriter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^struct HtmlWriter<'a, I, W> {$/;"	s
Http	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    Http(HttpConnector),$/;"	e	enum:Inner
Http	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    Http {$/;"	e	enum:ProxyScheme
Http	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    Http(ProxyScheme),$/;"	e	enum:Intercept
Http1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    Http1,$/;"	e	enum:HttpVersionPref
Http2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    Http2,$/;"	e	enum:HttpVersionPref
HttpConnector	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^impl HttpConnector {$/;"	c
HttpConnector	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^impl Service<Uri> for HttpConnector {$/;"	c
HttpConnector	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^pub(crate) enum HttpConnector {$/;"	g
HttpRequest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^impl TryFrom<Request> for HttpRequest<Body> {$/;"	c
HttpRequest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^impl TryFrom<Request> for HttpRequest<Body> {$/;"	c
HttpVersionPref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^enum HttpVersionPref {$/;"	g
Https	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    Https {$/;"	e	enum:ProxyScheme
Https	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    Https(ProxyScheme),$/;"	e	enum:Intercept
HyperClient	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^type HyperClient = hyper::Client<Connector, super::body::ImplStream>;$/;"	t
I16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        I16(i16),$/;"	e	enum:content::Content
I16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        I16(i16),$/;"	e	enum:content::Content
I32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        I32(i32),$/;"	e	enum:content::Content
I32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        I32(i32),$/;"	e	enum:content::Content
I64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        I64(i64),$/;"	e	enum:content::Content
I64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        I64(i64),$/;"	e	enum:content::Content
I8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        I8(i8),$/;"	e	enum:content::Content
I8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        I8(i8),$/;"	e	enum:content::Content
INDEXES	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^static INDEXES: Lazy<Mutex<HashMap<TypeId, c_int>>> = Lazy::new(|| Mutex::new(HashMap::new()));$/;"	v
INFO	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            static mut INFO: mach_timebase_info = mach_timebase_info {$/;"	v	function:inner::mac::info
INIT	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        static INIT: Once = ONCE_INIT;$/;"	v	function:tests::set_time_zone_la_or_london
INIT	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static INIT: Once = ONCE_INIT;$/;"	v	function:inner::acquire_privileges
Id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^impl Debug for Id {$/;"	c
Id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^impl Deref for Id {$/;"	c
Id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^impl Hash for Id {$/;"	c
Id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^impl Id {$/;"	c
Id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^impl PartialEq for Id {$/;"	c
Id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^impl<T: Key> From<T> for Id {$/;"	c
Id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^pub(crate) struct Id {$/;"	s
Id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl Id {$/;"	c
Id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^pub struct Id(c_int);$/;"	s
Ident	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/symbol.rs	/^impl PartialEq<Symbol> for Ident {$/;"	c
Ident	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/symbol.rs	/^impl<'a> PartialEq<Symbol> for &'a Ident {$/;"	c
Identifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^impl Identifier {$/;"	c
Identifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^pub enum Identifier {$/;"	g
IdentifierDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^pub trait IdentifierDeserializer<'de, E: Error> {$/;"	i
Identity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^impl Identity {$/;"	c
Identity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^impl fmt::Debug for Identity {$/;"	c
Identity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^pub struct Identity {$/;"	s
IgnoreCase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    IgnoreCase,$/;"	e	enum:ArgSettings
IgnoreErrors	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    IgnoreErrors,$/;"	e	enum:AppSettings
IgnoredAny	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^impl<'de> Deserialize<'de> for IgnoredAny {$/;"	c
IgnoredAny	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^impl<'de> Visitor<'de> for IgnoredAny {$/;"	c
IgnoredAny	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^pub struct IgnoredAny;$/;"	s
Image	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Image(LinkType, CowStr<'a>, CowStr<'a>),$/;"	e	enum:Tag
Image	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Image(LinkIndex),$/;"	e	enum:ItemBody
Image	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Image,$/;"	e	enum:LinkStackTy
ImplStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl HttpBody for ImplStream {$/;"	c
ImplStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl Stream for ImplStream {$/;"	c
ImplStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^pub(crate) struct ImplStream(Body);$/;"	s
Implicit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    Implicit(usize),$/;"	e	enum:DisplayOrder
ImplicitDocumentStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    ImplicitDocumentStart,$/;"	e	enum:State
Impossible	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Impossible,$/;"	e	enum:ParseErrorKind
Impossible	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^impl<Ok, Error> SerializeMap for Impossible<Ok, Error>$/;"	c
Impossible	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^impl<Ok, Error> SerializeSeq for Impossible<Ok, Error>$/;"	c
Impossible	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^impl<Ok, Error> SerializeStruct for Impossible<Ok, Error>$/;"	c
Impossible	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^impl<Ok, Error> SerializeStructVariant for Impossible<Ok, Error>$/;"	c
Impossible	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTuple for Impossible<Ok, Error>$/;"	c
Impossible	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTupleStruct for Impossible<Ok, Error>$/;"	c
Impossible	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^impl<Ok, Error> SerializeTupleVariant for Impossible<Ok, Error>$/;"	c
Impossible	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^pub struct Impossible<Ok, Error> {$/;"	s
InMemory	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    InMemory(Cursor<Vec<u8>>),$/;"	e	enum:SpooledData
InPlaceImplGenerics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^impl<'a> ToTokens for InPlaceImplGenerics<'a> {$/;"	c
InPlaceImplGenerics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^struct InPlaceImplGenerics<'a>(&'a Parameters);$/;"	s
InPlaceSeed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/seed.rs	/^impl<'a, 'de, T> DeserializeSeed<'de> for InPlaceSeed<'a, T>$/;"	c
InPlaceSeed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/seed.rs	/^pub struct InPlaceSeed<'a, T: 'a>(pub &'a mut T);$/;"	s
InPlaceTypeGenerics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^impl<'a> ToTokens for InPlaceTypeGenerics<'a> {$/;"	c
InPlaceTypeGenerics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^struct InPlaceTypeGenerics<'a>(&'a Parameters);$/;"	s
Included	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            Included,$/;"	e	enum:deserialize::Field
IndentCodeBlock	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    IndentCodeBlock,$/;"	e	enum:ItemBody
Indented	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^impl<T> Write for Indented<'_, T>$/;"	c
Indented	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^struct Indented<'a, D> {$/;"	s
Indented	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Indented,$/;"	e	enum:CodeBlockKind
IndentlessSequenceEntry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    IndentlessSequenceEntry,$/;"	e	enum:State
Index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ex_data.rs	/^impl<T, U> Clone for Index<T, U> {$/;"	c
Index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ex_data.rs	/^impl<T, U> Copy for Index<T, U> {}$/;"	c
Index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ex_data.rs	/^impl<T, U> Index<T, U> {$/;"	c
Index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ex_data.rs	/^pub struct Index<T, U>(c_int, PhantomData<(T, U)>);$/;"	s
Indices	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> Default for Indices<'a> {$/;"	c
Indices	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> DoubleEndedIterator for Indices<'a> {$/;"	c
Indices	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> ExactSizeIterator for Indices<'a> {}$/;"	c
Indices	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> Iterator for Indices<'a> {$/;"	c
Indices	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^pub struct Indices<'a> {$/;"	s
InferLongArgs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    InferLongArgs,$/;"	e	enum:AppSettings
InferSubcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    InferSubcommands,$/;"	e	enum:AppSettings
InfoZipMsdosTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    InfoZipMsdosTime(u16),$/;"	e	enum:ZipCryptoValidator
Init	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^    Init,$/;"	e	enum:State
Init	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^    Init,$/;"	e	enum:Commands
Inline	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Inline,$/;"	e	enum:LinkType
InlineEl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^struct InlineEl {$/;"	s
InlineStack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl InlineStack {$/;"	c
InlineStack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^struct InlineStack {$/;"	s
InlineStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl Deref for InlineStr {$/;"	c
InlineStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl From<char> for InlineStr {$/;"	c
InlineStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl Hash for InlineStr {$/;"	c
InlineStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl TryFrom<&str> for InlineStr {$/;"	c
InlineStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl fmt::Display for InlineStr {$/;"	c
InlineStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> AsRef<str> for InlineStr {$/;"	c
InlineStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^impl<'a> std::cmp::PartialEq<InlineStr> for InlineStr {$/;"	c
InlineStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^pub struct InlineStr {$/;"	s
Inlined	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    Inlined(InlineStr),$/;"	e	enum:CowStr
Inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    enum Inner {$/;"	g	module:capture
Inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^enum Inner {$/;"	g
Inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^enum Inner {$/;"	g
Inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/wait.rs	/^    Inner(E),$/;"	e	enum:Waited
Inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^enum Inner {$/;"	g
Inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^struct Inner {$/;"	s
Inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^enum Inner {$/;"	g
InnerClientHandle	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^impl Drop for InnerClientHandle {$/;"	c
InnerClientHandle	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^struct InnerClientHandle {$/;"	s
InnerError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^pub(crate) enum InnerError {$/;"	g
InnerVersion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^enum InnerVersion {$/;"	g
Input	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^impl Input {$/;"	c
Input	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^impl<I, T> From<I> for Input$/;"	c
Input	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^pub(crate) struct Input {$/;"	s
Integer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    Integer,$/;"	e	enum:Unsupported
Integer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    Integer(i64),$/;"	e	enum:Yaml
Intercept	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^enum Intercept {$/;"	g
Intercept	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl Intercept {$/;"	c
Internal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Internal(InternalFixed),$/;"	e	enum:Fixed
Internal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Internal(InternalNumeric),$/;"	e	enum:Numeric
Internal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    Internal { tag: String },$/;"	e	enum:TagType
InternalFixed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub struct InternalFixed {$/;"	s
InternalInternal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^enum InternalInternal {$/;"	g
InternalNumeric	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl Clone for InternalNumeric {$/;"	c
InternalNumeric	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl Eq for InternalNumeric {}$/;"	c
InternalNumeric	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl PartialEq for InternalNumeric {$/;"	c
InternalNumeric	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl fmt::Debug for InternalNumeric {$/;"	c
InternalNumeric	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub struct InternalNumeric {$/;"	s
InternallyTagged	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    InternallyTagged {$/;"	e	enum:StructVariant
InternallyTaggedUnitVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'a> InternallyTaggedUnitVisitor<'a> {$/;"	c	module:content
InternallyTaggedUnitVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, 'a> Visitor<'de> for InternallyTaggedUnitVisitor<'a> {$/;"	c	module:content
InternallyTaggedUnitVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub struct InternallyTaggedUnitVisitor<'a> {$/;"	s	module:content
Interrupted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    Interrupted,$/;"	e	enum:ErrorKind
IntoDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub trait IntoDeserializer<'de, E: Error = value::Error> {$/;"	i
IntoDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for !$/;"	c
IntoDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for ()$/;"	c
IntoIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type IntoIter = IntoIter<T>;$/;"	t	implementation:Stack
IntoIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type IntoIter = Iter<'a, T>;$/;"	t	implementation:Stack
IntoIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type IntoIter = Iter<'a, T>;$/;"	t	implementation:StackRef
IntoIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type IntoIter = IterMut<'a, T>;$/;"	t	implementation:Stack
IntoIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type IntoIter = IterMut<'a, T>;$/;"	t	implementation:StackRef
IntoIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> DoubleEndedIterator for IntoIter<T> {$/;"	c
IntoIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> Drop for IntoIter<T> {$/;"	c
IntoIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> ExactSizeIterator for IntoIter<T> {}$/;"	c
IntoIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> Iterator for IntoIter<T> {$/;"	c
IntoIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^pub struct IntoIter<T: Stackable> {$/;"	s
IntoIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    type IntoIter = YamlIter;$/;"	t	implementation:Yaml
IntoProxyScheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^pub trait IntoProxyScheme {$/;"	i
IntoUrl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^pub trait IntoUrl: IntoUrlSealed {}$/;"	i
IntoUrlSealed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^pub trait IntoUrlSealed {$/;"	i
Invalid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Invalid,$/;"	e	enum:ParseErrorKind
InvalidArchive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/result.rs	/^    InvalidArchive(&'static str),$/;"	e	enum:ZipError
InvalidArg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    InvalidArg,$/;"	e	enum:ContextKind
InvalidDay	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidDay,$/;"	e	enum:ParseError
InvalidDayOfMonth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidDayOfMonth,$/;"	e	enum:ParseError
InvalidDayOfWeek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidDayOfWeek,$/;"	e	enum:ParseError
InvalidDayOfYear	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidDayOfYear,$/;"	e	enum:ParseError
InvalidFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    InvalidFile,$/;"	e	enum:ErrorKind
InvalidFileName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    InvalidFileName,$/;"	e	enum:ErrorKind
InvalidFolder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    InvalidFolder,$/;"	e	enum:ErrorKind
InvalidFormatSpecifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidFormatSpecifier(char),$/;"	e	enum:ParseError
InvalidHeadingLevel	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^pub struct InvalidHeadingLevel(usize);$/;"	s
InvalidHour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidHour,$/;"	e	enum:ParseError
InvalidMinute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidMinute,$/;"	e	enum:ParseError
InvalidMonth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidMonth,$/;"	e	enum:ParseError
InvalidPassword	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/result.rs	/^pub struct InvalidPassword;$/;"	s
InvalidPath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    InvalidPath,$/;"	e	enum:ErrorKind
InvalidSecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidSecond,$/;"	e	enum:ParseError
InvalidSecondsSinceEpoch	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidSecondsSinceEpoch,$/;"	e	enum:ParseError
InvalidSubcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    InvalidSubcommand,$/;"	e	enum:ContextKind
InvalidSubcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    InvalidSubcommand,$/;"	e	enum:ErrorKind
InvalidTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidTime,$/;"	e	enum:ParseError
InvalidUtf8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    InvalidUtf8,$/;"	e	enum:ErrorKind
InvalidValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    InvalidValue,$/;"	e	enum:ContextKind
InvalidValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    InvalidValue,$/;"	e	enum:ErrorKind
InvalidYear	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidYear,$/;"	e	enum:ParseError
InvalidZoneOffset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    InvalidZoneOffset,$/;"	e	enum:ParseError
Io	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    Io,$/;"	e	enum:ErrorKind
Io	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    Io(IoError),$/;"	e	enum:ErrorKind
Io	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    Io(io::Error),$/;"	e	enum:InnerError
Io	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/result.rs	/^    Io(#[from] io::Error),$/;"	e	enum:ZipError
IoResultExt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/error.rs	/^pub(crate) trait IoResultExt<T> {$/;"	i
IoStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^impl Stream for IoStream {$/;"	c
IoStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^struct IoStream(super::body::ImplStream);$/;"	s
Ip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^enum Ip {$/;"	g
IpAddr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Deserialize<'de> for net::IpAddr {$/;"	c
IpAddr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for net::IpAddr {$/;"	c
IpMatcher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl IpMatcher {$/;"	c
IpMatcher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^struct IpMatcher(Vec<Ip>);$/;"	s
Ipv4Addr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for net::Ipv4Addr {$/;"	c
Ipv6Addr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for net::Ipv6Addr {$/;"	c
IsDir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    IsDir,$/;"	e	enum:DirEntryAttr
IsFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    IsFile,$/;"	e	enum:DirEntryAttr
IsPresent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_predicate.rs	/^    IsPresent,$/;"	e	enum:ArgPredicate
IsoWeek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    IsoWeek,$/;"	e	enum:Numeric
IsoWeek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^impl IsoWeek {$/;"	c
IsoWeek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^impl fmt::Debug for IsoWeek {$/;"	c
IsoWeek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^pub struct IsoWeek {$/;"	s
IsoYear	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    IsoYear,$/;"	e	enum:Numeric
IsoYearDiv100	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    IsoYearDiv100,$/;"	e	enum:Numeric
IsoYearMod100	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    IsoYearMod100,$/;"	e	enum:Numeric
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^    type Item = &'a (dyn StdError + 'static);$/;"	t	implementation:Chain
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub enum Item<'a> {$/;"	g
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    type Item = Item<'a>;$/;"	t	implementation:StrftimeItems
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Item = NaiveDate;$/;"	t	implementation:NaiveDateDaysIterator
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Item = NaiveDate;$/;"	t	implementation:NaiveDateWeeksIterator
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    type Item = &'a OsStr;$/;"	t	implementation:OsValues
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    type Item = &'a str;$/;"	t	implementation:Values
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    type Item = Vec<&'a str>;$/;"	t	implementation:GroupedValues
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    type Item = usize;$/;"	t	implementation:Indices
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type Item = &'a T::Ref;$/;"	t	implementation:Iter
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type Item = &'a T::Ref;$/;"	t	implementation:Stack
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type Item = &'a T::Ref;$/;"	t	implementation:StackRef
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type Item = &'a mut T::Ref;$/;"	t	implementation:IterMut
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type Item = &'a mut T::Ref;$/;"	t	implementation:Stack
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type Item = &'a mut T::Ref;$/;"	t	implementation:StackRef
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type Item = T;$/;"	t	implementation:IntoIter
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type Item = T;$/;"	t	implementation:Stack
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    type Item = &'a X509NameEntryRef;$/;"	t	implementation:X509NameEntries
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Item,$/;"	e	enum:Tag
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    type Item = (Event<'a>, Range<usize>);$/;"	t	implementation:OffsetIter
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    type Item = Event<'a>;$/;"	t	implementation:Parser
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub(crate) struct Item {$/;"	s
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    type Item = Result<Bytes, crate::Error>;$/;"	t	implementation:ImplStream
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    type Item = Result<Bytes, error::Error>;$/;"	t	implementation:Decoder
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    type Item = Result<Bytes, std::io::Error>;$/;"	t	implementation:IoStream
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        type Item = <A as Iterator>::Item;$/;"	t	module:itertools
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^    type Item = SocketAddr;$/;"	t	implementation:SocketAddrs
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    type Item = Token;$/;"	t	implementation:Scanner
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    type Item = Yaml;$/;"	t	implementation:Yaml
Item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    type Item = Yaml;$/;"	t	implementation:YamlIter
ItemBody	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'a> Default for ItemBody {$/;"	c
ItemBody	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'a> ItemBody {$/;"	c
ItemBody	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub(crate) enum ItemBody {$/;"	g
Iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<'a, T: Stackable> DoubleEndedIterator for Iter<'a, T> {$/;"	c
Iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<'a, T: Stackable> ExactSizeIterator for Iter<'a, T> {}$/;"	c
Iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<'a, T: Stackable> Iterator for Iter<'a, T> {$/;"	c
Iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^pub struct Iter<'a, T: Stackable> {$/;"	s
IterMut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<'a, T: Stackable> DoubleEndedIterator for IterMut<'a, T> {$/;"	c
IterMut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<'a, T: Stackable> ExactSizeIterator for IterMut<'a, T> {}$/;"	c
IterMut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<'a, T: Stackable> Iterator for IterMut<'a, T> {$/;"	c
IterMut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^pub struct IterMut<'a, T: Stackable> {$/;"	s
January	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    January = 0,$/;"	e	enum:Month
Jar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^impl CookieStore for Jar {$/;"	c
Jar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^impl Jar {$/;"	c
Jar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^pub struct Jar(RwLock<cookie_store::CookieStore>);$/;"	s
JsValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^impl From<crate::error::Error> for wasm_bindgen::JsValue {$/;"	c
July	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    July = 6,$/;"	e	enum:Month
June	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    June = 5,$/;"	e	enum:Month
KEY	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^static KEY: &[u8] = include_bytes!("..\/..\/..\/test\/key.pem");$/;"	v
KebabCase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    KebabCase,$/;"	e	enum:RenameRule
KeepCoreThreadAlive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^impl KeepCoreThreadAlive {$/;"	c
KeepCoreThreadAlive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^pub(crate) struct KeepCoreThreadAlive(Option<Arc<InnerClientHandle>>);$/;"	s
Key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^pub(crate) struct Key {$/;"	s
Key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/fnv.rs	/^pub trait Key: Hash + Display {$/;"	i
Key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    Key,$/;"	e	enum:TokenType
KeyError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/aes.rs	/^pub struct KeyError(());$/;"	s
KeyIvPair	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs5.rs	/^pub struct KeyIvPair {$/;"	s
KeyType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^impl KeyType {$/;"	c
KeyType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^impl PartialEq<&str> for KeyType {$/;"	c
KeyType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^impl PartialEq<OsStr> for KeyType {$/;"	c
KeyType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^impl PartialEq<char> for KeyType {$/;"	c
KeyType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^impl PartialEq<usize> for KeyType {$/;"	c
KeyType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^pub(crate) enum KeyType {$/;"	g
KeyUsage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^impl Default for KeyUsage {$/;"	c
KeyUsage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^impl KeyUsage {$/;"	c
KeyUsage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^pub struct KeyUsage {$/;"	s
Kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^enum Kind {$/;"	g
Kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^impl Kind {$/;"	c
Kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^impl fmt::Debug for Kind {$/;"	c
Kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub(crate) enum Kind {$/;"	g
LOCK	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        static mut LOCK: *mut Mutex<()> = 0 as *mut _;$/;"	v	function:tests::set_time_zone_la_or_london
LONG_MONTH_SUFFIXES	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static LONG_MONTH_SUFFIXES: [&'static str; 12] =$/;"	v	function:short_or_long_month0
LONG_WEEKDAY_SUFFIXES	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static LONG_WEEKDAY_SUFFIXES: [&'static str; 7] =$/;"	v	function:short_or_long_weekday
Last	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    Last,$/;"	e	enum:ArgSettings
LazilyResolvedCapture	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    impl LazilyResolvedCapture {$/;"	c	module:capture
LazilyResolvedCapture	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    struct LazilyResolvedCapture {$/;"	s	module:capture
LazilyResolvedCapture	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    unsafe impl Sync for LazilyResolvedCapture where Capture: Sync {}$/;"	c	module:capture
Left	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Left,$/;"	e	enum:Alignment
Left	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        Left(A),$/;"	e	enum:itertools::Either
Limit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    Limit(usize),$/;"	e	enum:PolicyKind
LineStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^impl<'a> LineStart<'a> {$/;"	c
LineStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) struct LineStart<'a> {$/;"	s
Link	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Link(LinkType, CowStr<'a>, CowStr<'a>),$/;"	e	enum:Tag
Link	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/linklabel.rs	/^    Link(CowStr<'a>),$/;"	e	enum:ReferenceLabel
Link	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Link(LinkIndex),$/;"	e	enum:ItemBody
Link	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Link,$/;"	e	enum:LinkStackTy
LinkDef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub struct LinkDef<'a> {$/;"	s
LinkIndex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub(crate) struct LinkIndex(usize);$/;"	s
LinkLabel	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/linklabel.rs	/^pub(crate) type LinkLabel<'a> = UniCase<CowStr<'a>>;$/;"	t
LinkLabel	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    LinkLabel(CowStr<'a>, usize),$/;"	e	enum:RefScan
LinkStack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl LinkStack {$/;"	c
LinkStack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^struct LinkStack {$/;"	s
LinkStackEl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^struct LinkStackEl {$/;"	s
LinkStackTy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^enum LinkStackTy {$/;"	g
LinkType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^impl LinkType {$/;"	c
LinkType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^pub enum LinkType {$/;"	g
Linked	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^    Linked {$/;"	e	enum:ChainState
List	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    List(Option<u64>), \/\/ TODO: add delim and tight for ast (not needed for html)$/;"	e	enum:Tag
List	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    List(bool, u8, u64), \/\/ is_tight, list character, list start index$/;"	e	enum:ItemBody
ListItem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    ListItem(usize),     \/\/ indent level$/;"	e	enum:ItemBody
Literal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Literal(&'a str),$/;"	e	enum:Item
Literal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    Literal,$/;"	e	enum:TScalarStyle
Local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^impl Local {$/;"	c
Local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^impl TimeZone for Local {$/;"	c
Local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^pub struct Local;$/;"	s
Local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        Local,$/;"	e	enum:socks::DnsResolve
LocalResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^impl<T: fmt::Debug> LocalResult<T> {$/;"	c
LocalResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^impl<T> LocalResult<T> {$/;"	c
LocalResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^impl<Tz: TimeZone> LocalResult<Date<Tz>> {$/;"	c
LocalResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^pub enum LocalResult<T> {$/;"	g
Locale	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^struct Locale;$/;"	s
Long	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    Long,$/;"	e	enum:UsageToken
Long	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    Long(OsString),$/;"	e	enum:KeyType
LongMonthName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    LongMonthName,$/;"	e	enum:Fixed
LongWeekdayName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    LongWeekdayName,$/;"	e	enum:Fixed
LookupTable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^struct LookupTable {$/;"	s
LookupTable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^type LookupTable = [bool; 256];$/;"	t
LoopInstruction	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^enum LoopInstruction<T> {$/;"	g
LowerAmPm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    LowerAmPm,$/;"	e	enum:Fixed
LowerCase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    LowerCase,$/;"	e	enum:RenameRule
LsResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub struct LsResult {$/;"	s
MDL_TO_OL	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^static MDL_TO_OL: [i8; MAX_MDL as usize + 1] = [$/;"	v
MKeyMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^impl<'help> Index<&'_ KeyType> for MKeyMap<'help> {$/;"	c
MKeyMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^impl<'help> MKeyMap<'help> {$/;"	c
MKeyMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^pub(crate) struct MKeyMap<'help> {$/;"	s
Map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Map,$/;"	e	enum:Unexpected
Map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Map(Vec<(Content<'de>, Content<'de>)>),$/;"	e	enum:content::Content
Map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        Map(Vec<(Content, Content)>),$/;"	e	enum:content::Content
MapAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub trait MapAccess<'de> {$/;"	i
MapAccessDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, A> de::Deserializer<'de> for MapAccessDeserializer<A>$/;"	c
MapAccessDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, A> de::EnumAccess<'de> for MapAccessDeserializer<A>$/;"	c
MapAccessDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<A> MapAccessDeserializer<A> {$/;"	c
MapAccessDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct MapAccessDeserializer<A> {$/;"	s
MapAsEnum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    impl<'de, A> VariantAccess<'de> for MapAsEnum<A>$/;"	c	module:private
MapAsEnum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub struct MapAsEnum<A> {$/;"	s	module:private
MapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, I, E> Clone for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, I, E> Debug for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, I, E> MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, I, E> de::Deserializer<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, I, E> de::MapAccess<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, I, E> de::SeqAccess<'de> for MapDeserializer<'de, I, E>$/;"	c
MapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct MapDeserializer<'de, I, E>$/;"	s
MapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> de::Deserializer<'de> for MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> de::MapAccess<'de> for MapDeserializer<'de, E>$/;"	c	module:content
MapDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    struct MapDeserializer<'de, E>$/;"	s	module:content
MapRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'a, 'de, E> MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, 'a, E> de::Deserializer<'de> for MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, 'a, E> de::MapAccess<'de> for MapRefDeserializer<'a, 'de, E>$/;"	c	module:content
MapRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    struct MapRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
MappingEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    MappingEnd,$/;"	e	enum:Event
MappingStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    MappingStart(usize),$/;"	e	enum:Event
March	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    March = 2,$/;"	e	enum:Month
MarkedEventReceiver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^pub trait MarkedEventReceiver {$/;"	i
Marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^impl Marker {$/;"	c
Marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^pub struct Marker {$/;"	s
Match	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^impl ToTokens for Match {$/;"	c
Match	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^pub struct Match(pub Fragment);$/;"	s
MatchedArg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^impl Default for MatchedArg {$/;"	c
MatchedArg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^impl MatchedArg {$/;"	c
MatchedArg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^pub(crate) struct MatchedArg {$/;"	s
MaxOccurrences	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    MaxOccurrences,$/;"	e	enum:ContextKind
May	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    May = 4,$/;"	e	enum:Month
MaybeCode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    MaybeCode(usize, bool), \/\/ number of backticks, preceeded by backslash$/;"	e	enum:ItemBody
MaybeEmphasis	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    MaybeEmphasis(usize, bool, bool),$/;"	e	enum:ItemBody
MaybeHtml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    MaybeHtml,$/;"	e	enum:ItemBody
MaybeHyphenValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    MaybeHyphenValue,$/;"	e	enum:ParseResult
MaybeImage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    MaybeImage,$/;"	e	enum:ItemBody
MaybeLinkClose	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    MaybeLinkClose(bool),$/;"	e	enum:ItemBody
MaybeLinkOpen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    MaybeLinkOpen,$/;"	e	enum:ItemBody
MaybeSmartQuote	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    MaybeSmartQuote(u8, bool, bool),$/;"	e	enum:ItemBody
Mdf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^impl Mdf {$/;"	c
Mdf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^impl fmt::Debug for Mdf {$/;"	c
Mdf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub struct Mdf(pub u32);$/;"	s
MemBio	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^impl Drop for MemBio {$/;"	c
MemBio	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^impl MemBio {$/;"	c
MemBio	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^pub struct MemBio(*mut ffi::BIO);$/;"	s
MemBioSlice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^impl<'a> Drop for MemBioSlice<'a> {$/;"	c
MemBioSlice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^impl<'a> MemBioSlice<'a> {$/;"	c
MemBioSlice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^pub struct MemBioSlice<'a>(*mut ffi::BIO, PhantomData<&'a [u8]>);$/;"	s
MemoryStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    impl MemoryStream {$/;"	c	function:stateless
MemoryStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    impl Read for MemoryStream {$/;"	c	function:stateless
MemoryStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    impl Write for MemoryStream {$/;"	c	function:stateless
MemoryStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    struct MemoryStream {$/;"	s	function:stateless
Message	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^impl From<Colorizer> for Message {$/;"	c
Message	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^impl From<String> for Message {$/;"	c
Message	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^impl Message {$/;"	c
Message	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^pub(crate) enum Message {$/;"	g
MessageDigest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^impl MessageDigest {$/;"	c
MessageDigest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^pub struct MessageDigest(*const ffi::EVP_MD);$/;"	s
MessageDigest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^unsafe impl Send for MessageDigest {}$/;"	c
MessageDigest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^unsafe impl Sync for MessageDigest {}$/;"	c
MessageError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^impl<M> Debug for MessageError<M>$/;"	c
MessageError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^impl<M> Display for MessageError<M>$/;"	c
MessageError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^impl<M> StdError for MessageError<M> where M: Display + Debug + 'static {}$/;"	c
MessageError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^pub struct MessageError<M>(pub M);$/;"	s
Micros	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    Micros,$/;"	e	enum:SecondsFormat
MidHandshakeSslStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl<S> MidHandshakeSslStream<S> {$/;"	c
MidHandshakeSslStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl<S> MidHandshakeSslStream<S>$/;"	c
MidHandshakeSslStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct MidHandshakeSslStream<S> {$/;"	s
MilliSecondsTimestampVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for MilliSecondsTimestampVisitor {$/;"	c	module:serde::ts_milliseconds
MilliSecondsTimestampVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub struct MilliSecondsTimestampVisitor;$/;"	s	module:serde
Millis	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    Millis,$/;"	e	enum:SecondsFormat
MinValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    MinValues,$/;"	e	enum:ContextKind
Minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Minute,$/;"	e	enum:Numeric
MissingFieldDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> Deserializer<'de> for MissingFieldDeserializer<E>$/;"	c	function:missing_field
MissingFieldDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    struct MissingFieldDeserializer<E>(&'static str, PhantomData<E>);$/;"	s	function:missing_field
MissingFormatConverter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    MissingFormatConverter,$/;"	e	enum:ParseError
MissingRequiredArgument	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    MissingRequiredArgument,$/;"	e	enum:ErrorKind
MissingSubcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    MissingSubcommand,$/;"	e	enum:ErrorKind
Mode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^pub enum Mode {$/;"	g
Modified	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Modified,$/;"	e	enum:DirEntryAttr
Mon	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Mon = 0,$/;"	e	enum:Weekday
Month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Month,$/;"	e	enum:Numeric
Month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl FromStr for Month {$/;"	c
Month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    impl ser::Serialize for Month {$/;"	c	module:month_serde
Month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    impl<'de> de::Deserialize<'de> for Month {$/;"	c	module:month_serde
Month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl Month {$/;"	c
Month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl num_traits::FromPrimitive for Month {$/;"	c
Month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub enum Month {$/;"	g
MonthVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    impl<'de> de::Visitor<'de> for MonthVisitor {$/;"	c	module:month_serde
MonthVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    struct MonthVisitor;$/;"	s	module:month_serde
MsbOption	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^impl MsbOption {$/;"	c
MsbOption	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^pub struct MsbOption(c_int);$/;"	s
Multicall	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    Multicall,$/;"	e	enum:AppSettings
MultipartForm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    MultipartForm(Form),$/;"	e	enum:Inner
MultipartPart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    MultipartPart(Bytes),$/;"	e	enum:Inner
Multiple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    Multiple,$/;"	e	enum:ArgSettings
Multiple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    Multiple,$/;"	e	enum:UsageToken
MultipleOccurrences	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    MultipleOccurrences,$/;"	e	enum:ArgSettings
MultipleValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    MultipleValues,$/;"	e	enum:ArgSettings
Mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^impl<'a, T> Clone for Mut<'a, T>$/;"	c
Mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^impl<'a, T> Copy for Mut<'a, T> where T: ?Sized {}$/;"	c
Mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^impl<'a, T> Mut<'a, T> {$/;"	c
Mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^impl<'a, T> Mut<'a, T>$/;"	c
Mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^pub struct Mut<'a, T>$/;"	s
Mutex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T> Serialize for Mutex<T>$/;"	c
MutexInner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    struct MutexInner;$/;"	s	module:tests
MyStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^        impl Serialize for MyStruct {$/;"	c	function:tests::add_json_fail
MyStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^        struct MyStruct;$/;"	s	function:tests::add_json_fail
NANOS_PER_SEC	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            static NANOS_PER_SEC: u32 = 1_000_000_000;$/;"	v	function:Duration::deserialize::check_overflow
NANOS_PER_SEC	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            static NANOS_PER_SEC: u32 = 1_000_000_000;$/;"	v	function:SystemTime::deserialize::check_overflow
NSEC_PER_SEC	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^static NSEC_PER_SEC: i32 = 1_000_000_000;$/;"	v
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    impl Decodable for NaiveDate {$/;"	c	module:rustc_serialize
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    impl Encodable for NaiveDate {$/;"	c	module:rustc_serialize
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    impl ser::Serialize for NaiveDate {$/;"	c	module:serde
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    impl<'de> de::Deserialize<'de> for NaiveDate {$/;"	c	module:serde
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl Add<OldDuration> for NaiveDate {$/;"	c
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl AddAssign<OldDuration> for NaiveDate {$/;"	c
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl Datelike for NaiveDate {$/;"	c
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl NaiveDate {$/;"	c
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl Sub<NaiveDate> for NaiveDate {$/;"	c
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl Sub<OldDuration> for NaiveDate {$/;"	c
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl SubAssign<OldDuration> for NaiveDate {$/;"	c
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl fmt::Debug for NaiveDate {$/;"	c
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl fmt::Display for NaiveDate {$/;"	c
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl str::FromStr for NaiveDate {$/;"	c
NaiveDate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^pub struct NaiveDate {$/;"	s
NaiveDateDaysIterator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl ExactSizeIterator for NaiveDateDaysIterator {}$/;"	c
NaiveDateDaysIterator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl Iterator for NaiveDateDaysIterator {$/;"	c
NaiveDateDaysIterator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^pub struct NaiveDateDaysIterator {$/;"	s
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl Decodable for NaiveDateTime {$/;"	c	module:rustc_serialize
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl Encodable for NaiveDateTime {$/;"	c	module:rustc_serialize
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl From<TsSeconds> for NaiveDateTime {$/;"	c	module:rustc_serialize
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl ser::Serialize for NaiveDateTime {$/;"	c	module:serde
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl<'de> de::Deserialize<'de> for NaiveDateTime {$/;"	c	module:serde
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl Add<OldDuration> for NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl AddAssign<OldDuration> for NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl Datelike for NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl Sub<NaiveDateTime> for NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl Sub<OldDuration> for NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl SubAssign<OldDuration> for NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl Timelike for NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl fmt::Debug for NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl fmt::Display for NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl hash::Hash for NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^impl str::FromStr for NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^pub struct NaiveDateTime {$/;"	s
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl Add<FixedOffset> for NaiveDateTime {$/;"	c
NaiveDateTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl Sub<FixedOffset> for NaiveDateTime {$/;"	c
NaiveDateTimeFromMilliSecondsVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        impl<'de> de::Visitor<'de> for NaiveDateTimeFromMilliSecondsVisitor {$/;"	c	module:serde::ts_milliseconds
NaiveDateTimeFromMilliSecondsVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        struct NaiveDateTimeFromMilliSecondsVisitor;$/;"	s	module:serde::ts_milliseconds
NaiveDateTimeFromNanoSecondsVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        impl<'de> de::Visitor<'de> for NaiveDateTimeFromNanoSecondsVisitor {$/;"	c	module:serde::ts_nanoseconds
NaiveDateTimeFromNanoSecondsVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        struct NaiveDateTimeFromNanoSecondsVisitor;$/;"	s	module:serde::ts_nanoseconds
NaiveDateTimeFromSecondsVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        impl<'de> de::Visitor<'de> for NaiveDateTimeFromSecondsVisitor {$/;"	c	module:serde::ts_seconds
NaiveDateTimeFromSecondsVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        struct NaiveDateTimeFromSecondsVisitor;$/;"	s	module:serde::ts_seconds
NaiveDateTimeVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl<'de> de::Visitor<'de> for NaiveDateTimeVisitor {$/;"	c	module:serde
NaiveDateTimeVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    struct NaiveDateTimeVisitor;$/;"	s	module:serde
NaiveDateVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    impl<'de> de::Visitor<'de> for NaiveDateVisitor {$/;"	c	module:serde
NaiveDateVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    struct NaiveDateVisitor;$/;"	s	module:serde
NaiveDateWeeksIterator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl ExactSizeIterator for NaiveDateWeeksIterator {}$/;"	c
NaiveDateWeeksIterator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^impl Iterator for NaiveDateWeeksIterator {$/;"	c
NaiveDateWeeksIterator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^pub struct NaiveDateWeeksIterator {$/;"	s
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    impl Decodable for NaiveTime {$/;"	c	module:rustc_serialize
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    impl Encodable for NaiveTime {$/;"	c	module:rustc_serialize
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    impl ser::Serialize for NaiveTime {$/;"	c	module:serde
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    impl<'de> de::Deserialize<'de> for NaiveTime {$/;"	c	module:serde
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl Add<OldDuration> for NaiveTime {$/;"	c
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl AddAssign<OldDuration> for NaiveTime {$/;"	c
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl NaiveTime {$/;"	c
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl Sub<NaiveTime> for NaiveTime {$/;"	c
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl Sub<OldDuration> for NaiveTime {$/;"	c
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl SubAssign<OldDuration> for NaiveTime {$/;"	c
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl Timelike for NaiveTime {$/;"	c
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl fmt::Debug for NaiveTime {$/;"	c
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl fmt::Display for NaiveTime {$/;"	c
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl hash::Hash for NaiveTime {$/;"	c
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^impl str::FromStr for NaiveTime {$/;"	c
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^pub struct NaiveTime {$/;"	s
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl Add<FixedOffset> for NaiveTime {$/;"	c
NaiveTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^impl Sub<FixedOffset> for NaiveTime {$/;"	c
NaiveTimeVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    impl<'de> de::Visitor<'de> for NaiveTimeVisitor {$/;"	c	module:serde
NaiveTimeVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    struct NaiveTimeVisitor;$/;"	s	module:serde
Name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    Name,$/;"	e	enum:UsageToken
Name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Name,$/;"	e	enum:DirEntryAttr
Name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^impl Name {$/;"	c
Name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^pub struct Name {$/;"	s
NameType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl NameType {$/;"	c
NameType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct NameType(c_int);$/;"	s
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl AsRef<Path> for NamedTempFile {$/;"	c
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl From<PersistError> for NamedTempFile {$/;"	c
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl NamedTempFile {$/;"	c
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl Read for NamedTempFile {$/;"	c
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl Seek for NamedTempFile {$/;"	c
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl Write for NamedTempFile {$/;"	c
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl fmt::Debug for NamedTempFile {$/;"	c
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl std::os::unix::io::AsRawFd for NamedTempFile {$/;"	c
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl std::os::windows::io::AsRawHandle for NamedTempFile {$/;"	c
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl<'a> Read for &'a NamedTempFile {$/;"	c
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl<'a> Seek for &'a NamedTempFile {$/;"	c
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl<'a> Write for &'a NamedTempFile {$/;"	c
NamedTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^pub struct NamedTempFile {$/;"	s
NanoSecondsTimestampVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for NanoSecondsTimestampVisitor {$/;"	c	module:serde::ts_nanoseconds
NanoSecondsTimestampVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub struct NanoSecondsTimestampVisitor;$/;"	s	module:serde
Nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    Nanos,$/;"	e	enum:SecondsFormat
Nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            Nanos,$/;"	e	enum:Duration::deserialize::Field
Nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            Nanos,$/;"	e	enum:SystemTime::deserialize::Field
Nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond,$/;"	e	enum:Fixed
Nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond,$/;"	e	enum:Numeric
Nanosecond3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond3,$/;"	e	enum:Fixed
Nanosecond3NoDot	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond3NoDot,$/;"	e	enum:InternalInternal
Nanosecond6	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond6,$/;"	e	enum:Fixed
Nanosecond6NoDot	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond6NoDot,$/;"	e	enum:InternalInternal
Nanosecond9	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond9,$/;"	e	enum:Fixed
Nanosecond9NoDot	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Nanosecond9NoDot,$/;"	e	enum:InternalInternal
NativeTlsConn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    impl<T: AsyncRead + AsyncWrite + Unpin> AsyncRead for NativeTlsConn<T> {$/;"	c	module:native_tls_conn
NativeTlsConn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    impl<T: AsyncRead + AsyncWrite + Unpin> AsyncWrite for NativeTlsConn<T> {$/;"	c	module:native_tls_conn
NativeTlsConn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    impl<T: Connection + AsyncRead + AsyncWrite + Unpin> Connection for NativeTlsConn<T> {$/;"	c	module:native_tls_conn
Network	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    Network(IpNet),$/;"	e	enum:Ip
Never	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/color.rs	/^    Never,$/;"	e	enum:ColorChoice
NeverDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for NeverDeserializer<E>$/;"	c
NeverDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct NeverDeserializer<E> {$/;"	s
New	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^    New { file: String },$/;"	e	enum:Commands
Newtype	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Newtype(Box<Content<'de>>),$/;"	e	enum:content::Content
Newtype	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    Newtype,$/;"	e	enum:Style
NewtypeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    NewtypeStruct,$/;"	e	enum:Unexpected
NewtypeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        NewtypeStruct(&'static str, Box<Content>),$/;"	e	enum:content::Content
NewtypeVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    NewtypeVariant,$/;"	e	enum:Unexpected
NewtypeVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        NewtypeVariant(&'static str, u32, &'static str, Box<Content>),$/;"	e	enum:content::Content
NextLineHelp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    NextLineHelp,$/;"	e	enum:AppSettings
NextLineHelp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    NextLineHelp,$/;"	e	enum:ArgSettings
Nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^impl Nid {$/;"	c
Nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^pub struct Nid(c_int);$/;"	s
No	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    No,$/;"	e	enum:Untagged
No	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    No,$/;"	e	enum:Identifier
NoAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    NoAccess,$/;"	e	enum:TransitState
NoArg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    NoArg,$/;"	e	enum:ParseResult
NoAutoHelp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    NoAutoHelp,$/;"	e	enum:AppSettings
NoAutoVersion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    NoAutoVersion,$/;"	e	enum:AppSettings
NoBinaryName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    NoBinaryName,$/;"	e	enum:AppSettings
NoEquals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    NoEquals,$/;"	e	enum:ErrorKind
NoMatchingArg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    NoMatchingArg {$/;"	e	enum:ParseResult
NoOp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    NoOp,$/;"	e	enum:PercentEncoding
NoProxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl NoProxy {$/;"	c
NoProxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^struct NoProxy {$/;"	s
NoReader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    NoReader,$/;"	e	enum:ZipFileReader
NoToken	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    NoToken,$/;"	e	enum:TokenType
NoVerifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^impl ServerCertVerifier for NoVerifier {$/;"	c
NoVerifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^pub(crate) struct NoVerifier;$/;"	s
Node	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^pub(crate) struct Node<T> {$/;"	s
NonExistent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    NonExistent { timestamp: V },$/;"	e	enum:SerdeError
None	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    None,$/;"	e	enum:Pad
None	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    None,$/;"	e	enum:LocalResult
None	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    None,$/;"	e	enum:DisplayOrder
None	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    None,$/;"	e	enum:ContextValue
None	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    None,$/;"	e	enum:Alignment
None	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    None,$/;"	e	enum:PolicyKind
None	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        None,$/;"	e	enum:content::Content
None	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        None,$/;"	e	enum:content::Content
None	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    None,$/;"	e	enum:Default
None	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    None,$/;"	e	enum:TagType
None	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    None,$/;"	e	enum:RenameRule
Normal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    Normal(&'writer mut dyn Write),$/;"	e	enum:HelpWriter
Normal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Normal,$/;"	e	enum:TransitState
NotBothDebug	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^pub trait NotBothDebug {$/;"	i
NotEnough	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    NotEnough,$/;"	e	enum:ParseErrorKind
NotFound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    NotFound,$/;"	e	enum:ErrorKind
Nothing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    Nothing,$/;"	e	enum:Event
November	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    November = 10,$/;"	e	enum:Month
Null	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    Null,$/;"	e	enum:Yaml
NumDaysFromSun	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    NumDaysFromSun,$/;"	e	enum:Numeric
Number	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    Number(isize),$/;"	e	enum:ContextValue
Numeric	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Numeric(Numeric, Pad),$/;"	e	enum:Item
Numeric	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub enum Numeric {$/;"	g
OL_TO_MDL	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^static OL_TO_MDL: [u8; MAX_OL as usize + 1] = [$/;"	v
ONCE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            static ONCE: Once = ONCE_INIT;$/;"	v	function:inner::mac::info
ONCE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static ONCE: Once = ONCE_INIT;$/;"	v	function:inner::frequency
OcspBasicResponseRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^impl OcspBasicResponseRef {$/;"	c
OcspCertId	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^impl OcspCertId {$/;"	c
OcspCertStatus	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^impl OcspCertStatus {$/;"	c
OcspCertStatus	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^pub struct OcspCertStatus(c_int);$/;"	s
OcspRequest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^impl OcspRequest {$/;"	c
OcspRequestRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^impl OcspRequestRef {$/;"	c
OcspResponse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^impl OcspResponse {$/;"	c
OcspResponseRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^impl OcspResponseRef {$/;"	c
OcspResponseStatus	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^impl OcspResponseStatus {$/;"	c
OcspResponseStatus	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^pub struct OcspResponseStatus(c_int);$/;"	s
OcspRevokedStatus	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^impl OcspRevokedStatus {$/;"	c
OcspRevokedStatus	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^pub struct OcspRevokedStatus(c_int);$/;"	s
OcspStatus	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^impl<'a> OcspStatus<'a> {$/;"	c
OcspStatus	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^pub struct OcspStatus<'a> {$/;"	s
October	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    October = 9,$/;"	e	enum:Month
Of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^impl Of {$/;"	c
Of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^impl fmt::Debug for Of {$/;"	c
Of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub struct Of(pub u32);$/;"	s
Offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    type Offset = FixedOffset;$/;"	t	implementation:FixedOffset
Offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    type Offset = FixedOffset;$/;"	t	implementation:Local
Offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    type Offset: Offset;$/;"	t	interface:TimeZone
Offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^pub trait Offset: Sized + Clone + fmt::Debug {$/;"	i
Offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    type Offset = Utc;$/;"	t	implementation:Utc
OffsetIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'a, 'b> Iterator for OffsetIter<'a, 'b> {$/;"	c
OffsetIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'a, 'b> OffsetIter<'a, 'b> {$/;"	c
OffsetIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub struct OffsetIter<'a, 'b> {$/;"	s
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^pub fn Ok<T>(t: T) -> Result<T> {$/;"	f
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            Ok,$/;"	e	enum:deserialize::Field
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        type Ok = Content;$/;"	t	module:content
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        type Ok = M::Ok;$/;"	t	module:content
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type Ok = ();$/;"	t
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type Ok = S::Ok;$/;"	t
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    type Ok = ();$/;"	t	implementation:Formatter
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^    type Ok = Ok;$/;"	t
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeMap
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeSeq
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeStruct
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeStructVariant
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTuple
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTupleStruct
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:SerializeTupleVariant
Ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type Ok;$/;"	t	interface:Serializer
OnDisk	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    OnDisk(File),$/;"	e	enum:SpooledData
OneOf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^impl Display for OneOf {$/;"	c
OneOf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^struct OneOf {$/;"	s
OneshotResponse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^type OneshotResponse = oneshot::Sender<crate::Result<async_impl::Response>>;$/;"	t
Open	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^impl Drop for Open {$/;"	c
Open	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^impl Open {$/;"	c
Open	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^pub struct Open {$/;"	s
OpensslString	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^impl AsRef<[u8]> for OpensslString {$/;"	c
OpensslString	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^impl AsRef<str> for OpensslString {$/;"	c
OpensslString	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^impl Stackable for OpensslString {$/;"	c
OpensslString	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^impl fmt::Debug for OpensslString {$/;"	c
OpensslString	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^impl fmt::Display for OpensslString {$/;"	c
OpensslStringRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^impl AsRef<[u8]> for OpensslStringRef {$/;"	c
OpensslStringRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^impl AsRef<str> for OpensslStringRef {$/;"	c
OpensslStringRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^impl Deref for OpensslStringRef {$/;"	c
OpensslStringRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^impl fmt::Debug for OpensslStringRef {$/;"	c
OpensslStringRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^impl fmt::Display for OpensslStringRef {$/;"	c
Opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    Opt(Id),$/;"	e	enum:ParseResult
Opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    Opt(Id),$/;"	e	enum:ParseState
Option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    impl<T> Sealed for Option<T> {}$/;"	c	module:private
Option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^impl<T> Context<T, Infallible> for Option<T> {$/;"	c
Option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Option<T>$/;"	c
Option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Option,$/;"	e	enum:Unexpected
Option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T> Serialize for Option<T>$/;"	c
OptionMilliSecondsTimestampVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for OptionMilliSecondsTimestampVisitor {$/;"	c	module:serde::ts_milliseconds_option
OptionMilliSecondsTimestampVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        struct OptionMilliSecondsTimestampVisitor;$/;"	s	module:serde::ts_milliseconds_option
OptionNanoSecondsTimestampVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for OptionNanoSecondsTimestampVisitor {$/;"	c	module:serde::ts_nanoseconds_option
OptionNanoSecondsTimestampVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        struct OptionNanoSecondsTimestampVisitor;$/;"	s	module:serde::ts_nanoseconds_option
OptionSecondsTimestampVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for OptionSecondsTimestampVisitor {$/;"	c	module:serde::ts_seconds_option
OptionSecondsTimestampVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        struct OptionSecondsTimestampVisitor;$/;"	s	module:serde::ts_seconds_option
OptionVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T> Visitor<'de> for OptionVisitor<T>$/;"	c
OptionVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct OptionVisitor<T> {$/;"	s
Optional	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    Optional,$/;"	e	enum:Unsupported
Ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Ordinal,$/;"	e	enum:Numeric
OsStr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for OsStr {$/;"	c
OsString	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    OsString(OsString),$/;"	e	enum:ErrorKind
OsString	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Deserialize<'de> for OsString {$/;"	c
OsString	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for OsString {$/;"	c
OsStringVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Visitor<'de> for OsStringVisitor {$/;"	c
OsStringVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct OsStringVisitor;$/;"	s
OsValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl Default for OsValues<'_> {$/;"	c
OsValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> DoubleEndedIterator for OsValues<'a> {$/;"	c
OsValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> ExactSizeIterator for OsValues<'a> {}$/;"	c
OsValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> Iterator for OsValues<'a> {$/;"	c
OsValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^pub struct OsValues<'a> {$/;"	s
Other	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    Other,$/;"	e	enum:ValueHint
Other	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    Other,$/;"	e	enum:ErrorKind
Other	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Other(&'a str),$/;"	e	enum:Unexpected
Other	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Other,$/;"	e	enum:content::TagContentOtherField
OutOfRange	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    OutOfRange,$/;"	e	enum:ParseErrorKind
OutOfRangeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl Error for OutOfRangeError {$/;"	c
OutOfRangeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^impl fmt::Display for OutOfRangeError {$/;"	c
OutOfRangeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^pub struct OutOfRangeError(());$/;"	s
OutOfRangeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl Error for OutOfRangeError {$/;"	c
OutOfRangeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^impl fmt::Display for OutOfRangeError {$/;"	c
OutOfRangeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^pub struct OutOfRangeError(());$/;"	s
Outgoing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    impl<'a> ::std::ops::Deref for Outgoing<'a> {$/;"	c	function:stateless
Outgoing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    impl<'a> AsRef<[u8]> for Outgoing<'a> {$/;"	c	function:stateless
Outgoing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    impl<'a> Drop for Outgoing<'a> {$/;"	c	function:stateless
Outgoing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    pub struct Outgoing<'a>(&'a mut Vec<u8>);$/;"	s	function:stateless
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    type Output = Date<Tz>;$/;"	t	implementation:Date
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    type Output = OldDuration;$/;"	t	implementation:Date
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    type Output = DateTime<Tz>;$/;"	t	implementation:DateTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    type Output = OldDuration;$/;"	t	implementation:DateTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Output = NaiveDate;$/;"	t	implementation:NaiveDate
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    type Output = OldDuration;$/;"	t	implementation:NaiveDate
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    type Output = NaiveDateTime;$/;"	t	implementation:NaiveDateTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    type Output = OldDuration;$/;"	t	implementation:NaiveDateTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    type Output = NaiveTime;$/;"	t	implementation:NaiveTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    type Output = OldDuration;$/;"	t	implementation:NaiveTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    type Output = DateTime<Tz>;$/;"	t	implementation:DateTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    type Output = NaiveDateTime;$/;"	t	implementation:NaiveDateTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    type Output = NaiveTime;$/;"	t	implementation:NaiveTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    type Output = Duration;$/;"	t	implementation:Duration
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    type Output = Arg<'help>;$/;"	t	implementation:App
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    type Output = Arg<'help>;$/;"	t	implementation:MKeyMap
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    type Output = BigNum;$/;"	t	implementation:BigNum
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    type Output = BigNum;$/;"	t	implementation:BigNumRef
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type Output = T::Ref;$/;"	t	implementation:StackRef
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    type Output = (LinkType, CowStr<'a>, CowStr<'a>);$/;"	t	implementation:Allocations
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    type Output = CowStr<'a>;$/;"	t	implementation:Allocations
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    type Output = HeadingAttributes<'a>;$/;"	t	implementation:Allocations
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    type Output = Vec<Alignment>;$/;"	t	implementation:Allocations
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    type Output = Node<T>;$/;"	t	implementation:Tree
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    type Output = TreeIndex;$/;"	t	implementation:TreeIndex
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    type Output = Result<Response, crate::Error>;$/;"	t	implementation:Pending
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    type Output = Result<Response, crate::Error>;$/;"	t	implementation:PendingRequest
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    type Output = Result<Inner, std::io::Error>;$/;"	t	implementation:Pending
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    type Output = Result<itertools::Either<FutOutput, std::iter::Once<SocketAddr>>, FutError>;$/;"	t
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    type Output = Duration;$/;"	t	implementation:Duration
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Duration;$/;"	t	implementation:SteadyTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Duration;$/;"	t	implementation:Timespec
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Duration;$/;"	t	implementation:Tm
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = SteadyTime;$/;"	t	implementation:SteadyTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Timespec;$/;"	t	implementation:Timespec
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    type Output = Tm;$/;"	t	implementation:Tm
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            type Output = Duration;$/;"	t	implementation:inner::mac::SteadyTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            type Output = Duration;$/;"	t	implementation:inner::unix::SteadyTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            type Output = SteadyTime;$/;"	t	implementation:inner::mac::SteadyTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            type Output = SteadyTime;$/;"	t	implementation:inner::unix::SteadyTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        type Output = Duration;$/;"	t	implementation:inner::SteadyTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        type Output = SteadyTime;$/;"	t	implementation:inner::SteadyTime
Output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    type Output = Yaml;$/;"	t	implementation:Yaml
Overwrite	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Overwrite,$/;"	e	enum:TransitProcessResult
OverwriteAll	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    OverwriteAll,$/;"	e	enum:TransitProcessResult
Own	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^impl<T> Clone for Own<T>$/;"	c
Own	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^impl<T> Copy for Own<T> where T: ?Sized {}$/;"	c
Own	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^impl<T> Own<T>$/;"	c
Own	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^pub struct Own<T>$/;"	s
Own	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^unsafe impl<T> Send for Own<T> where T: ?Sized {}$/;"	c
Own	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^unsafe impl<T> Sync for Own<T> where T: ?Sized {}$/;"	c
Owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    type Owned = Dsa<T>;$/;"	t	implementation:DsaRef
Owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    type Owned = EcKey<T>;$/;"	t	implementation:EcKeyRef
Owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    type Owned = PKey<T>;$/;"	t	implementation:PKeyRef
Owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    type Owned = Rsa<T>;$/;"	t	implementation:RsaRef
Owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    type Owned = SslContext;$/;"	t	implementation:SslContextRef
Owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    type Owned = SslSession;$/;"	t	implementation:SslSessionRef
Owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    type Owned = X509;$/;"	t	implementation:X509Ref
OwnedHtml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    OwnedHtml(CowIndex),$/;"	e	enum:ItemBody
OwnedLiteral	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    OwnedLiteral(Box<str>),$/;"	e	enum:Item
OwnedSpace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    OwnedSpace(Box<str>),$/;"	e	enum:Item
PKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl PKey<Private> {$/;"	c
PKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl PKey<Public> {$/;"	c
PKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> Clone for PKey<T> {$/;"	c
PKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> PKey<T> {$/;"	c
PKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> TryFrom<Dh<T>> for PKey<T> {$/;"	c
PKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> TryFrom<Dsa<T>> for PKey<T> {$/;"	c
PKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> TryFrom<EcKey<T>> for PKey<T> {$/;"	c
PKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> TryFrom<Rsa<T>> for PKey<T> {$/;"	c
PKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> fmt::Debug for PKey<T> {$/;"	c
PKeyRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> PKeyRef<T> {$/;"	c
PKeyRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> PKeyRef<T>$/;"	c
PKeyRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> ToOwned for PKeyRef<T> {$/;"	c
Pad	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub enum Pad {$/;"	g
Padding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^impl Padding {$/;"	c
Padding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^pub struct Padding(c_int);$/;"	s
Page	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^impl Page {$/;"	c
Page	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^pub struct Page {$/;"	s
Pair	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub trait Pair {$/;"	i	module:private
PairDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, A, B, E> de::Deserializer<'de> for PairDeserializer<A, B, E>$/;"	c
PairDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^struct PairDeserializer<A, B, E>(A, B, PhantomData<E>);$/;"	s
PairVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, A, B, E> de::SeqAccess<'de> for PairVisitor<A, B, E>$/;"	c
PairVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^struct PairVisitor<A, B, E>(Option<A>, Option<B>, PhantomData<E>);$/;"	s
Paragraph	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Paragraph,$/;"	e	enum:Tag
Paragraph	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Paragraph,$/;"	e	enum:ItemBody
Parameters	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^impl Parameters {$/;"	c
Parameters	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^struct Parameters {$/;"	s
Parameters	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^impl Parameters {$/;"	c
Parameters	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^struct Parameters {$/;"	s
Params	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^pub enum Params {}$/;"	g
Params	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^unsafe impl HasParams for Params {}$/;"	c
Params	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^        struct Params {$/;"	s	function:tests::add_query_struct
Params	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^        struct Params {$/;"	s	function:tests::add_query_struct
ParseError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl Error for ParseError {$/;"	c
ParseError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl fmt::Display for ParseError {$/;"	c
ParseError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub struct ParseError(ParseErrorKind);$/;"	s
ParseError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^impl<'a> Display for ParseError<'a> {$/;"	c
ParseError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^pub struct ParseError<'a> {$/;"	s
ParseError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Error for ParseError {$/;"	c
ParseError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl fmt::Display for ParseError {$/;"	c
ParseError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub enum ParseError {$/;"	g
ParseErrorKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^enum ParseErrorKind {$/;"	g
ParseMonthError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl fmt::Debug for ParseMonthError {$/;"	c
ParseMonthError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub struct ParseMonthError {$/;"	s
ParseResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub type ParseResult<T> = Result<T, ParseError>;$/;"	t
ParseResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^enum ParseResult {$/;"	g
ParseResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^pub type ParseResult = Result<(Event, Marker), ScanError>;$/;"	t
ParseState	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^pub(crate) enum ParseState {$/;"	g
ParseWeekdayError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl fmt::Debug for ParseWeekdayError {$/;"	c
ParseWeekdayError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub struct ParseWeekdayError {$/;"	s
Parsed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^impl Default for Parsed {$/;"	c
Parsed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^impl Parsed {$/;"	c
Parsed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^pub struct Parsed {$/;"	s
ParsedPkcs12	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^pub struct ParsedPkcs12 {$/;"	s
Parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^pub trait Parser: FromArgMatches + CommandFactory + Sized {$/;"	i
Parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^impl<'help, 'cmd> Parser<'help, 'cmd> {$/;"	c
Parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^pub(crate) struct Parser<'help, 'cmd> {$/;"	s
Parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl FusedIterator for Parser<'_, '_> {}$/;"	c
Parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'a, 'b> Iterator for Parser<'a, 'b> {$/;"	c
Parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'input, 'callback> Parser<'input, 'callback> {$/;"	c
Parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub struct Parser<'input, 'callback> {$/;"	s
Parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^impl<T: Iterator<Item = char>> Parser<T> {$/;"	c
Parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^pub struct Parser<T> {$/;"	s
Part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^impl Part {$/;"	c
Part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^impl PartProps for Part {$/;"	c
Part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^impl fmt::Debug for Part {$/;"	c
Part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^pub struct Part {$/;"	s
Part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^impl Part {$/;"	c
Part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^impl PartProps for Part {$/;"	c
Part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^impl fmt::Debug for Part {$/;"	c
Part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^pub struct Part {$/;"	s
Part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^impl Part {$/;"	c
Part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^impl PartProps for Part {$/;"	c
Part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^impl fmt::Debug for Part {$/;"	c
Part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^pub struct Part {$/;"	s
PartMetadata	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^impl PartMetadata {$/;"	c
PartMetadata	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^pub(crate) struct PartMetadata {$/;"	s
PartMetadata	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^impl PartMetadata {$/;"	c
PartMetadata	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^pub(crate) struct PartMetadata {$/;"	s
PartProps	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^pub(crate) trait PartProps {$/;"	i
PartProps	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^pub(crate) trait PartProps {$/;"	i
PascalCase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    PascalCase,$/;"	e	enum:RenameRule
Path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Path,$/;"	e	enum:DirEntryAttr
Path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a Path {$/;"	c
Path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for Path {$/;"	c
Path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    Path(syn::ExprPath),$/;"	e	enum:Default
Path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/symbol.rs	/^impl PartialEq<Symbol> for Path {$/;"	c
Path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/symbol.rs	/^impl<'a> PartialEq<Symbol> for &'a Path {$/;"	c
PathBuf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Deserialize<'de> for PathBuf {$/;"	c
PathBuf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for PathBuf {$/;"	c
PathBufVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Visitor<'de> for PathBufVisitor {$/;"	c
PathBufVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct PathBufVisitor;$/;"	s
PathError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/error.rs	/^impl error::Error for PathError {$/;"	c
PathError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/error.rs	/^impl fmt::Display for PathError {$/;"	c
PathError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/error.rs	/^struct PathError {$/;"	s
PathPersistError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl error::Error for PathPersistError {$/;"	c
PathPersistError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl fmt::Display for PathPersistError {$/;"	c
PathPersistError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^pub struct PathPersistError {$/;"	s
PathSegment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    PathSegment,$/;"	e	enum:PercentEncoding
PathVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'a> Visitor<'a> for PathVisitor {$/;"	c
PathVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct PathVisitor;$/;"	s
Pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    Pem {$/;"	e	enum:ClientCert
Pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    Pem(Vec<u8>),$/;"	e	enum:Cert
Pending	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl Future for Pending {$/;"	c
Pending	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl Pending {$/;"	c
Pending	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl fmt::Debug for Pending {$/;"	c
Pending	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    Pending(Pending),$/;"	e	enum:Inner
Pending	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^impl Future for Pending {$/;"	c
Pending	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^struct Pending(Peekable<IoStream>, DecoderType);$/;"	s
PendingInner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^enum PendingInner {$/;"	g
PendingRequest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl Future for PendingRequest {$/;"	c
PendingRequest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^impl PendingRequest {$/;"	c
PercentEncoding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^impl PercentEncoding {$/;"	c
PercentEncoding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^pub(crate) enum PercentEncoding {$/;"	g
PermissionDenied	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    PermissionDenied,$/;"	e	enum:ErrorKind
PersistError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl error::Error for PersistError {$/;"	c
PersistError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl fmt::Display for PersistError {$/;"	c
PersistError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^pub struct PersistError {$/;"	s
PhantomData	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for PhantomData<T> {$/;"	c
PhantomData	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^impl<'de, T> DeserializeSeed<'de> for PhantomData<T>$/;"	c
PhantomData	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for PhantomData<T> {$/;"	c
PhantomDataVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T: ?Sized> Visitor<'de> for PhantomDataVisitor<T> {$/;"	c
PhantomDataVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct PhantomDataVisitor<T: ?Sized> {$/;"	s
Pkcs12	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^impl Pkcs12 {$/;"	c
Pkcs12	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    Pkcs12(native_tls_crate::Identity),$/;"	e	enum:ClientCert
Pkcs12Builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^impl Pkcs12Builder {$/;"	c
Pkcs12Builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^pub struct Pkcs12Builder {$/;"	s
Pkcs12Ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^impl Pkcs12Ref {$/;"	c
Pkcs7	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^impl Pkcs7 {$/;"	c
Pkcs7Ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^impl Pkcs7Ref {$/;"	c
PkzipCrc32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    PkzipCrc32(u32),$/;"	e	enum:ZipCryptoValidator
Plain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    Plain,$/;"	e	enum:TScalarStyle
PlainText	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    PlainText(super::body::ImplStream),$/;"	e	enum:Inner
Plaintext	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    Plaintext(io::Take<&'a mut dyn Read>),$/;"	e	enum:CryptoReader
PointConversionForm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^impl PointConversionForm {$/;"	c
PointConversionForm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^pub struct PointConversionForm(ffi::point_conversion_form_t);$/;"	s
Policy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^impl Default for Policy {$/;"	c
Policy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^impl Policy {$/;"	c
Policy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^impl fmt::Debug for Policy {$/;"	c
Policy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^pub struct Policy {$/;"	s
PolicyKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^enum PolicyKind {$/;"	g
PolicyKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^impl fmt::Debug for PolicyKind {$/;"	c
Pos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    Pos(Id),$/;"	e	enum:ParseState
Position	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    Position(usize),$/;"	e	enum:KeyType
PossibleValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^impl<'help> From<&'help &'help str> for PossibleValue<'help> {$/;"	c
PossibleValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^impl<'help> From<&'help str> for PossibleValue<'help> {$/;"	c
PossibleValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^impl<'help> PossibleValue<'help> {$/;"	c
PossibleValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^pub struct PossibleValue<'help> {$/;"	s
PowerShell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/powershell.rs	/^impl Generator for PowerShell {$/;"	c
PowerShell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/powershell.rs	/^pub struct PowerShell;$/;"	s
PowerShell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    PowerShell,$/;"	e	enum:Shell
PowerShell	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^    PowerShell,$/;"	e	enum:Shell
PreciseTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl PreciseTime {$/;"	c
PreciseTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct PreciseTime(u64);$/;"	s
PriorArg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    PriorArg,$/;"	e	enum:ContextKind
Private	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^pub enum Private {}$/;"	g
Private	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^unsafe impl HasPrivate for Private {}$/;"	c
PropagateVersion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    PropagateVersion,$/;"	e	enum:AppSettings
Proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        Proxy,$/;"	e	enum:socks::DnsResolve
Proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl Proxy {$/;"	c
Proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl fmt::Debug for Proxy {$/;"	c
Proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^pub struct Proxy {$/;"	s
ProxyScheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl IntoProxyScheme for ProxyScheme {$/;"	c
ProxyScheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl ProxyScheme {$/;"	c
ProxyScheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl fmt::Debug for ProxyScheme {$/;"	c
ProxyScheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^pub enum ProxyScheme {$/;"	g
Public	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^pub enum Public {}$/;"	g
Public	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^unsafe impl HasPublic for Public {}$/;"	c
Quoted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^impl Write for Quoted<&mut fmt::Formatter<'_>> {$/;"	c
Quoted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^impl<C> Debug for Quoted<C>$/;"	c
Quoted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^struct Quoted<C>(C);$/;"	s
R	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^impl<R: EventReceiver> MarkedEventReceiver for R {$/;"	c
RENAME_RULES	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^static RENAME_RULES: &[(&str, RenameRule)] = &[$/;"	v
RFC2822	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    RFC2822,$/;"	e	enum:Fixed
RFC3339	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    RFC3339,$/;"	e	enum:Fixed
RFC850_FMT	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    static RFC850_FMT: &'static str = "%A, %d-%b-%y %T GMT";$/;"	v	function:parse_rfc850
ROOT_CERT	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^static ROOT_CERT: &[u8] = include_bytes!("..\/..\/..\/test\/root-ca.pem");$/;"	v
Range	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, Idx> Deserialize<'de> for Range<Idx>$/;"	c
Range	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<Idx> Serialize for Range<Idx>$/;"	c
RangeInclusive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, Idx> Deserialize<'de> for RangeInclusive<Idx>$/;"	c
RangeInclusive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<Idx> Serialize for RangeInclusive<Idx>$/;"	c
RangeVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    impl<'de, Idx> Visitor<'de> for RangeVisitor<Idx>$/;"	c	module:range
RangeVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    pub struct RangeVisitor<Idx> {$/;"	s	module:range
Raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    Raw(String),$/;"	e	enum:Message
Raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    Raw(io::Take<&'a mut dyn io::Read>),$/;"	e	enum:ZipFileReader
RcWeak	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T: ?Sized> Deserialize<'de> for RcWeak<T>$/;"	c
RcWeak	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T: ?Sized> Serialize for RcWeak<T>$/;"	c
Reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    Reader(Box<dyn Read + Send>),$/;"	e	enum:Reader
Reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    Reader(Box<dyn Read + Send>, Option<u64>),$/;"	e	enum:Kind
Reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^impl Read for Reader {$/;"	c
Reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^pub(crate) enum Reader {$/;"	g
Reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^impl Read for Reader {$/;"	c
Reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^impl Reader {$/;"	c
Reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^impl fmt::Debug for Reader {$/;"	c
Reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^pub(crate) struct Reader {$/;"	s
Ready	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^    Ready(SharedResolver),$/;"	e	enum:State
Real	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    Real(string::String),$/;"	e	enum:Yaml
Received	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    Received,$/;"	e	enum:ShutdownResult
Redirect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    Redirect,$/;"	e	enum:Kind
Ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^impl<'a, T> Clone for Ref<'a, T>$/;"	c
Ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^impl<'a, T> Copy for Ref<'a, T> where T: ?Sized {}$/;"	c
Ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^impl<'a, T> Ref<'a, T>$/;"	c
Ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^pub struct Ref<'a, T>$/;"	s
Ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    type Ref = SslCipherRef;$/;"	t	implementation:SslCipher
Ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type Ref = StackRef<T>;$/;"	t	implementation:Stack
RefCell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T> Serialize for RefCell<T>$/;"	c
RefDefs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'input, 'b, 's> RefDefs<'input>$/;"	c
RefDefs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub struct RefDefs<'input>(pub(crate) HashMap<LinkLabel<'input>, LinkDef<'input>>);$/;"	s
RefScan	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^enum RefScan<'a> {$/;"	g
Reference	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Reference,$/;"	e	enum:LinkType
ReferenceLabel	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/linklabel.rs	/^pub(crate) enum ReferenceLabel<'a> {$/;"	g
ReferenceUnknown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    ReferenceUnknown,$/;"	e	enum:LinkType
Regex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    Regex(Cow<'a, Regex>),$/;"	e	enum:RegexRef
RegexRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^impl<'a> From<&'a Regex> for RegexRef<'a> {$/;"	c
RegexRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^impl<'a> From<&'a RegexSet> for RegexRef<'a> {$/;"	c
RegexRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^impl<'a> From<Regex> for RegexRef<'a> {$/;"	c
RegexRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^impl<'a> From<RegexSet> for RegexRef<'a> {$/;"	c
RegexRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^impl<'a> FromStr for RegexRef<'a> {$/;"	c
RegexRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^impl<'a> RegexRef<'a> {$/;"	c
RegexRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^impl<'a> TryFrom<&'a str> for RegexRef<'a> {$/;"	c
RegexRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^pub enum RegexRef<'a> {$/;"	g
RegexSet	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    RegexSet(Cow<'a, RegexSet>),$/;"	e	enum:RegexRef
RegistryProxyValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^type RegistryProxyValues = (u32, String);$/;"	t
RenameAllRules	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^pub struct RenameAllRules {$/;"	s
RenameRule	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^impl RenameRule {$/;"	c
RenameRule	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^pub enum RenameRule {$/;"	g
ReplaceReceiver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^impl ReplaceReceiver<'_> {$/;"	c
ReplaceReceiver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^struct ReplaceReceiver<'a>(&'a TypePath);$/;"	s
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    Request(PendingRequest),$/;"	e	enum:PendingInner
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^impl Request {$/;"	c
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^impl fmt::Debug for Request {$/;"	c
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^impl<T> TryFrom<HttpRequest<T>> for Request$/;"	c
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^pub struct Request {$/;"	s
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^impl Request {$/;"	c
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^impl fmt::Debug for Request {$/;"	c
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^impl<T> TryFrom<HttpRequest<T>> for Request$/;"	c
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^pub struct Request {$/;"	s
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    Request,$/;"	e	enum:Kind
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^impl Request {$/;"	c
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^impl fmt::Debug for Request {$/;"	c
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^impl<T> TryFrom<HttpRequest<T>> for Request$/;"	c
Request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^pub struct Request {$/;"	s
RequestBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^impl RequestBuilder {$/;"	c
RequestBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^impl fmt::Debug for RequestBuilder {$/;"	c
RequestBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^pub struct RequestBuilder {$/;"	s
RequestBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^impl RequestBuilder {$/;"	c
RequestBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^pub struct RequestBuilder {$/;"	s
RequestBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^impl RequestBuilder {$/;"	c
RequestBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^impl fmt::Debug for RequestBuilder {$/;"	c
RequestBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^pub struct RequestBuilder {$/;"	s
RequireDelimiter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    RequireDelimiter,$/;"	e	enum:ArgSettings
RequireEquals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    RequireEquals,$/;"	e	enum:ArgSettings
Required	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    Required,$/;"	e	enum:ArgSettings
Reset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    Reset,$/;"	e	enum:State
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^impl Response {$/;"	c
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^impl fmt::Debug for Response {$/;"	c
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^impl<T: Into<Body>> From<http::Response<T>> for Response {$/;"	c
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^pub struct Response {$/;"	s
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^impl Read for Response {$/;"	c
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^impl Response {$/;"	c
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^impl fmt::Debug for Response {$/;"	c
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^impl<T: Into<async_impl::body::Body>> From<http::Response<T>> for Response {$/;"	c
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^pub struct Response {$/;"	s
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    type Response = <hyper::client::HttpConnector as Service<Uri>>::Response;$/;"	t	implementation:HttpConnector
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    type Response = Conn;$/;"	t	implementation:Connector
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    type Response = itertools::Either<Iter, std::iter::Once<SocketAddr>>;$/;"	t
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^    type Response = SocketAddrs;$/;"	t	implementation:TrustDnsResolver
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^impl Response {$/;"	c
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^impl fmt::Debug for Response {$/;"	c
Response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^pub struct Response {$/;"	s
ResponseBuilderExt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs	/^pub trait ResponseBuilderExt {$/;"	i
ResponseUrl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs	/^pub(crate) struct ResponseUrl(pub Url);$/;"	s
Result	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    impl<T, E> Sealed for Result<T, E> where E: ext::StdError {}$/;"	c	module:private
Result	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^impl<T, E> Context<T, E> for Result<T, E>$/;"	c
Result	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^pub type Result<T, E = Error> = core::result::Result<T, E>;$/;"	t
Result	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^pub type Result<T, E = Error> = StdResult<T, E>;$/;"	t
Result	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^pub type Result<T> = ::std::result::Result<T, Error>;$/;"	t
Result	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub type Result<T> = std::result::Result<T, Error>;$/;"	t
Result	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T, E> Deserialize<'de> for Result<T, E>$/;"	c
Result	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T, E> Serialize for Result<T, E>$/;"	c
Result	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/error.rs	/^impl<T> IoResultExt<T> for Result<T, io::Error> {$/;"	c
ResultVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        impl<'de, T, E> Visitor<'de> for ResultVisitor<T, E>$/;"	c	function:deserialize
ResultVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        struct ResultVisitor<T, E>(PhantomData<Result<T, E>>);$/;"	s	function:deserialize
Retry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Retry,$/;"	e	enum:TransitProcessResult
Reusable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    Reusable(Bytes),$/;"	e	enum:Inner
Reverse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T> Serialize for Reverse<T>$/;"	c
Rfc3339	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    Rfc3339,$/;"	e	enum:Fmt
Right	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Right,$/;"	e	enum:Alignment
Right	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        Right(B),$/;"	e	enum:itertools::Either
Root	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Root,$/;"	e	enum:ItemBody
RoundingError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^impl fmt::Display for RoundingError {$/;"	c
RoundingError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^impl std::error::Error for RoundingError {$/;"	c
RoundingError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^pub enum RoundingError {$/;"	g
Rsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^impl<T> TryFrom<PKey<T>> for Rsa<T> {$/;"	c
Rsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^impl Rsa<Private> {$/;"	c
Rsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^impl Rsa<Public> {$/;"	c
Rsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^impl<T> Clone for Rsa<T> {$/;"	c
Rsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^impl<T> fmt::Debug for Rsa<T> {$/;"	c
RsaPrivateKeyBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^impl RsaPrivateKeyBuilder {$/;"	c
RsaPrivateKeyBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^pub struct RsaPrivateKeyBuilder {$/;"	s
RsaPssSaltlen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^impl RsaPssSaltlen {$/;"	c
RsaPssSaltlen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^pub struct RsaPssSaltlen(c_int);$/;"	s
RsaRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^impl<T> RsaRef<T>$/;"	c
RsaRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^impl<T> ToOwned for RsaRef<T> {$/;"	c
Rule	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Rule,$/;"	e	enum:Event
Rule	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Rule,$/;"	e	enum:ItemBody
Rustls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    Rustls,$/;"	e	enum:TlsBackend
RustlsTls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    RustlsTls {$/;"	e	enum:Inner
RustlsTlsConn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    impl<T: AsyncRead + AsyncWrite + Unpin> AsyncRead for RustlsTlsConn<T> {$/;"	c	module:rustls_tls_conn
RustlsTlsConn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    impl<T: AsyncRead + AsyncWrite + Unpin> AsyncWrite for RustlsTlsConn<T> {$/;"	c	module:rustls_tls_conn
RustlsTlsConn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    impl<T: Connection + AsyncRead + AsyncWrite + Unpin> Connection for RustlsTlsConn<T> {$/;"	c	module:rustls_tls_conn
RwLock	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T> Serialize for RwLock<T>$/;"	c
S	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl<S: IntoUrl> IntoProxyScheme for S {$/;"	c
SCALE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static SCALE: [i64; 10] =$/;"	v	function:nanosecond
SCALE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static SCALE: [i64; 10] =$/;"	v	function:nanosecond_fixed
SERVER_CALLED	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    static SERVER_CALLED: AtomicBool = AtomicBool::new(false);$/;"	v	function:psk_ciphers
SESSION_CTX_INDEX	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^static SESSION_CTX_INDEX: OnceCell<Index<Ssl, SslContext>> = OnceCell::new();$/;"	v
SLASH_ESCAPE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^static SLASH_ESCAPE: &str = "&#x27;";$/;"	v
SOME_FUTURE_DATE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        static SOME_FUTURE_DATE: i64 = i32::MAX as i64; \/\/ Y2038$/;"	v	function:tests::test_get_time
SOME_RECENT_DATE	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        static SOME_RECENT_DATE: i64 = 1577836800i64; \/\/ 2020-01-01T00:00:00Z$/;"	v	function:tests::test_get_time
SSL_INDEXES	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^static SSL_INDEXES: Lazy<Mutex<HashMap<TypeId, c_int>>> = Lazy::new(|| Mutex::new(HashMap::new()/;"	v
ST_BEGIN_TAGS	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    static ST_BEGIN_TAGS: &[&[u8]; 3] = &[b"!--", b"?", b"![CDATA["];$/;"	v	function:get_html_end_tag
Sat	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Sat = 5,$/;"	e	enum:Weekday
Scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    Scalar(String, TScalarStyle, usize, Option<TokenType>),$/;"	e	enum:Event
Scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    Scalar(TScalarStyle, String),$/;"	e	enum:TokenType
Scan	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    Scan,$/;"	e	enum:TableParseMode
ScanError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^impl Error for ScanError {$/;"	c
ScanError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^impl ScanError {$/;"	c
ScanError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^impl fmt::Display for ScanError {$/;"	c
ScanError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^pub struct ScanError {$/;"	s
ScanResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^pub type ScanResult = Result<(), ScanError>;$/;"	t
Scanner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^impl<T: Iterator<Item = char>> Iterator for Scanner<T> {$/;"	c
Scanner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^impl<T: Iterator<Item = char>> Scanner<T> {$/;"	c
Scanner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^pub struct Scanner<T> {$/;"	s
ScreamingKebabCase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    ScreamingKebabCase,$/;"	e	enum:RenameRule
ScreamingSnakeCase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    ScreamingSnakeCase,$/;"	e	enum:RenameRule
Seal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^impl Drop for Seal {$/;"	c
Seal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^impl Seal {$/;"	c
Seal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^pub struct Seal {$/;"	s
Sealed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    pub trait Sealed {}$/;"	i	module:private
Second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Second,$/;"	e	enum:Numeric
Second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        type Second = B;$/;"	t	implementation:private::B
Second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        type Second;$/;"	t	interface:private::Pair
Second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub type Second<T> = <T as Pair>::Second;$/;"	t	module:private
SecondsFormat	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub enum SecondsFormat {$/;"	g
SecondsTimestampVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        impl<'de> de::Visitor<'de> for SecondsTimestampVisitor {$/;"	c	module:serde::ts_seconds
SecondsTimestampVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub struct SecondsTimestampVisitor;$/;"	s	module:serde
Secs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    Secs,$/;"	e	enum:SecondsFormat
Secs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            Secs,$/;"	e	enum:Duration::deserialize::Field
Secs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            Secs,$/;"	e	enum:SystemTime::deserialize::Field
SeedStructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    impl<'de, V> DeserializeSeed<'de> for SeedStructVariant<V>$/;"	c	module:private
SeedStructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    struct SeedStructVariant<V> {$/;"	s	module:private
SeedTupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    impl<'de, V> DeserializeSeed<'de> for SeedTupleVariant<V>$/;"	c	module:private
SeedTupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    struct SeedTupleVariant<V> {$/;"	s	module:private
Sender	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^impl Sender {$/;"	c
Sender	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^pub(crate) struct Sender {$/;"	s
Sent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    Sent,$/;"	e	enum:ShutdownResult
September	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    September = 8,$/;"	e	enum:Month
Seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Seq,$/;"	e	enum:Unexpected
Seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Seq(Vec<Content<'de>>),$/;"	e	enum:content::Content
Seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        Seq(Vec<Content>),$/;"	e	enum:content::Content
SeqAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub trait SeqAccess<'de> {$/;"	i
SeqAccessDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, A> de::Deserializer<'de> for SeqAccessDeserializer<A>$/;"	c
SeqAccessDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<A> SeqAccessDeserializer<A> {$/;"	c
SeqAccessDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct SeqAccessDeserializer<A> {$/;"	s
SeqDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, I, T, E> de::Deserializer<'de> for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, I, T, E> de::SeqAccess<'de> for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<I, E> Debug for SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<I, E> SeqDeserializer<I, E>$/;"	c
SeqDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct SeqDeserializer<I, E> {$/;"	s
SeqDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> de::Deserializer<'de> for SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> de::SeqAccess<'de> for SeqDeserializer<'de, E>$/;"	c	module:content
SeqDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    struct SeqDeserializer<'de, E>$/;"	s	module:content
SeqRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'a, 'de, E> SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, 'a, E> de::Deserializer<'de> for SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, 'a, E> de::SeqAccess<'de> for SeqRefDeserializer<'a, 'de, E>$/;"	c	module:content
SeqRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    struct SeqRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
Sequence	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    Sequence,$/;"	e	enum:Unsupported
SequenceEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    SequenceEnd,$/;"	e	enum:Event
SequenceStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    SequenceStart(usize),$/;"	e	enum:Event
SerAndDe	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^type SerAndDe<T> = (Option<T>, Option<T>);$/;"	t
SerdeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^enum SerdeError<V: fmt::Display, D: fmt::Display> {$/;"	g
SerdeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl<V: fmt::Display, D: fmt::Display> fmt::Debug for SerdeError<V, D> {$/;"	c
SerdeError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl<V: fmt::Display, D: fmt::Display> fmt::Display for SerdeError<V, D> {$/;"	c
Serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for ! {$/;"	c
Serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for () {$/;"	c
Serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^pub trait Serialize {$/;"	i
Serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/mod.rs	/^    Serialize,$/;"	e	enum:Derive
SerializeMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        type SerializeMap = SerializeMap<E>;$/;"	t	module:content
SerializeMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<E> ser::SerializeMap for SerializeMap<E>$/;"	c	module:content
SerializeMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    pub struct SerializeMap<E> {$/;"	s	module:content
SerializeMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeMap = FlatMapSerializeMap<'a, M>;$/;"	t
SerializeMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeMap = S::SerializeMap;$/;"	t
SerializeMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    type SerializeMap = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type SerializeMap: SerializeMap<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^pub trait SerializeMap {$/;"	i
SerializeMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    SerializeMap,$/;"	e	enum:StructTrait
SerializeSeq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        type SerializeSeq = SerializeSeq<E>;$/;"	t	module:content
SerializeSeq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<E> ser::SerializeSeq for SerializeSeq<E>$/;"	c	module:content
SerializeSeq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    pub struct SerializeSeq<E> {$/;"	s	module:content
SerializeSeq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeSeq = Impossible<S::Ok, S::Error>;$/;"	t
SerializeSeq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeSeq = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeSeq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    type SerializeSeq = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeSeq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type SerializeSeq: SerializeSeq<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeSeq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^pub trait SerializeSeq {$/;"	i
SerializeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        type SerializeStruct = SerializeStruct<E>;$/;"	t	module:content
SerializeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<E> ser::SerializeStruct for SerializeStruct<E>$/;"	c	module:content
SerializeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    pub struct SerializeStruct<E> {$/;"	s	module:content
SerializeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeStruct = FlatMapSerializeStruct<'a, M>;$/;"	t
SerializeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeStruct = S::SerializeStruct;$/;"	t
SerializeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    type SerializeStruct = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type SerializeStruct: SerializeStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^pub trait SerializeStruct {$/;"	i
SerializeStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    SerializeStruct,$/;"	e	enum:StructTrait
SerializeStructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        type SerializeStructVariant = SerializeStructVariant<E>;$/;"	t	module:content
SerializeStructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<E> ser::SerializeStructVariant for SerializeStructVariant<E>$/;"	c	module:content
SerializeStructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    pub struct SerializeStructVariant<E> {$/;"	s	module:content
SerializeStructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeStructVariant = FlatMapSerializeStructVariantAsMapValue<'a, M>;$/;"	t
SerializeStructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeStructVariant = Impossible<S::Ok, S::Error>;$/;"	t
SerializeStructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeStructVariant = SerializeStructVariantAsMapValue<S::SerializeMap>;$/;"	t
SerializeStructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    type SerializeStructVariant = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeStructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type SerializeStructVariant: SerializeStructVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeStructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^pub trait SerializeStructVariant {$/;"	i
SerializeStructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    SerializeStructVariant,$/;"	e	enum:StructTrait
SerializeStructVariantAsMapValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<M> SerializeStructVariantAsMapValue<M> {$/;"	c	module:content
SerializeStructVariantAsMapValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<M> ser::SerializeStructVariant for SerializeStructVariantAsMapValue<M>$/;"	c	module:content
SerializeStructVariantAsMapValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    pub struct SerializeStructVariantAsMapValue<M> {$/;"	s	module:content
SerializeTuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        type SerializeTuple = SerializeTuple<E>;$/;"	t	module:content
SerializeTuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<E> ser::SerializeTuple for SerializeTuple<E>$/;"	c	module:content
SerializeTuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    pub struct SerializeTuple<E> {$/;"	s	module:content
SerializeTuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeTuple = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeTuple = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    type SerializeTuple = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type SerializeTuple: SerializeTuple<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^pub trait SerializeTuple {$/;"	i
SerializeTuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    SerializeTuple,$/;"	e	enum:TupleTrait
SerializeTupleStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        type SerializeTupleStruct = SerializeTupleStruct<E>;$/;"	t	module:content
SerializeTupleStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<E> ser::SerializeTupleStruct for SerializeTupleStruct<E>$/;"	c	module:content
SerializeTupleStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    pub struct SerializeTupleStruct<E> {$/;"	s	module:content
SerializeTupleStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTupleStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeTupleStruct = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTupleStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    type SerializeTupleStruct = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTupleStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type SerializeTupleStruct: SerializeTupleStruct<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTupleStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^pub trait SerializeTupleStruct {$/;"	i
SerializeTupleStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    SerializeTupleStruct,$/;"	e	enum:TupleTrait
SerializeTupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        type SerializeTupleVariant = SerializeTupleVariant<E>;$/;"	t	module:content
SerializeTupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<E> ser::SerializeTupleVariant for SerializeTupleVariant<E>$/;"	c	module:content
SerializeTupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    pub struct SerializeTupleVariant<E> {$/;"	s	module:content
SerializeTupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<S::Ok, S::Error>;$/;"	t
SerializeTupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeTupleVariant = Impossible<Self::Ok, M::Error>;$/;"	t
SerializeTupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type SerializeTupleVariant = SerializeTupleVariantAsMapValue<S::SerializeMap>;$/;"	t
SerializeTupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    type SerializeTupleVariant = Impossible<(), fmt::Error>;$/;"	t	implementation:Formatter
SerializeTupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    type SerializeTupleVariant: SerializeTupleVariant<Ok = Self::Ok, Error = Self::Error>;$/;"	t	interface:Serializer
SerializeTupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^pub trait SerializeTupleVariant {$/;"	i
SerializeTupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    SerializeTupleVariant,$/;"	e	enum:TupleTrait
SerializeTupleVariantAsMapValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<M> SerializeTupleVariantAsMapValue<M> {$/;"	c	module:content
SerializeTupleVariantAsMapValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    impl<M> ser::SerializeTupleVariant for SerializeTupleVariantAsMapValue<M>$/;"	c	module:content
SerializeTupleVariantAsMapValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    pub struct SerializeTupleVariantAsMapValue<M> {$/;"	s	module:content
Serializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^pub trait Serializer: Sized {$/;"	i
Server	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^impl Drop for Server {$/;"	c
Server	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^impl Server {$/;"	c
Server	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^pub struct Server {$/;"	s
Setter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^                type Setter = fn(&mut Parsed, i64) -> ParseResult<()>;$/;"	t	function:parse_internal
SetupFailure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    SetupFailure(ErrorStack),$/;"	e	enum:HandshakeError
SharedResolver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^type SharedResolver = Arc<AsyncResolver<TokioConnection, TokioConnectionProvider>>;$/;"	t
Shell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^impl ArgEnum for Shell {$/;"	c
Shell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^impl Display for Shell {$/;"	c
Shell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^impl FromStr for Shell {$/;"	c
Shell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^impl Generator for Shell {$/;"	c
Shell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^impl Shell {$/;"	c
Shell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^pub enum Shell {$/;"	g
Shell	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^impl Shell {$/;"	c
Shell	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^pub enum Shell {$/;"	g
Short	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    Short,$/;"	e	enum:UsageToken
Short	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    Short(char),$/;"	e	enum:KeyType
ShortMonthName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    ShortMonthName,$/;"	e	enum:Fixed
ShortWeekdayName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    ShortWeekdayName,$/;"	e	enum:Fixed
Shortcut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Shortcut,$/;"	e	enum:LinkType
ShortcutUnknown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    ShortcutUnknown,$/;"	e	enum:LinkType
ShutdownResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub enum ShutdownResult {$/;"	g
SignatureAlgorithms	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^pub struct SignatureAlgorithms {$/;"	s
Signed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Signed(i64),$/;"	e	enum:Unexpected
Signer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^impl<'a> Drop for Signer<'a> {$/;"	c
Signer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^impl<'a> Signer<'a> {$/;"	c
Signer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^impl<'a> Write for Signer<'a> {$/;"	c
Signer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^pub struct Signer<'a> {$/;"	s
Signer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^unsafe impl<'a> Send for Signer<'a> {}$/;"	c
Signer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^unsafe impl<'a> Sync for Signer<'a> {}$/;"	c
SimpleKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^impl SimpleKey {$/;"	c
SimpleKey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^struct SimpleKey {$/;"	s
Single	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    Single(T),$/;"	e	enum:LocalResult
SingleQuoted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    SingleQuoted,$/;"	e	enum:TScalarStyle
Site	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^impl Site {$/;"	c
Site	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^pub struct Site {$/;"	s
Size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Size,$/;"	e	enum:DirEntryAttr
Skip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    Skip,$/;"	e	enum:TransitProcessResult
SkipAll	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    SkipAll,$/;"	e	enum:TransitProcessResult
SnakeCase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    SnakeCase,$/;"	e	enum:RenameRule
SniError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl SniError {$/;"	c
SniError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct SniError(c_int);$/;"	s
SocketAddr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Deserialize<'de> for net::SocketAddr {$/;"	c
SocketAddr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for net::SocketAddr {$/;"	c
SocketAddrV4	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for net::SocketAddrV4 {$/;"	c
SocketAddrV6	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for net::SocketAddrV6 {$/;"	c
SocketAddrs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^impl Iterator for SocketAddrs {$/;"	c
SocketAddrs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^pub(crate) struct SocketAddrs {$/;"	s
Socks5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    Socks5 {$/;"	e	enum:ProxyScheme
SoftBreak	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    SoftBreak,$/;"	e	enum:Event
SoftBreak	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    SoftBreak,$/;"	e	enum:ItemBody
Some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Some(Box<Content<'de>>),$/;"	e	enum:content::Content
Some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        Some(Box<Content>),$/;"	e	enum:content::Content
Space	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Space(&'a str),$/;"	e	enum:Item
Space	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Space,$/;"	e	enum:Pad
SpooledData	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^pub enum SpooledData {$/;"	g
SpooledTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^impl Read for SpooledTempFile {$/;"	c
SpooledTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^impl Seek for SpooledTempFile {$/;"	c
SpooledTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^impl SpooledTempFile {$/;"	c
SpooledTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^impl Write for SpooledTempFile {$/;"	c
SpooledTempFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^pub struct SpooledTempFile {$/;"	s
SrtpProfileId	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/srtp.rs	/^impl SrtpProfileId {$/;"	c
SrtpProfileId	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/srtp.rs	/^pub struct SrtpProfileId(c_ulong);$/;"	s
SrtpProtectionProfile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/srtp.rs	/^impl Stackable for SrtpProtectionProfile {$/;"	c
SrtpProtectionProfileRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/srtp.rs	/^impl SrtpProtectionProfileRef {$/;"	c
Ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    Ssl(ErrorStack),$/;"	e	enum:InnerError
Ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl Ssl {$/;"	c
Ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl fmt::Debug for Ssl {$/;"	c
SslAcceptor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^impl SslAcceptor {$/;"	c
SslAcceptor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^pub struct SslAcceptor(SslContext);$/;"	s
SslAcceptorBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^impl Deref for SslAcceptorBuilder {$/;"	c
SslAcceptorBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^impl DerefMut for SslAcceptorBuilder {$/;"	c
SslAcceptorBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^impl SslAcceptorBuilder {$/;"	c
SslAcceptorBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^pub struct SslAcceptorBuilder(SslContextBuilder);$/;"	s
SslAlert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl SslAlert {$/;"	c
SslAlert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct SslAlert(c_int);$/;"	s
SslCipher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl Deref for SslCipher {$/;"	c
SslCipher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl DerefMut for SslCipher {$/;"	c
SslCipher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl ForeignType for SslCipher {$/;"	c
SslCipher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct SslCipher(*mut ffi::SSL_CIPHER);$/;"	s
SslCipherRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl ForeignTypeRef for SslCipherRef {$/;"	c
SslCipherRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl SslCipherRef {$/;"	c
SslCipherRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct SslCipherRef(Opaque);$/;"	s
SslConnector	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^impl SslConnector {$/;"	c
SslConnector	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^pub struct SslConnector(SslContext);$/;"	s
SslConnectorBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^impl Deref for SslConnectorBuilder {$/;"	c
SslConnectorBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^impl DerefMut for SslConnectorBuilder {$/;"	c
SslConnectorBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^impl SslConnectorBuilder {$/;"	c
SslConnectorBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^pub struct SslConnectorBuilder(SslContextBuilder);$/;"	s
SslContext	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl Clone for SslContext {$/;"	c
SslContext	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl SslContext {$/;"	c
SslContext	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl fmt::Debug for SslContext {$/;"	c
SslContextBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl SslContextBuilder {$/;"	c
SslContextBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct SslContextBuilder(SslContext);$/;"	s
SslContextRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl SslContextRef {$/;"	c
SslContextRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl ToOwned for SslContextRef {$/;"	c
SslFiletype	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl SslFiletype {$/;"	c
SslFiletype	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct SslFiletype(c_int);$/;"	s
SslMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl SslMethod {$/;"	c
SslMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct SslMethod(*const ffi::SSL_METHOD);$/;"	s
SslMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^unsafe impl Send for SslMethod {}$/;"	c
SslMethod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^unsafe impl Sync for SslMethod {}$/;"	c
SslRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl SslRef {$/;"	c
SslRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl fmt::Debug for SslRef {$/;"	c
SslSession	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl Clone for SslSession {$/;"	c
SslSession	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl SslSession {$/;"	c
SslSessionRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl SslSessionRef {$/;"	c
SslSessionRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl ToOwned for SslSessionRef {$/;"	c
SslStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl<S: Read + Write> Read for SslStream<S> {$/;"	c
SslStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl<S: Read + Write> SslStream<S> {$/;"	c
SslStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl<S: Read + Write> Write for SslStream<S> {$/;"	c
SslStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl<S> Drop for SslStream<S> {$/;"	c
SslStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl<S> SslStream<S> {$/;"	c
SslStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl<S> fmt::Debug for SslStream<S>$/;"	c
SslStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct SslStream<S> {$/;"	s
SslStreamBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl<S> SslStreamBuilder<S> {$/;"	c
SslStreamBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl<S> SslStreamBuilder<S>$/;"	c
SslStreamBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct SslStreamBuilder<S> {$/;"	s
SslVersion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl SslVersion {$/;"	c
SslVersion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct SslVersion(c_int);$/;"	s
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<'a, T: Stackable> iter::IntoIterator for &'a Stack<T> {$/;"	c
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<'a, T: Stackable> iter::IntoIterator for &'a mut Stack<T> {$/;"	c
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> AsRef<StackRef<T>> for Stack<T> {$/;"	c
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> Borrow<StackRef<T>> for Stack<T> {$/;"	c
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> Deref for Stack<T> {$/;"	c
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> DerefMut for Stack<T> {$/;"	c
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> Drop for Stack<T> {$/;"	c
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> ForeignType for Stack<T> {$/;"	c
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> Stack<T> {$/;"	c
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> iter::IntoIterator for Stack<T> {$/;"	c
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T> fmt::Debug for Stack<T>$/;"	c
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^pub struct Stack<T: Stackable>(*mut T::StackType);$/;"	s
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^unsafe impl<T: Stackable + Send> Send for Stack<T> {}$/;"	c
Stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^unsafe impl<T: Stackable + Sync> Sync for Stack<T> {}$/;"	c
StackRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<'a, T: Stackable> iter::IntoIterator for &'a StackRef<T> {$/;"	c
StackRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<'a, T: Stackable> iter::IntoIterator for &'a mut StackRef<T> {$/;"	c
StackRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> ForeignTypeRef for StackRef<T> {$/;"	c
StackRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> Index<usize> for StackRef<T> {$/;"	c
StackRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> IndexMut<usize> for StackRef<T> {$/;"	c
StackRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^impl<T: Stackable> StackRef<T> {$/;"	c
StackRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^pub struct StackRef<T: Stackable>(Opaque, PhantomData<T>);$/;"	s
StackRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^unsafe impl<T: Stackable + Send> Send for StackRef<T> {}$/;"	c
StackRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^unsafe impl<T: Stackable + Sync> Sync for StackRef<T> {}$/;"	c
StackType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/srtp.rs	/^    type StackType = ffi::stack_st_SRTP_PROTECTION_PROFILE;$/;"	t	implementation:SrtpProtectionProfile
StackType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type StackType;$/;"	t	interface:Stackable
StackType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^    type StackType = ffi::stack_st_OPENSSL_STRING;$/;"	t	implementation:OpensslString
StackType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    type StackType = ffi::stack_st_ACCESS_DESCRIPTION;$/;"	t	implementation:AccessDescription
StackType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    type StackType = ffi::stack_st_GENERAL_NAME;$/;"	t	implementation:GeneralName
StackType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    type StackType = ffi::stack_st_X509;$/;"	t	implementation:X509
StackType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    type StackType = ffi::stack_st_X509_EXTENSION;$/;"	t	implementation:X509Extension
StackType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    type StackType = ffi::stack_st_X509_NAME;$/;"	t	implementation:X509Name
StackType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    type StackType = ffi::stack_st_X509_OBJECT;$/;"	t	implementation:X509Object
Stackable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^pub trait Stackable: ForeignType {$/;"	i
Start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Start(Tag<'a>),$/;"	e	enum:Event
Start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        Start,$/;"	e	enum:range::Field
State	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^enum State {$/;"	g
State	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^enum State {$/;"	g
State	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^enum State {$/;"	g
Static	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    Static,$/;"	e	enum:BorrowedLifetimes
Status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    Status(StatusCode),$/;"	e	enum:Kind
StatusType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^impl StatusType {$/;"	c
StatusType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub struct StatusType(c_int);$/;"	s
StdError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    pub trait StdError {$/;"	i	module:ext
StdError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^trait StdError: Debug + Display {$/;"	i
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Add<Duration> for SteadyTime {$/;"	c
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl SteadyTime {$/;"	c
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Sub for SteadyTime {$/;"	c
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Sub<Duration> for SteadyTime {$/;"	c
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl fmt::Display for SteadyTime {$/;"	c
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct SteadyTime(sys::SteadyTime);$/;"	s
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Add<Duration> for SteadyTime {$/;"	c	module:inner::mac
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Add<Duration> for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Clone for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Eq for SteadyTime {}$/;"	c	module:inner::unix
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Ord for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl PartialEq for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl PartialOrd for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl SteadyTime {$/;"	c	module:inner::mac
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Sub for SteadyTime {$/;"	c	module:inner::mac
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Sub for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Sub<Duration> for SteadyTime {$/;"	c	module:inner::mac
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl Sub<Duration> for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        impl fmt::Debug for SteadyTime {$/;"	c	module:inner::unix
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub struct SteadyTime { t: u64 }$/;"	s	module:inner::mac
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub struct SteadyTime {$/;"	s	module:inner::unix
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    impl Add<Duration> for SteadyTime {$/;"	c	module:inner
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    impl SteadyTime {$/;"	c	module:inner
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    impl Sub for SteadyTime {$/;"	c	module:inner
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    impl Sub<Duration> for SteadyTime {$/;"	c	module:inner
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub struct SteadyTime {$/;"	s	module:inner
SteadyTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub struct SteadyTime;$/;"	s	module:inner
Stmts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^impl ToTokens for Stmts {$/;"	c
Stmts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^pub struct Stmts(pub Fragment);$/;"	s
Stop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    Stop,$/;"	e	enum:ActionKind
Stored	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^    Stored,$/;"	e	enum:CompressionMethod
Stored	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    Stored(Crc32Reader<CryptoReader<'a>>),$/;"	e	enum:ZipFileReader
Storer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    Storer(W),$/;"	e	enum:GenericZipWriter
Str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Str(&'a str),$/;"	e	enum:Unexpected
Str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Str(&'de str),$/;"	e	enum:content::Content
Str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    Str(&'a str),$/;"	e	enum:Fmt
StrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'a, E> Debug for StrDeserializer<'a, E> {$/;"	c
StrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, 'a, E> de::Deserializer<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'de, 'a, E> Deserializer<'de> for StrDeserializer<'a, E>$/;"	c
StrDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^pub struct StrDeserializer<'a, E> {$/;"	s
StrVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'a> Visitor<'a> for StrVisitor {$/;"	c
StrVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct StrVisitor;$/;"	s
StrWrite	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^pub trait StrWrite {$/;"	i
StreamEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    StreamEnd,$/;"	e	enum:Event
StreamEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    StreamEnd,$/;"	e	enum:TokenType
StreamStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    StreamStart,$/;"	e	enum:Event
StreamStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    StreamStart,$/;"	e	enum:State
StreamStart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    StreamStart(TEncoding),$/;"	e	enum:TokenType
StreamState	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^pub struct StreamState<S> {$/;"	s
Streaming	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    Streaming {$/;"	e	enum:Inner
StrftimeItems	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^impl<'a> Iterator for StrftimeItems<'a> {$/;"	c
StrftimeItems	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^impl<'a> StrftimeItems<'a> {$/;"	c
StrftimeItems	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^pub struct StrftimeItems<'a> {$/;"	s
StrictUtf8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    StrictUtf8,$/;"	e	enum:AppSettings
Strikethrough	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Strikethrough,$/;"	e	enum:Tag
Strikethrough	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Strikethrough,$/;"	e	enum:ItemBody
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    String(String),$/;"	e	enum:ContextValue
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    String(String),$/;"	e	enum:DirEntryValue
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^impl<'w> StrWrite for String {$/;"	c
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^impl IntoUrl for String {}$/;"	c
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^impl<'a> IntoUrl for &'a String {}$/;"	c
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^impl<'a> IntoUrlSealed for &'a String {$/;"	c
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^impl<'a> IntoUrlSealed for String {$/;"	c
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Deserialize<'de> for String {$/;"	c
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for String$/;"	c
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        String(String),$/;"	e	enum:content::Content
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        String(String),$/;"	e	enum:content::Content
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    String,$/;"	e	enum:Unsupported
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for String {$/;"	c
String	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    String(string::String),$/;"	e	enum:Yaml
StringDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, 'a, E> de::EnumAccess<'de> for StringDeserializer<E>$/;"	c
StringDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for StringDeserializer<E>$/;"	c
StringDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<E> Clone for StringDeserializer<E> {$/;"	c
StringDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<E> Debug for StringDeserializer<E> {$/;"	c
StringDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct StringDeserializer<E> {$/;"	s
StringInPlaceVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'a, 'de> Visitor<'de> for StringInPlaceVisitor<'a> {$/;"	c
StringInPlaceVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct StringInPlaceVisitor<'a>(&'a mut String);$/;"	s
StringTooLongError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^pub struct StringTooLongError;$/;"	s
StringVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Visitor<'de> for StringVisitor {$/;"	c
StringVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct StringVisitor;$/;"	s
Strings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    Strings(Vec<String>),$/;"	e	enum:ContextValue
StripPrefix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    StripPrefix(StripPrefixError),$/;"	e	enum:ErrorKind
Strong	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Strong,$/;"	e	enum:Tag
Strong	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Strong,$/;"	e	enum:ItemBody
Struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        Struct(&'static str, Vec<(&'static str, Content)>),$/;"	e	enum:content::Content
Struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    Struct(Style, Vec<Field<'a>>),$/;"	e	enum:Data
Struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    Struct,$/;"	e	enum:Style
StructTrait	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^enum StructTrait {$/;"	g
StructTrait	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^impl StructTrait {$/;"	c
StructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    StructVariant,$/;"	e	enum:Unexpected
StructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        StructVariant($/;"	e	enum:content::Content
StructVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^enum StructVariant<'a> {$/;"	g
Style	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^impl Default for Style {$/;"	c
Style	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^pub enum Style {$/;"	g
Style	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^pub enum Style {$/;"	g
SubCommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/lib.rs	/^impl SubCommand {$/;"	c
SubCommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/lib.rs	/^pub struct SubCommand {}$/;"	s
SubCommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^pub(crate) struct SubCommand {$/;"	s
Subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^pub trait Subcommand: FromArgMatches + Sized {$/;"	i
SubcommandPrecedenceOverArg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    SubcommandPrecedenceOverArg,$/;"	e	enum:AppSettings
SubcommandRequired	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    SubcommandRequired,$/;"	e	enum:AppSettings
SubcommandRequiredElseHelp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    SubcommandRequiredElseHelp,$/;"	e	enum:AppSettings
SubcommandsNegateReqs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    SubcommandsNegateReqs,$/;"	e	enum:AppSettings
SubjectAlternativeName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^impl Default for SubjectAlternativeName {$/;"	c
SubjectAlternativeName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^impl SubjectAlternativeName {$/;"	c
SubjectAlternativeName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^pub struct SubjectAlternativeName {$/;"	s
SubjectKeyIdentifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^impl Default for SubjectKeyIdentifier {$/;"	c
SubjectKeyIdentifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^impl SubjectKeyIdentifier {$/;"	c
SubjectKeyIdentifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^pub struct SubjectKeyIdentifier {$/;"	s
SubsecRound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^pub trait SubsecRound {$/;"	i
SuggestedArg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    SuggestedArg,$/;"	e	enum:ContextKind
SuggestedCommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    SuggestedCommand,$/;"	e	enum:ContextKind
SuggestedSubcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    SuggestedSubcommand,$/;"	e	enum:ContextKind
SuggestedValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    SuggestedValue,$/;"	e	enum:ContextKind
Sun	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Sun = 6,$/;"	e	enum:Weekday
Symbol	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/symbol.rs	/^impl Display for Symbol {$/;"	c
Symbol	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/symbol.rs	/^pub struct Symbol(&'static str);$/;"	s
SynthesizeChar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    SynthesizeChar(char),$/;"	e	enum:ItemBody
SynthesizeText	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    SynthesizeText(CowIndex),$/;"	e	enum:ItemBody
System	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    System(Arc<SystemProxyMap>),$/;"	e	enum:Intercept
System	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^impl System {$/;"	c
System	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^pub enum System {$/;"	g
SystemProxyMap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^type SystemProxyMap = HashMap<String, ProxyScheme>;$/;"	t
SystemTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^impl<Tz: TimeZone> From<DateTime<Tz>> for SystemTime {$/;"	c
SystemTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    SystemTime(SystemTime),$/;"	e	enum:DirEntryValue
SystemTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Deserialize<'de> for SystemTime {$/;"	c
SystemTime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for SystemTime {$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^impl<T> AdhocKind for &T where T: ?Sized + Display + Debug + Send + Sync + 'static {}$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^impl<T> CastTo for T {$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^impl<T> SubsecRound for T$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^impl<'a, T> Captures<'a> for T {}$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/fnv.rs	/^impl<T> Key for T$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^unsafe impl<T> HasParams for T where T: HasPublic {}$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^unsafe impl<T> HasPublic for T where T: HasPrivate {}$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^impl<T: AsyncRead + AsyncWrite + Connection + Send + Sync + Unpin + 'static> AsyncConn for T {}$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for [T; 0] {$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^impl<'de, T> Expected for T$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^impl<T> DeserializeOwned for T where T: for<'de> Deserialize<'de> {}$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/lib.rs	/^    pub struct T;$/;"	s	module:actually_private
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T> Serialize for [T; 0] {$/;"	c
T	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T> Serialize for [T]$/;"	c
TEncoding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^pub enum TEncoding {$/;"	g
TScalarStyle	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^pub enum TScalarStyle {$/;"	g
TUNNEL_OK	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    static TUNNEL_OK: &[u8] = b"\\$/;"	v	module:tests
TUNNEL_UA	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    static TUNNEL_UA: &str = "tunnel-test\/x.y";$/;"	v	module:tests
T_FMT	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^static T_FMT: &'static [Item<'static>] =$/;"	v
Table	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Table(Vec<Alignment>),$/;"	e	enum:Tag
Table	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Table(AlignmentIndex),$/;"	e	enum:ItemBody
TableCell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    TableCell,$/;"	e	enum:Tag
TableCell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    TableCell,$/;"	e	enum:ItemBody
TableHead	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    TableHead,$/;"	e	enum:Tag
TableHead	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    TableHead,$/;"	e	enum:ItemBody
TableParseMode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^enum TableParseMode {$/;"	g
TableRow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    TableRow,$/;"	e	enum:Tag
TableRow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    TableRow,$/;"	e	enum:ItemBody
TableState	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^enum TableState {$/;"	g
Tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^pub enum Tag<'a> {$/;"	g
Tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagContentOtherField
Tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagOrContent
Tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Tag,$/;"	e	enum:content::TagOrContentField
Tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    Tag(String, String),$/;"	e	enum:TokenType
TagContentOtherField	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub enum TagContentOtherField {$/;"	g	module:content
TagContentOtherFieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagContentOtherFieldVisitor {$/;"	c	module:content
TagContentOtherFieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagContentOtherFieldVisitor {$/;"	c	module:content
TagContentOtherFieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub struct TagContentOtherFieldVisitor {$/;"	s	module:content
TagDirective	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    TagDirective(String, String),$/;"	e	enum:TokenType
TagOrContent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub enum TagOrContent<'de> {$/;"	g	module:content
TagOrContentField	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub enum TagOrContentField {$/;"	g	module:content
TagOrContentFieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagOrContentFieldVisitor {$/;"	c	module:content
TagOrContentFieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagOrContentFieldVisitor {$/;"	c	module:content
TagOrContentFieldVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub struct TagOrContentFieldVisitor {$/;"	s	module:content
TagOrContentVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de> DeserializeSeed<'de> for TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de> TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de> Visitor<'de> for TagOrContentVisitor<'de> {$/;"	c	module:content
TagOrContentVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    struct TagOrContentVisitor<'de> {$/;"	s	module:content
TagType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^pub enum TagType {$/;"	g
TaggedContent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub struct TaggedContent<'de, T> {$/;"	s	module:content
TaggedContentVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, T> DeserializeSeed<'de> for TaggedContentVisitor<'de, T>$/;"	c	module:content
TaggedContentVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, T> TaggedContentVisitor<'de, T> {$/;"	c	module:content
TaggedContentVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, T> Visitor<'de> for TaggedContentVisitor<'de, T>$/;"	c	module:content
TaggedContentVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub struct TaggedContentVisitor<'de, T> {$/;"	s	module:content
TaggedSerializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^impl<S> Serializer for TaggedSerializer<S>$/;"	c
TaggedSerializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^impl<S> TaggedSerializer<S>$/;"	c
TaggedSerializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^struct TaggedSerializer<S> {$/;"	s
TakesValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    TakesValue,$/;"	e	enum:ArgSettings
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    type Target = dyn StdError + Send + Sync + 'static;$/;"	t	implementation:Error
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    type Target = T;$/;"	t	implementation:T
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    type Target;$/;"	t	interface:CastTo
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        type Target = DateTime<Tz>;$/;"	t	implementation:rustc_serialize::TsSeconds
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        type Target = NaiveDateTime;$/;"	t	implementation:rustc_serialize::TsSeconds
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    type Target = ArgMatches;$/;"	t	implementation:ArgMatcher
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^    type Target = u64;$/;"	t	implementation:Id
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    type Target = [u8];$/;"	t	implementation:DigestBytes
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    type Target = SslContextBuilder;$/;"	t	implementation:SslAcceptorBuilder
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    type Target = SslContextBuilder;$/;"	t	implementation:SslConnectorBuilder
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    type Target = SslRef;$/;"	t	implementation:ConnectConfiguration
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    type Target = SslCipherRef;$/;"	t	implementation:SslCipher
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        type Target = [u8];$/;"	t	implementation:stateless::Outgoing
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    type Target = StackRef<T>;$/;"	t	implementation:Stack
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^    type Target = str;$/;"	t	implementation:OpensslStringRef
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    type Target = str;$/;"	t	implementation:CowStr
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    type Target = str;$/;"	t	implementation:InlineStr
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    type Target = Path;$/;"	t	implementation:TempPath
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^    type Target = ::std::borrow::Cow<'a, str>;$/;"	t	implementation:u8
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^    type Target = String;$/;"	t	implementation:Vec
Target	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^    type Target;$/;"	t	interface:FromCp437
TaskListMarker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    TaskListMarker(bool),$/;"	e	enum:Event
TaskListMarker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    TaskListMarker(bool), \/\/ true for checked$/;"	e	enum:ItemBody
TempDir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^impl AsRef<Path> for TempDir {$/;"	c
TempDir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^impl Drop for TempDir {$/;"	c
TempDir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^impl TempDir {$/;"	c
TempDir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^impl fmt::Debug for TempDir {$/;"	c
TempDir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^pub struct TempDir {$/;"	s
TempPath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl AsRef<OsStr> for TempPath {$/;"	c
TempPath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl AsRef<Path> for TempPath {$/;"	c
TempPath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl Deref for TempPath {$/;"	c
TempPath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl Drop for TempPath {$/;"	c
TempPath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl From<PathPersistError> for TempPath {$/;"	c
TempPath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl TempPath {$/;"	c
TempPath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^impl fmt::Debug for TempPath {$/;"	c
TempPath	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^pub struct TempPath {$/;"	s
Test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        struct Test {$/;"	s	function:serde::test_serde_bincode_optional
Text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    Text(CowStr<'a>),$/;"	e	enum:Event
Text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    Text,$/;"	e	enum:ItemBody
ThreadSender	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^type ThreadSender = mpsc::UnboundedSender<(async_impl::Request, OneshotResponse)>;$/;"	t
ThreadWaker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/wait.rs	/^impl futures_util::task::ArcWake for ThreadWaker {$/;"	c
ThreadWaker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/wait.rs	/^struct ThreadWaker(Thread);$/;"	s
Thu	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Thu = 3,$/;"	e	enum:Weekday
TimeDiff	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^pub struct TimeDiff {$/;"	s
TimeZone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^pub trait TimeZone: Sized + Clone {$/;"	i
TimedOut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/wait.rs	/^    TimedOut(crate::error::TimedOut),$/;"	e	enum:Waited
TimedOut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^impl StdError for TimedOut {}$/;"	c
TimedOut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^impl fmt::Display for TimedOut {$/;"	c
TimedOut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub(crate) struct TimedOut;$/;"	s
Timelike	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub trait Timelike: Sized {$/;"	i
Timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^impl Default for Timeout {$/;"	c
Timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^struct Timeout(Option<Duration>);$/;"	s
Timespec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^impl Timespec {$/;"	c
Timespec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^pub struct Timespec {$/;"	s
Timespec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Add<Duration> for Timespec {$/;"	c
Timespec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Sub<Duration> for Timespec {$/;"	c
Timespec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Sub<Timespec> for Timespec {$/;"	c
Timespec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Timespec {$/;"	c
Timespec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct Timespec { pub sec: i64, pub nsec: i32 }$/;"	s
Timestamp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Timestamp,$/;"	e	enum:Numeric
TimestampExceedsLimit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    TimestampExceedsLimit,$/;"	e	enum:RoundingError
TimezoneName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TimezoneName,$/;"	e	enum:Fixed
TimezoneOffset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TimezoneOffset,$/;"	e	enum:Fixed
TimezoneOffsetColon	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TimezoneOffsetColon,$/;"	e	enum:Fixed
TimezoneOffsetColonZ	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TimezoneOffsetColonZ,$/;"	e	enum:Fixed
TimezoneOffsetPermissive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TimezoneOffsetPermissive,$/;"	e	enum:InternalInternal
TimezoneOffsetZ	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TimezoneOffsetZ,$/;"	e	enum:Fixed
Tls1_0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    Tls1_0,$/;"	e	enum:InnerVersion
Tls1_1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    Tls1_1,$/;"	e	enum:InnerVersion
Tls1_2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    Tls1_2,$/;"	e	enum:InnerVersion
Tls1_3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    Tls1_3,$/;"	e	enum:InnerVersion
TlsBackend	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^impl Default for TlsBackend {$/;"	c
TlsBackend	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^impl fmt::Debug for TlsBackend {$/;"	c
TlsBackend	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^pub(crate) enum TlsBackend {$/;"	g
Tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^impl Tm {$/;"	c
Tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^pub struct Tm {$/;"	s
Tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Add<Duration> for Tm {$/;"	c
Tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Ord for Tm {$/;"	c
Tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl PartialOrd for Tm {$/;"	c
Tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Sub<Duration> for Tm {$/;"	c
Tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Sub<Tm> for Tm {$/;"	c
Tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^impl Tm {$/;"	c
Tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct Tm {$/;"	s
TmFmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^impl<'a> fmt::Display for TmFmt<'a> {$/;"	c
TmFmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct TmFmt<'a> {$/;"	s
Token	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^pub struct Token(pub Marker, pub TokenType);$/;"	s
TokenType	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^pub enum TokenType {$/;"	g
TooFewValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    TooFewValues,$/;"	e	enum:ErrorKind
TooLong	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TooLong,$/;"	e	enum:ParseErrorKind
TooManyOccurrences	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    TooManyOccurrences,$/;"	e	enum:ErrorKind
TooManyRedirects	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^impl StdError for TooManyRedirects {}$/;"	c
TooManyRedirects	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^impl fmt::Display for TooManyRedirects {$/;"	c
TooManyRedirects	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^struct TooManyRedirects;$/;"	s
TooManyValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    TooManyValues,$/;"	e	enum:ErrorKind
TooShort	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    TooShort,$/;"	e	enum:ParseErrorKind
TrailingArg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    TrailingArg,$/;"	e	enum:ContextKind
TrailingVarArg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    TrailingVarArg,$/;"	e	enum:AppSettings
Trait	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^impl Trait {$/;"	c
Trait	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^pub struct Trait;$/;"	s
TraitKind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^pub trait TraitKind: Sized {$/;"	i
TransitProcess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^impl Clone for TransitProcess {$/;"	c
TransitProcess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub struct TransitProcess {$/;"	s
TransitProcess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^pub struct TransitProcess {$/;"	s
TransitProcess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^impl Clone for TransitProcess {$/;"	c
TransitProcess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^pub struct TransitProcess {$/;"	s
TransitProcessResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub enum TransitProcessResult {$/;"	g
TransitState	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub enum TransitState {$/;"	g
Tree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^impl<'a> Tree<Item> {$/;"	c
Tree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^impl Tree<Item> {$/;"	c
Tree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^impl<T: Default> Tree<T> {$/;"	c
Tree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^impl<T> std::fmt::Debug for Tree<T>$/;"	c
Tree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^impl<T> std::ops::Index<TreeIndex> for Tree<T> {$/;"	c
Tree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^impl<T> std::ops::IndexMut<TreeIndex> for Tree<T> {$/;"	c
Tree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^pub(crate) struct Tree<T> {$/;"	s
TreeIndex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^impl Add<usize> for TreeIndex {$/;"	c
TreeIndex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^impl Sub<usize> for TreeIndex {$/;"	c
TreeIndex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^impl TreeIndex {$/;"	c
TreeIndex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^pub(crate) struct TreeIndex(NonZeroUsize);$/;"	s
TrustDns	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    TrustDns(hyper::client::HttpConnector<TrustDnsResolver>),$/;"	e	enum:HttpConnector
TrustDnsResolver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^impl Service<hyper_dns::Name> for TrustDnsResolver {$/;"	c
TrustDnsResolver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^impl TrustDnsResolver {$/;"	c
TrustDnsResolver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^pub(crate) struct TrustDnsResolver {$/;"	s
TrustDnsWithOverrides	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    TrustDnsWithOverrides(hyper::client::HttpConnector<DnsResolverWithOverrides<TrustDnsResolver/;"	e	enum:HttpConnector
TsSeconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl Decodable for TsSeconds<FixedOffset> {$/;"	c	module:rustc_serialize
TsSeconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl Decodable for TsSeconds<Local> {$/;"	c	module:rustc_serialize
TsSeconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl Decodable for TsSeconds<Utc> {$/;"	c	module:rustc_serialize
TsSeconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    impl<Tz: TimeZone> Deref for TsSeconds<Tz> {$/;"	c	module:rustc_serialize
TsSeconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub struct TsSeconds<Tz: TimeZone>(DateTime<Tz>);$/;"	s	module:rustc_serialize
TsSeconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl Decodable for TsSeconds {$/;"	c	module:rustc_serialize
TsSeconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    impl Deref for TsSeconds {$/;"	c	module:rustc_serialize
TsSeconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub struct TsSeconds(NaiveDateTime);$/;"	s	module:rustc_serialize
Tue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Tue = 1,$/;"	e	enum:Weekday
Tuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        Tuple(Vec<Content>),$/;"	e	enum:content::Content
Tuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    Tuple,$/;"	e	enum:Unsupported
Tuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    Tuple,$/;"	e	enum:Style
TupleStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        TupleStruct(&'static str, Vec<Content>),$/;"	e	enum:content::Content
TupleStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    TupleStruct,$/;"	e	enum:Unsupported
TupleTrait	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^enum TupleTrait {$/;"	g
TupleTrait	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^impl TupleTrait {$/;"	c
TupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    TupleVariant,$/;"	e	enum:Unexpected
TupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        TupleVariant(&'static str, u32, &'static str, Vec<Content>),$/;"	e	enum:content::Content
TupleVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^enum TupleVariant {$/;"	g
TzReset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    struct TzReset {$/;"	s	module:tests
TzReset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    impl Drop for TzReset {$/;"	c	module:inner
TzReset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub struct TzReset {$/;"	s	module:inner
TzReset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub struct TzReset;$/;"	s	module:inner
U16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        U16(u16),$/;"	e	enum:content::Content
U16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        U16(u16),$/;"	e	enum:content::Content
U32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        U32(u32),$/;"	e	enum:content::Content
U32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        U32(u32),$/;"	e	enum:content::Content
U32Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for U32Deserializer<E>$/;"	c
U32Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> de::EnumAccess<'de> for U32Deserializer<E>$/;"	c
U32Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<E> Debug for U32Deserializer<E> {$/;"	c
U32Deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct U32Deserializer<E> {$/;"	s
U64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    U64(u64),$/;"	e	enum:DirEntryValue
U64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        U64(u64),$/;"	e	enum:content::Content
U64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        U64(u64),$/;"	e	enum:content::Content
U8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        U8(u8),$/;"	e	enum:content::Content
U8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        U8(u8),$/;"	e	enum:content::Content
Unbounded	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            Unbounded,$/;"	e	enum:deserialize::Field
Unexpected	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^impl<'a> fmt::Display for Unexpected<'a> {$/;"	c
Unexpected	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub enum Unexpected<'a> {$/;"	g
UnexpectedCharacter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    UnexpectedCharacter(char, char),$/;"	e	enum:ParseError
UnexpectedMultipleUsage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    UnexpectedMultipleUsage,$/;"	e	enum:ErrorKind
UnifiedHelp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    UnifiedHelp,$/;"	e	enum:AppSettings
UnifiedHelpMessage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    UnifiedHelpMessage,$/;"	e	enum:AppSettings
Unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Unit,$/;"	e	enum:Unexpected
Unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        Unit,$/;"	e	enum:content::Content
Unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        Unit,$/;"	e	enum:content::Content
Unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    Unit,$/;"	e	enum:Unsupported
Unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    Unit,$/;"	e	enum:Style
UnitDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> de::Deserializer<'de> for UnitDeserializer<E>$/;"	c
UnitDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<E> Debug for UnitDeserializer<E> {$/;"	c
UnitDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^pub struct UnitDeserializer<E> {$/;"	s
UnitOnly	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    impl<'de, E> de::VariantAccess<'de> for UnitOnly<E>$/;"	c	module:private
UnitOnly	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub struct UnitOnly<E> {$/;"	s	module:private
UnitStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        UnitStruct(&'static str),$/;"	e	enum:content::Content
UnitStruct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    UnitStruct,$/;"	e	enum:Unsupported
UnitVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    UnitVariant,$/;"	e	enum:Unexpected
UnitVariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        UnitVariant(&'static str, u32, &'static str),$/;"	e	enum:content::Content
UnitVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Visitor<'de> for UnitVisitor {$/;"	c
UnitVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^struct UnitVisitor;$/;"	s
Unix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    Unix = 3,$/;"	e	enum:System
Unknown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    Unknown,$/;"	e	enum:UsageToken
Unknown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    Unknown,$/;"	e	enum:ValueHint
Unknown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    Unknown,$/;"	e	enum:System
UnknownArgument	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    UnknownArgument,$/;"	e	enum:ErrorKind
UnknownPreconfigured	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    UnknownPreconfigured,$/;"	e	enum:TlsBackend
UnneededAttachedValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    UnneededAttachedValue {$/;"	e	enum:ParseResult
UnrecognizedSubcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    UnrecognizedSubcommand,$/;"	e	enum:ErrorKind
Unsigned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    Unsigned(u64),$/;"	e	enum:Unexpected
Unsupported	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        Unsupported,$/;"	e	enum:capture::BacktraceStatus
Unsupported	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        Unsupported,$/;"	e	enum:capture::Inner
Unsupported	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^enum Unsupported {$/;"	g
Unsupported	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^impl Display for Unsupported {$/;"	c
Unsupported	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^    Unsupported(u16),$/;"	e	enum:CompressionMethod
UnsupportedArchive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/result.rs	/^    UnsupportedArchive(&'static str),$/;"	e	enum:ZipError
Untagged	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^enum Untagged {$/;"	g
Untagged	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    Untagged,$/;"	e	enum:StructVariant
Untagged	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    Untagged,$/;"	e	enum:TupleVariant
UntaggedUnitVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'a> UntaggedUnitVisitor<'a> {$/;"	c	module:content
UntaggedUnitVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, 'a> Visitor<'de> for UntaggedUnitVisitor<'a> {$/;"	c	module:content
UntaggedUnitVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub struct UntaggedUnitVisitor<'a> {$/;"	s	module:content
Updated	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    Updated,$/;"	e	enum:State
UpperAmPm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    UpperAmPm,$/;"	e	enum:Fixed
UpperCase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    UpperCase,$/;"	e	enum:RenameRule
Uri	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^impl Dst for Uri {$/;"	c
Url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    Url,$/;"	e	enum:ValueHint
Url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^impl IntoUrl for Url {}$/;"	c
Url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^impl IntoUrlSealed for Url {$/;"	c
Url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    impl Dst for Url {$/;"	c	module:tests
Usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    Usage,$/;"	e	enum:ContextKind
Usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^impl<'help, 'cmd> Usage<'help, 'cmd> {$/;"	c
Usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^pub(crate) struct Usage<'help, 'cmd> {$/;"	s
UsageParser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^impl<'help> UsageParser<'help> {$/;"	c
UsageParser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^pub(crate) struct UsageParser<'help> {$/;"	s
UsageToken	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^enum UsageToken {$/;"	g
UseLongFormatForHelpSubcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    UseLongFormatForHelpSubcommand,$/;"	e	enum:AppSettings
UseValueDelimiter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    UseValueDelimiter,$/;"	e	enum:ArgSettings
User	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    User,$/;"	e	enum:ArgProvider
Username	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    Username,$/;"	e	enum:ValueHint
Utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^impl Offset for Utc {$/;"	c
Utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^impl TimeZone for Utc {$/;"	c
Utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^impl Utc {$/;"	c
Utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^impl fmt::Debug for Utc {$/;"	c
Utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^impl fmt::Display for Utc {$/;"	c
Utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^pub struct Utc;$/;"	s
Utf8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    Utf8,$/;"	e	enum:TEncoding
ValName	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    ValName,$/;"	e	enum:UsageToken
ValidValue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/context.rs	/^    ValidValue,$/;"	e	enum:ContextKind
Validator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^type Validator<'a> = dyn FnMut(&str) -> Result<(), Box<dyn Error + Send + Sync>> + Send + 'a;$/;"	t
Validator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^impl<'help, 'cmd, 'parser> Validator<'help, 'cmd, 'parser> {$/;"	c
Validator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^pub(crate) struct Validator<'help, 'cmd, 'parser> {$/;"	s
ValidatorOs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^type ValidatorOs<'a> = dyn FnMut(&OsStr) -> Result<(), Box<dyn Error + Send + Sync>> + Send + 'a/;"	t
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = DateTime<Utc>;$/;"	t	implementation:serde::ts_milliseconds::MilliSecondsTimestampVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = DateTime<Utc>;$/;"	t	implementation:serde::ts_nanoseconds::NanoSecondsTimestampVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = DateTime<Utc>;$/;"	t	implementation:serde::ts_seconds::SecondsTimestampVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = Option<DateTime<Utc>>;$/;"	t	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = Option<DateTime<Utc>>;$/;"	t	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            type Value = Option<DateTime<Utc>>;$/;"	t	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        type Value = DateTime<FixedOffset>;$/;"	t	implementation:serde::DateTimeVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        type Value = Month;$/;"	t	implementation:month_serde::MonthVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        type Value = Weekday;$/;"	t	implementation:weekday_serde::WeekdayVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        type Value = NaiveDate;$/;"	t	implementation:serde::NaiveDateVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            type Value = NaiveDateTime;$/;"	t	implementation:serde::ts_milliseconds::NaiveDateTimeFromMilliSecondsVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            type Value = NaiveDateTime;$/;"	t	implementation:serde::ts_nanoseconds::NaiveDateTimeFromNanoSecondsVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            type Value = NaiveDateTime;$/;"	t	implementation:serde::ts_seconds::NaiveDateTimeFromSecondsVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        type Value = NaiveDateTime;$/;"	t	implementation:serde::NaiveDateTimeVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        type Value = NaiveTime;$/;"	t	implementation:serde::NaiveTimeVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^        type Value = CowStr<'de>;$/;"	t	implementation:serde_impl::CowStrVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    type Value = IgnoredAny;$/;"	t	implementation:IgnoredAny
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    type Value = Field;$/;"	t	implementation:deserialize::Field::deserialize::FieldVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                type Value = Field;$/;"	t	implementation:range::Field::deserialize::FieldVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            type Value = ();$/;"	t	function:deserialize_in_place
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            type Value = Bound<T>;$/;"	t	function:deserialize
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            type Value = Duration;$/;"	t	implementation:Duration::deserialize::DurationVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            type Value = Duration;$/;"	t	implementation:SystemTime::deserialize::DurationVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            type Value = Result<T, E>;$/;"	t	function:deserialize
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            type Value = Vec<T>;$/;"	t	function:deserialize
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        type Value = (Idx, Idx);$/;"	t	module:range
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = &'a Path;$/;"	t	implementation:PathVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = &'a [u8];$/;"	t	implementation:BytesVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = &'a str;$/;"	t	implementation:StrVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = ();$/;"	t	implementation:StringInPlaceVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = ();$/;"	t	implementation:UnitVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = CString;$/;"	t	implementation:CStringVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = Option<T>;$/;"	t
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = OsString;$/;"	t	implementation:OsStringVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = PathBuf;$/;"	t	implementation:PathBufVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = PhantomData<T>;$/;"	t	implementation:PhantomDataVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = String;$/;"	t	implementation:StringVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = T;$/;"	t
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = [T; 0];$/;"	t	implementation:ArrayVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = bool;$/;"	t	implementation:BoolVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    type Value = char;$/;"	t	implementation:CharVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    type Value = T;$/;"	t
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    type Value;$/;"	t	interface:DeserializeSeed
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    type Value;$/;"	t	interface:Visitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/seed.rs	/^    type Value = ();$/;"	t
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        type Value = V::Value;$/;"	t	module:private
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Value = ();$/;"	t	implementation:content::InternallyTaggedUnitVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Value = ();$/;"	t	implementation:content::UntaggedUnitVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Value = Content<'de>;$/;"	t	implementation:content::ContentVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Value = Cow<'a, [u8]>;$/;"	t	implementation:borrow_cow_bytes::CowBytesVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Value = Cow<'a, str>;$/;"	t	implementation:borrow_cow_str::CowStrVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Value = TagContentOtherField;$/;"	t	implementation:content::TagContentOtherFieldVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Value = TagOrContent<'de>;$/;"	t	implementation:content::TagOrContentVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Value = TagOrContentField;$/;"	t	implementation:content::TagOrContentFieldVisitor
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Value = TaggedContent<'de, T>;$/;"	t	module:content
Value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    Value,$/;"	e	enum:TokenType
ValueHint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^impl Default for ValueHint {$/;"	c
ValueHint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^impl FromStr for ValueHint {$/;"	c
ValueHint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^pub enum ValueHint {$/;"	g
ValueSource	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/value_source.rs	/^pub enum ValueSource {$/;"	g
ValueValidation	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    ValueValidation,$/;"	e	enum:ErrorKind
Values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> Default for Values<'a> {$/;"	c
Values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> DoubleEndedIterator for Values<'a> {$/;"	c
Values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> ExactSizeIterator for Values<'a> {}$/;"	c
Values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^impl<'a> Iterator for Values<'a> {$/;"	c
Values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^pub struct Values<'a> {$/;"	s
ValuesDone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    ValuesDone,$/;"	e	enum:ParseResult
ValuesDone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    ValuesDone,$/;"	e	enum:ParseState
Variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    type Variant: VariantAccess<'de, Error = Self::Error>;$/;"	t	interface:EnumAccess
Variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Variant = private::MapAsEnum<A>;$/;"	t
Variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    type Variant = private::UnitOnly<E>;$/;"	t
Variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Variant = VariantDeserializer<'de, Self::Error>;$/;"	t	module:content
Variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type Variant = VariantRefDeserializer<'a, 'de, Self::Error>;$/;"	t	module:content
Variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^pub struct Variant<'a> {$/;"	s
Variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    Variant,$/;"	e	enum:Identifier
Variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^impl Variant {$/;"	c
Variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^pub struct Variant {$/;"	s
VariantAccess	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub trait VariantAccess<'de>: Sized {$/;"	i
VariantDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, E> de::VariantAccess<'de> for VariantDeserializer<'de, E>$/;"	c	module:content
VariantDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pub struct VariantDeserializer<'de, E>$/;"	s	module:content
VariantRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    impl<'de, 'a, E> de::VariantAccess<'de> for VariantRefDeserializer<'a, 'de, E>$/;"	c	module:content
VariantRefDeserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    struct VariantRefDeserializer<'a, 'de: 'a, E>$/;"	s	module:content
Vec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Vec<T>$/;"	c
Vec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, T, E> IntoDeserializer<'de, E> for Vec<T>$/;"	c
Vec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^impl FromCp437 for Vec<u8> {$/;"	c
VecAttr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^impl<'c, T> VecAttr<'c, T> {$/;"	c
VecAttr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^struct VecAttr<'c, T> {$/;"	s
VecInPlaceVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        impl<'a, 'de, T> Visitor<'de> for VecInPlaceVisitor<'a, T>$/;"	c	function:deserialize_in_place
VecInPlaceVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        struct VecInPlaceVisitor<'a, T: 'a>(&'a mut Vec<T>);$/;"	s	function:deserialize_in_place
VecVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        impl<'de, T> Visitor<'de> for VecVisitor<T>$/;"	c	function:deserialize
VecVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        struct VecVisitor<T> {$/;"	s	function:deserialize
Verbose	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    impl<T: AsyncRead + AsyncWrite + Unpin> AsyncRead for Verbose<T> {$/;"	c	module:verbose
Verbose	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    impl<T: AsyncRead + AsyncWrite + Unpin> AsyncWrite for Verbose<T> {$/;"	c	module:verbose
Verbose	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    impl<T: Connection + AsyncRead + AsyncWrite + Unpin> Connection for Verbose<T> {$/;"	c	module:verbose
Verbose	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    struct Verbose<T> {$/;"	s	module:verbose
Verifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^impl<'a> Drop for Verifier<'a> {$/;"	c
Verifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^impl<'a> Verifier<'a> {$/;"	c
Verifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^impl<'a> Write for Verifier<'a> {$/;"	c
Verifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^pub struct Verifier<'a> {$/;"	s
Verifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^unsafe impl<'a> Send for Verifier<'a> {}$/;"	c
Verifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^unsafe impl<'a> Sync for Verifier<'a> {}$/;"	c
Version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^impl Version {$/;"	c
Version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^pub struct Version(InnerVersion);$/;"	s
VersionDirective	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    VersionDirective(u32, u32),$/;"	e	enum:TokenType
VersionFlag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    VersionFlag,$/;"	e	enum:ParseResult
Visitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub trait Visitor<'de>: Sized {$/;"	i
Void	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^enum Void {}$/;"	g
Void	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^enum Void {}$/;"	g
W	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^impl<W> StrWrite for &'_ mut W$/;"	c
WaitOnError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    WaitOnError,$/;"	e	enum:AppSettings
Waited	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/wait.rs	/^pub(crate) enum Waited<E> {$/;"	g
Warning	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    Warning,$/;"	e	enum:Style
Wed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    Wed = 2,$/;"	e	enum:Weekday
WeekFromMon	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    WeekFromMon,$/;"	e	enum:Numeric
WeekFromSun	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    WeekFromSun,$/;"	e	enum:Numeric
Weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^impl FromStr for Weekday {$/;"	c
Weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    impl ser::Serialize for Weekday {$/;"	c	module:weekday_serde
Weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    impl<'de> de::Deserialize<'de> for Weekday {$/;"	c	module:weekday_serde
Weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl Weekday {$/;"	c
Weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl fmt::Display for Weekday {$/;"	c
Weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^impl num_traits::FromPrimitive for Weekday {$/;"	c
Weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub enum Weekday {$/;"	g
WeekdayFromMon	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    WeekdayFromMon,$/;"	e	enum:Numeric
WeekdayVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    impl<'de> de::Visitor<'de> for WeekdayVisitor {$/;"	c	module:weekday_serde
WeekdayVisitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    struct WeekdayVisitor;$/;"	s	module:weekday_serde
Wide	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        Wide(Vec<u16>),$/;"	e	enum:capture::BytesOrWide
WouldBlock	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    WouldBlock(MidHandshakeSslStream<S>),$/;"	e	enum:HandshakeError
WrapHyper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl HttpBody for WrapHyper {$/;"	c
WrapHyper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^struct WrapHyper(hyper::Body);$/;"	s
WrapStream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^impl<S, D, E> HttpBody for WrapStream<S>$/;"	c
WrappedResolverFuture	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^impl<Fut, FutOutput, FutError> std::future::Future for WrappedResolverFuture<Fut>$/;"	c
Wrapper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    impl Wrapper {$/;"	c	module:verbose
Wrapper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(super) struct Wrapper(pub(super) bool);$/;"	s	module:verbose
Wrapping	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de, T> Deserialize<'de> for Wrapping<T>$/;"	c
Wrapping	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl<T> Serialize for Wrapping<T>$/;"	c
WriteWrapper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^impl<W> StrWrite for WriteWrapper<W>$/;"	c
WriteWrapper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^pub struct WriteWrapper<W>(pub W);$/;"	s
WrongNumberOfValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    WrongNumberOfValues,$/;"	e	enum:ErrorKind
X509	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl Clone for X509 {$/;"	c
X509	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl Stackable for X509 {$/;"	c
X509	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509 {$/;"	c
X509	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl fmt::Debug for X509 {$/;"	c
X509AlgorithmRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509AlgorithmRef {$/;"	c
X509Builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509Builder {$/;"	c
X509Builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^pub struct X509Builder(X509);$/;"	s
X509Extension	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl Stackable for X509Extension {$/;"	c
X509Extension	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509Extension {$/;"	c
X509Lookup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^impl X509Lookup<HashDir> {$/;"	c
X509LookupRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^impl X509LookupRef<HashDir> {$/;"	c
X509Name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl Stackable for X509Name {$/;"	c
X509Name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509Name {$/;"	c
X509NameBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509NameBuilder {$/;"	c
X509NameBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^pub struct X509NameBuilder(X509Name);$/;"	s
X509NameEntries	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl<'a> Iterator for X509NameEntries<'a> {$/;"	c
X509NameEntries	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^pub struct X509NameEntries<'a> {$/;"	s
X509NameEntryRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509NameEntryRef {$/;"	c
X509NameEntryRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl fmt::Debug for X509NameEntryRef {$/;"	c
X509NameRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509NameRef {$/;"	c
X509NameRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl fmt::Debug for X509NameRef {$/;"	c
X509Object	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl Stackable for X509Object {$/;"	c
X509ObjectRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509ObjectRef {$/;"	c
X509Ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl AsRef<X509Ref> for X509Ref {$/;"	c
X509Ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl ToOwned for X509Ref {$/;"	c
X509Ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509Ref {$/;"	c
X509Req	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509Req {$/;"	c
X509ReqBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509ReqBuilder {$/;"	c
X509ReqBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^pub struct X509ReqBuilder(X509Req);$/;"	s
X509ReqRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509ReqRef {$/;"	c
X509StoreBuilder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^impl X509StoreBuilder {$/;"	c
X509StoreBuilderRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^impl X509StoreBuilderRef {$/;"	c
X509StoreContext	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509StoreContext {$/;"	c
X509StoreContextRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509StoreContextRef {$/;"	c
X509StoreRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^impl X509StoreRef {$/;"	c
X509VerifyParamRef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/verify.rs	/^impl X509VerifyParamRef {$/;"	c
X509VerifyResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl Error for X509VerifyResult {}$/;"	c
X509VerifyResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl X509VerifyResult {$/;"	c
X509VerifyResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl fmt::Debug for X509VerifyResult {$/;"	c
X509VerifyResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl fmt::Display for X509VerifyResult {$/;"	c
X509VerifyResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^pub struct X509VerifyResult(c_int);$/;"	s
X509v3Context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^impl<'a> X509v3Context<'a> {$/;"	c
X509v3Context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^pub struct X509v3Context<'a>(ffi::X509V3_CTX, PhantomData<(&'a X509Ref, &'a ConfRef)>);$/;"	s
YEAR_DELTAS	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^static YEAR_DELTAS: [u8; 401] = [$/;"	v
YEAR_TO_FLAGS	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^static YEAR_TO_FLAGS: [YearFlags; 400] = [$/;"	v
YTAB	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^    static YTAB: [[i64; 12]; 2] = [$/;"	v	function:time_to_tm
Yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^impl Index<usize> for Yaml {$/;"	c
Yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^impl IntoIterator for Yaml {$/;"	c
Yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^impl Yaml {$/;"	c
Yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^impl<'a> Index<&'a str> for Yaml {$/;"	c
Yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^pub enum Yaml {$/;"	g
YamlEmitter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^impl<'a> YamlEmitter<'a> {$/;"	c	function:escape_str
YamlEmitter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^pub struct YamlEmitter<'a> {$/;"	s
YamlIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^impl Iterator for YamlIter {$/;"	c
YamlIter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^pub struct YamlIter {$/;"	s
YamlLoader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^impl MarkedEventReceiver for YamlLoader {$/;"	c
YamlLoader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^impl YamlLoader {$/;"	c
YamlLoader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^pub struct YamlLoader {$/;"	s
Year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Year,$/;"	e	enum:Numeric
YearDiv100	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    YearDiv100,$/;"	e	enum:Numeric
YearFlags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^impl YearFlags {$/;"	c
YearFlags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^impl fmt::Debug for YearFlags {$/;"	c
YearFlags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub struct YearFlags(pub u8);$/;"	s
YearMod100	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    YearMod100,$/;"	e	enum:Numeric
Yes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    Yes,$/;"	e	enum:Untagged
Zero	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    Zero,$/;"	e	enum:Pad
Zip64CentralDirectoryEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^impl Zip64CentralDirectoryEnd {$/;"	c
Zip64CentralDirectoryEnd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^pub struct Zip64CentralDirectoryEnd {$/;"	s
Zip64CentralDirectoryEndLocator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^impl Zip64CentralDirectoryEndLocator {$/;"	c
Zip64CentralDirectoryEndLocator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^pub struct Zip64CentralDirectoryEndLocator {$/;"	s
ZipArchive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^impl<R: Read + io::Seek> ZipArchive<R> {$/;"	c
ZipArchive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^pub struct ZipArchive<R> {$/;"	s
ZipCrypto	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    ZipCrypto(ZipCryptoReaderValid<io::Take<&'a mut dyn Read>>),$/;"	e	enum:CryptoReader
ZipCryptoKeys	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^impl ZipCryptoKeys {$/;"	c
ZipCryptoKeys	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^struct ZipCryptoKeys {$/;"	s
ZipCryptoReader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^impl<R: std::io::Read> ZipCryptoReader<R> {$/;"	c
ZipCryptoReader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^pub struct ZipCryptoReader<R> {$/;"	s
ZipCryptoReaderValid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^impl<R: std::io::Read> ZipCryptoReaderValid<R> {$/;"	c
ZipCryptoReaderValid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^impl<R: std::io::Read> std::io::Read for ZipCryptoReaderValid<R> {$/;"	c
ZipCryptoReaderValid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^pub struct ZipCryptoReaderValid<R> {$/;"	s
ZipCryptoValidator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^pub enum ZipCryptoValidator {$/;"	g
ZipError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/result.rs	/^impl ZipError {$/;"	c
ZipError	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/result.rs	/^pub enum ZipError {$/;"	g
ZipFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^impl<'a> Drop for ZipFile<'a> {$/;"	c
ZipFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^impl<'a> Read for ZipFile<'a> {$/;"	c
ZipFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^impl<'a> ZipFile<'a> {$/;"	c
ZipFile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^pub struct ZipFile<'a> {$/;"	s
ZipFileData	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^impl ZipFileData {$/;"	c
ZipFileData	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^pub struct ZipFileData {$/;"	s
ZipFileReader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^enum ZipFileReader<'a> {$/;"	g
ZipFileReader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^impl<'a> Read for ZipFileReader<'a> {$/;"	c
ZipFileReader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^impl<'a> ZipFileReader<'a> {$/;"	c
ZipRawValues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^struct ZipRawValues {$/;"	s
ZipResult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/result.rs	/^pub type ZipResult<T> = Result<T, ZipError>;$/;"	t
ZipWriter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^impl<A: Read + Write + io::Seek> ZipWriter<A> {$/;"	c
ZipWriter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^impl<W: Write + io::Seek> Drop for ZipWriter<W> {$/;"	c
ZipWriter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^impl<W: Write + io::Seek> Write for ZipWriter<W> {$/;"	c
ZipWriter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^impl<W: Write + io::Seek> ZipWriter<W> {$/;"	c
ZipWriter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^pub struct ZipWriter<W: Write + io::Seek> {$/;"	s
ZipWriterStats	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^impl ZipWriterStats {$/;"	c
ZipWriterStats	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^struct ZipWriterStats {$/;"	s
Zsh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    Zsh,$/;"	e	enum:Shell
Zsh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/zsh.rs	/^impl Generator for Zsh {$/;"	c
Zsh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/zsh.rs	/^pub struct Zsh;$/;"	s
Zsh	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^    Zsh,$/;"	e	enum:Shell
__NonExhaustive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    __NonExhaustive,$/;"	e	enum:SecondsFormat
__deserialize_content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn __deserialize_content<V>($/;"	P	interface:Deserializer
__deserialize_content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn __deserialize_content<V>($/;"	f	module:content
__dispatch_ensure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^    fn __dispatch_ensure(self, msg: &'static str) -> Error {$/;"	P	implementation:B
__dispatch_ensure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^    fn __dispatch_ensure(self, msg: &'static str) -> Error {$/;"	f
__dispatch_ensure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^    fn __dispatch_ensure(self, msg: &'static str) -> Error;$/;"	P	interface:BothDebug
__dispatch_ensure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^    fn __dispatch_ensure(self, msg: &'static str) -> Error;$/;"	P	interface:NotBothDebug
__fallback_ensure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^macro_rules! __fallback_ensure {$/;"	M
__fancy_ensure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^macro_rules! __fancy_ensure {$/;"	M
__parse_ensure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^macro_rules! __parse_ensure {$/;"	M
__private	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/lib.rs	/^pub mod __private;$/;"	n
__private_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/doc.rs	/^macro_rules! __private_serialize {$/;"	M
__private_visit_untagged_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn __private_visit_untagged_option<D>(self, deserializer: D) -> Result<Self::Value, ()>$/;"	f
__private_visit_untagged_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn __private_visit_untagged_option<D>(self, _: D) -> Result<Self::Value, ()>$/;"	P	interface:Visitor
__serialize_unimplemented	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/doc.rs	/^macro_rules! __serialize_unimplemented {$/;"	M
__serialize_unimplemented_helper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/doc.rs	/^macro_rules! __serialize_unimplemented_helper {$/;"	M
__serialize_unimplemented_method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/doc.rs	/^macro_rules! __serialize_unimplemented_method {$/;"	M
_assert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    fn _assert<T: Send + Sync>() {}$/;"	f	function:_assert_send_sync
_assert_impls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs	/^fn _assert_impls() {$/;"	f
_assert_send_sync	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^fn _assert_send_sync() {$/;"	f
_build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub(crate) fn _build(&mut self) {$/;"	P	implementation:Arg
_build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn _build(&mut self) {$/;"	P	implementation:App
_build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    pub(crate) fn _build(&mut self) {$/;"	P	implementation:MKeyMap
_build_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn _build_all(&mut self) {$/;"	P	implementation:App
_build_bin_names	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn _build_bin_names(&mut self) {$/;"	P	implementation:App
_build_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn _build_subcommand(&mut self, name: &str) -> Option<&mut Self> {$/;"	P	implementation:App
_check_help_and_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn _check_help_and_version(&mut self) {$/;"	P	implementation:App
_check_kinds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn _check_kinds() {$/;"	f
_derive_display_order	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn _derive_display_order(&mut self) {$/;"	P	implementation:App
_do_parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    fn _do_parse(&mut self, it: &mut Input) -> ClapResult<ArgMatches> {$/;"	P	implementation:App
_dummy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    _dummy: Void,$/;"	m	struct:InternalNumeric
_dummy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    _dummy: (),$/;"	m	struct:Parsed
_dummy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    _dummy: (),$/;"	m	struct:ParseMonthError
_dummy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    _dummy: (),$/;"	m	struct:ParseWeekdayError
_explicit_document_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn _explicit_document_start(&mut self) -> ParseResult {$/;"	P	implementation:Parser
_generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/mod.rs	/^fn _generate<G, S>(gen: G, cmd: &mut clap::Command, buf: &mut dyn Write)$/;"	f
_get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    unsafe fn _get(&self, idx: usize) -> *mut T::CType {$/;"	P	implementation:StackRef
_get_dir_content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^fn _get_dir_content<P>(path: P, mut depth: u64) -> Result<DirContent>$/;"	f
_implied_bounds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^fn _implied_bounds() {$/;"	f
_lock	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        _lock: LockResult<MutexGuard<'static, ()>>,$/;"	m	struct:tests::TzReset
_marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatInternallyTaggedAccess
_marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatMapAccess
_marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    _marker: PhantomData<E>,$/;"	m	struct:FlatStructAccess
_object	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    _object: E,$/;"	m	struct:ErrorImpl
_p	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    _p: PhantomData<&'a ()>,$/;"	m	struct:Decrypter
_p	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    _p: PhantomData<&'a ()>,$/;"	m	struct:Encrypter
_p	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    _p: PhantomData<&'a ()>,$/;"	m	struct:Signer
_p	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    _p: PhantomData<S>,$/;"	m	struct:SslStream
_panic_on_missing_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn _panic_on_missing_help(&self, help_required_globally: bool) {$/;"	P	implementation:App
_propagate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn _propagate(&mut self) {$/;"	P	implementation:App
_propagate_global_args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn _propagate_global_args(&mut self) {$/;"	P	implementation:App
_propagate_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    fn _propagate_subcommand(&self, sc: &mut Self) {$/;"	P	implementation:App
_render_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn _render_version(&self, use_long: bool) -> String {$/;"	P	implementation:App
_thread_handle	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    _thread_handle: KeepCoreThreadAlive,$/;"	m	struct:Response
_tzreset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        _tzreset: ::sys::TzReset,$/;"	m	struct:tests::TzReset
_verify_positionals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^fn _verify_positionals(cmd: &Command) -> bool {$/;"	f
_ytab	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static _ytab: [[i64; 12]; 2] = [$/;"	v	function:common::time_to_tm
a	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^impl<'a> Display for Expected + 'a {$/;"	c
aad_update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aad_update(&mut self, input: &[u8]) -> Result<(), ErrorStack> {$/;"	P	implementation:Crypter
about	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    about: Option<&'help str>,$/;"	m	struct:App
about	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn about<O: Into<Option<&'help str>>>(mut self, about: O) -> Self {$/;"	P	implementation:App
abs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn abs(&self) -> Duration {$/;"	P	implementation:Duration
abs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn abs(i: i32) -> i32 {$/;"	f
accept	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn accept<S>(&self, stream: S) -> Result<SslStream<S>, HandshakeError<S>>$/;"	P	implementation:SslAcceptor
accept	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn accept(&mut self) -> Result<(), Error> {$/;"	P	implementation:SslStream
accept	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn accept(mut self) -> Result<SslStream<S>, HandshakeError<S>> {$/;"	f
accept	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn accept<S>(self, stream: S) -> Result<SslStream<S>, HandshakeError<S>>$/;"	P	implementation:Ssl
accepts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    accepts: Accepts,$/;"	m	struct:ClientRef
accepts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    accepts: Accepts,$/;"	m	struct:Config
acquire_privileges	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn acquire_privileges() {$/;"	f	module:inner
active_reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    active_reader: Option<Box<dyn Read + Send>>,$/;"	m	struct:Reader
active_session	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn active_session() {$/;"	f
actual_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        actual_start: usize,$/;"	m	struct:capture::Capture
actually_private	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/lib.rs	/^mod actually_private {$/;"	n
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn add(self, rhs: OldDuration) -> Date<Tz> {$/;"	P	implementation:Date
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn add(self, rhs: OldDuration) -> DateTime<Tz> {$/;"	P	implementation:DateTime
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn add(self, rhs: OldDuration) -> NaiveDate {$/;"	P	implementation:NaiveDate
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn add(self, rhs: OldDuration) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn add(self, rhs: OldDuration) -> NaiveTime {$/;"	P	implementation:NaiveTime
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn add(self, rhs: FixedOffset) -> DateTime<Tz> {$/;"	P	implementation:DateTime
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn add(self, rhs: FixedOffset) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn add(self, rhs: FixedOffset) -> NaiveTime {$/;"	P	implementation:NaiveTime
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn add(self, rhs: Duration) -> Duration {$/;"	P	implementation:Duration
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn add(self, oth: &BigNumRef) -> BigNum {$/;"	P	implementation:BigNumRef
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn add($/;"	P	implementation:EcPointRef
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    fn add(self, rhs: usize) -> Self {$/;"	P	implementation:TreeIndex
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn add(self, rhs: Duration) -> Duration {$/;"	P	implementation:Duration
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn add(self, other: Duration) -> SteadyTime {$/;"	P	implementation:SteadyTime
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn add(self, other: Duration) -> Timespec {$/;"	P	implementation:Timespec
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn add(self, other: Duration) -> Tm {$/;"	P	implementation:Tm
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn add(mut self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::unix::SteadyTime
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn add(self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::mac::SteadyTime
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn add(mut self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::SteadyTime
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn add(self, _other: Duration) -> SteadyTime {$/;"	P	implementation:inner::SteadyTime
add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn add(self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::SteadyTime
add_assign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn add_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveDate
add_assign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn add_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveDateTime
add_assign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn add_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveTime
add_body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn add_body() {$/;"	f	module:tests
add_cert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^    pub fn add_cert(&mut self, cert: X509) -> Result<(), ErrorStack> {$/;"	P	implementation:X509StoreBuilderRef
add_client_ca	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn add_client_ca(&mut self, cacert: &X509Ref) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
add_cookie_header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^fn add_cookie_header(headers: &mut HeaderMap, cookie_store: &dyn cookie::CookieStore, url: &Url)/;"	f
add_cookie_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    pub fn add_cookie_str(&self, cookie: &str, url: &url::Url) {$/;"	P	implementation:Jar
add_custom_ext	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn add_custom_ext<AddFn, ParseFn, T>($/;"	P	implementation:SslContextBuilder
add_defaults	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    pub(crate) fn add_defaults(&mut self, matcher: &mut ArgMatcher, trailing_values: bool) {$/;"	P	implementation:Parser
add_dir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^    pub fn add_dir($/;"	P	implementation:X509LookupRef
add_directory	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn add_directory<S>(&mut self, name: S, mut options: FileOptions) -> ZipResult<()>$/;"	P	implementation:ZipWriter
add_directory_from_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn add_directory_from_path($/;"	P	implementation:ZipWriter
add_env	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    pub(crate) fn add_env($/;"	P	implementation:Parser
add_extensions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn add_extensions($/;"	P	implementation:X509ReqBuilder
add_extra_chain_cert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn add_extra_chain_cert(&mut self, cert: X509) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
add_extra_chain_cert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn add_extra_chain_cert() {$/;"	f
add_form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn add_form() {$/;"	f	module:tests
add_header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn add_header() {$/;"	f	module:tests
add_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn add_headers() {$/;"	f	module:tests
add_headers_multi	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn add_headers_multi() {$/;"	f	module:tests
add_id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn add_id(&mut self, id: OcspCertId) -> Result<&mut OcspOneReqRef, ErrorStack> {$/;"	P	implementation:OcspRequestRef
add_index_to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn add_index_to(&mut self, arg: &Id, idx: usize, ty: ValueSource) {$/;"	P	implementation:ArgMatcher
add_json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn add_json() {$/;"	f	module:tests
add_json_fail	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn add_json_fail() {$/;"	f	module:tests
add_lookup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^    pub fn add_lookup<T>($/;"	P	implementation:X509StoreBuilderRef
add_multiple_vals_to_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn add_multiple_vals_to_arg($/;"	P	implementation:Parser
add_page	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    pub fn add_page(&mut self, filepath: &str) -> Result<()> {$/;"	P	implementation:Site
add_query_append	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn add_query_append() {$/;"	f	module:tests
add_query_append	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn add_query_append() {$/;"	f	module:tests
add_query_append_same	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn add_query_append_same() {$/;"	f	module:tests
add_query_append_same	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn add_query_append_same() {$/;"	f	module:tests
add_query_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn add_query_map() {$/;"	f	module:tests
add_query_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn add_query_map() {$/;"	f	module:tests
add_query_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn add_query_struct() {$/;"	f	module:tests
add_query_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn add_query_struct() {$/;"	f	module:tests
add_root_certificate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn add_root_certificate(mut self, cert: Certificate) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
add_root_certificate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn add_root_certificate(self, cert: Certificate) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
add_session	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub unsafe fn add_session(&self, session: &SslSessionRef) -> bool {$/;"	P	implementation:SslContextRef
add_single_val_to_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn add_single_val_to_arg($/;"	P	implementation:Parser
add_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/zsh.rs	/^    fn add_subcommands(subcommand: &Command, name: &str, ret: &mut Vec<String>) {$/;"	f	function:subcommands_of
add_to_native_tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    pub(crate) fn add_to_native_tls($/;"	P	implementation:Identity
add_to_native_tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    pub(crate) fn add_to_native_tls(self, tls: &mut native_tls_crate::TlsConnectorBuilder) {$/;"	P	implementation:Certificate
add_to_rustls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    pub(crate) fn add_to_rustls($/;"	P	implementation:Certificate
add_to_rustls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    pub(crate) fn add_to_rustls($/;"	P	implementation:Identity
add_val_to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn add_val_to(&mut self, arg: &Id, val: OsString, ty: ValueSource, append: bool) /;"	P	implementation:ArgMatcher
add_val_to_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn add_val_to_arg($/;"	P	implementation:Parser
add_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn add_value($/;"	P	implementation:Parser
add_with_leapsecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^fn add_with_leapsecond<T>(lhs: &T, rhs: i32) -> T$/;"	f
add_word	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn add_word(&mut self, w: u32) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
addr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    addr: SocketAddr,$/;"	m	struct:Client
addr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    addr: SocketAddr,$/;"	m	struct:ClientBuilder
addr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    addr: SocketAddr,$/;"	m	struct:ClientSslBuilder
addr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    addr: SocketAddr,$/;"	m	struct:Server
adjacent_value_allowed_at	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    adjacent_value_allowed_at: usize,$/;"	m	struct:Scanner
aes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod aes;$/;"	n
aes_128_cbc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_128_cbc() -> Cipher {$/;"	P	implementation:Cipher
aes_128_ccm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_128_ccm() -> Cipher {$/;"	P	implementation:Cipher
aes_128_cfb1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_128_cfb1() -> Cipher {$/;"	P	implementation:Cipher
aes_128_cfb128	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_128_cfb128() -> Cipher {$/;"	P	implementation:Cipher
aes_128_cfb8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_128_cfb8() -> Cipher {$/;"	P	implementation:Cipher
aes_128_ctr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_128_ctr() -> Cipher {$/;"	P	implementation:Cipher
aes_128_ecb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_128_ecb() -> Cipher {$/;"	P	implementation:Cipher
aes_128_gcm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_128_gcm() -> Cipher {$/;"	P	implementation:Cipher
aes_128_ocb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_128_ocb() -> Cipher {$/;"	P	implementation:Cipher
aes_128_ofb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_128_ofb() -> Cipher {$/;"	P	implementation:Cipher
aes_128_xts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_128_xts() -> Cipher {$/;"	P	implementation:Cipher
aes_192_cbc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_192_cbc() -> Cipher {$/;"	P	implementation:Cipher
aes_192_ccm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_192_ccm() -> Cipher {$/;"	P	implementation:Cipher
aes_192_cfb1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_192_cfb1() -> Cipher {$/;"	P	implementation:Cipher
aes_192_cfb128	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_192_cfb128() -> Cipher {$/;"	P	implementation:Cipher
aes_192_cfb8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_192_cfb8() -> Cipher {$/;"	P	implementation:Cipher
aes_192_ctr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_192_ctr() -> Cipher {$/;"	P	implementation:Cipher
aes_192_ecb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_192_ecb() -> Cipher {$/;"	P	implementation:Cipher
aes_192_gcm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_192_gcm() -> Cipher {$/;"	P	implementation:Cipher
aes_192_ocb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_192_ocb() -> Cipher {$/;"	P	implementation:Cipher
aes_192_ofb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_192_ofb() -> Cipher {$/;"	P	implementation:Cipher
aes_256_cbc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_256_cbc() -> Cipher {$/;"	P	implementation:Cipher
aes_256_ccm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_256_ccm() -> Cipher {$/;"	P	implementation:Cipher
aes_256_cfb1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_256_cfb1() -> Cipher {$/;"	P	implementation:Cipher
aes_256_cfb128	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_256_cfb128() -> Cipher {$/;"	P	implementation:Cipher
aes_256_cfb8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_256_cfb8() -> Cipher {$/;"	P	implementation:Cipher
aes_256_ctr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_256_ctr() -> Cipher {$/;"	P	implementation:Cipher
aes_256_ecb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_256_ecb() -> Cipher {$/;"	P	implementation:Cipher
aes_256_gcm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_256_gcm() -> Cipher {$/;"	P	implementation:Cipher
aes_256_ocb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_256_ocb() -> Cipher {$/;"	P	implementation:Cipher
aes_256_ofb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_256_ofb() -> Cipher {$/;"	P	implementation:Cipher
aes_256_xts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn aes_256_xts() -> Cipher {$/;"	P	implementation:Cipher
aes_ige	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/aes.rs	/^pub fn aes_ige(in_: &[u8], out: &mut [u8], key: &AesKey, iv: &mut [u8], mode: Mode) {$/;"	f
affine_coordinates	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn affine_coordinates($/;"	P	implementation:EcPointRef
affine_coordinates_gf2m	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn affine_coordinates_gf2m($/;"	P	implementation:EcPointRef
affine_coordinates_gfp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn affine_coordinates_gfp($/;"	P	implementation:EcPointRef
after_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    after_help: Option<&'help str>,$/;"	m	struct:App
after_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn after_help<S: Into<&'help str>>(mut self, help: S) -> Self {$/;"	P	implementation:App
after_long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    after_long_help: Option<&'help str>,$/;"	m	struct:App
after_long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn after_long_help<S: Into<&'help str>>(mut self, help: S) -> Self {$/;"	P	implementation:App
algorithm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub algorithm: i32,$/;"	m	struct:CipherBits
alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn alias<S: Into<&'help str>>(mut self, name: S) -> Self {$/;"	P	implementation:Arg
alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn alias<S: Into<&'help str>>(mut self, name: S) -> Self {$/;"	P	implementation:App
alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    pub fn alias(mut self, name: &'help str) -> Self {$/;"	P	implementation:PossibleValue
aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn aliases(mut self, names: &[&'help str]) -> Self {$/;"	P	implementation:Arg
aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    aliases: Vec<(&'help str, bool)>,           \/\/ (name, visible)$/;"	m	struct:App
aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn aliases(mut self, names: &[&'help str]) -> Self {$/;"	P	implementation:App
aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    aliases: Vec<&'help str>, \/\/ (name, visible)$/;"	m	struct:PossibleValue
aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    pub fn aliases<I>(mut self, names: I) -> Self$/;"	P	implementation:PossibleValue
aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn aliases(&self) -> Vec<String> {$/;"	P	implementation:Field
aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn aliases(&self) -> Vec<String> {$/;"	P	implementation:Variant
aliases_to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn aliases_to<T>(&self, name: &T) -> bool$/;"	P	implementation:App
align_to_about	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn align_to_about($/;"	P	implementation:Help
alignments	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    alignments: Vec<Vec<Alignment>>,$/;"	m	struct:Allocations
all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    pub fn all<U: IntoProxyScheme>(proxy_scheme: U) -> crate::Result<Proxy> {$/;"	P	implementation:Proxy
all_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub fn all_fields(&'a self) -> Box<Iterator<Item = &'a Field<'a>> + 'a> {$/;"	P	implementation:Data
all_options_for_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/bash.rs	/^fn all_options_for_path(cmd: &Command, path: &str) -> String {$/;"	f
all_subcommand_names	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn all_subcommand_names(&self) -> impl Iterator<Item = &str> + Captures<'help> {$/;"	P	implementation:App
all_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^pub fn all_subcommands(cmd: &Command) -> Vec<(String, String)> {$/;"	f
all_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/bash.rs	/^fn all_subcommands(cmd: &Command) -> String {$/;"	f
all_type_params	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^        all_type_params: HashSet<syn::Ident>,$/;"	m	struct:with_bound::FindTyParams
all_val_groups_empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn all_val_groups_empty(&self) -> bool {$/;"	P	implementation:MatchedArg
allocate_alignment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn allocate_alignment(&mut self, alignment: Vec<Alignment>) -> AlignmentIndex {$/;"	P	implementation:Allocations
allocate_cow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn allocate_cow(&mut self, cow: CowStr<'a>) -> CowIndex {$/;"	P	implementation:Allocations
allocate_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn allocate_heading(&mut self, attrs: HeadingAttributes<'a>) -> HeadingIndex {$/;"	P	implementation:Allocations
allocate_link	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn allocate_link(&mut self, ty: LinkType, url: CowStr<'a>, title: CowStr<'a>) -> LinkInd/;"	P	implementation:Allocations
allocs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    allocs: Allocations<'a>,$/;"	m	struct:FirstPass
allocs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    allocs: Allocations<'input>,$/;"	m	struct:Parser
allow_external_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn allow_external_subcommands(self, yes: bool) -> Self {$/;"	P	implementation:App
allow_hyphen_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn allow_hyphen_values(self, yes: bool) -> Self {$/;"	P	implementation:Arg
allow_hyphen_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn allow_hyphen_values(self, yes: bool) -> Self {$/;"	P	implementation:App
allow_invalid_utf8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn allow_invalid_utf8(self, yes: bool) -> Self {$/;"	P	implementation:Arg
allow_invalid_utf8_for_external_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn allow_invalid_utf8_for_external_subcommands(self, yes: bool) -> Self {$/;"	P	implementation:App
allow_missing_positional	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn allow_missing_positional(self, yes: bool) -> Self {$/;"	P	implementation:App
allow_negative_numbers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn allow_negative_numbers(self, yes: bool) -> Self {$/;"	P	implementation:App
allow_simple_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn allow_simple_key(&mut self) {$/;"	P	implementation:Scanner
allow_transparent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/check.rs	/^fn allow_transparent(field: &Field, derive: Derive) -> bool {$/;"	f
altzone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^    static altzone: time_t;$/;"	v
altzone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static altzone: time_t;$/;"	v	module:inner
am_pm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn am_pm(locale: Locale) -> &'static [&'static str] {$/;"	f
anchor_id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    anchor_id: usize,$/;"	m	struct:Parser
anchor_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    anchor_map: BTreeMap<usize, Yaml>,$/;"	m	struct:YamlLoader
anchors	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    anchors: HashMap<String, usize>,$/;"	m	struct:Parser
and_hms	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms(&self, hour: u32, min: u32, sec: u32) -> DateTime<Tz> {$/;"	P	implementation:Date
and_hms	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms(&self, hour: u32, min: u32, sec: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_hms_micro	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_micro(&self, hour: u32, min: u32, sec: u32, micro: u32) -> DateTime<Tz> {$/;"	P	implementation:Date
and_hms_micro	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_micro(&self, hour: u32, min: u32, sec: u32, micro: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_hms_micro_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_micro_opt($/;"	P	implementation:Date
and_hms_micro_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_micro_opt($/;"	P	implementation:NaiveDate
and_hms_micro_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_hms_micro_opt($/;"	P	implementation:LocalResult
and_hms_milli	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_milli(&self, hour: u32, min: u32, sec: u32, milli: u32) -> DateTime<Tz> {$/;"	P	implementation:Date
and_hms_milli	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_milli(&self, hour: u32, min: u32, sec: u32, milli: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_hms_milli_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_milli_opt($/;"	P	implementation:Date
and_hms_milli_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_milli_opt($/;"	P	implementation:NaiveDate
and_hms_milli_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_hms_milli_opt($/;"	P	implementation:LocalResult
and_hms_nano	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_nano(&self, hour: u32, min: u32, sec: u32, nano: u32) -> DateTime<Tz> {$/;"	P	implementation:Date
and_hms_nano	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_nano(&self, hour: u32, min: u32, sec: u32, nano: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_hms_nano_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_nano_opt($/;"	P	implementation:Date
and_hms_nano_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_nano_opt($/;"	P	implementation:NaiveDate
and_hms_nano_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_hms_nano_opt($/;"	P	implementation:LocalResult
and_hms_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_hms_opt(&self, hour: u32, min: u32, sec: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:Date
and_hms_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_hms_opt(&self, hour: u32, min: u32, sec: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDate
and_hms_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_hms_opt(self, hour: u32, min: u32, sec: u32) -> LocalResult<DateTime<Tz>> {$/;"	P	implementation:LocalResult
and_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn and_time(&self, time: NaiveTime) -> Option<DateTime<Tz>> {$/;"	P	implementation:Date
and_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn and_time(&self, time: NaiveTime) -> NaiveDateTime {$/;"	P	implementation:NaiveDate
and_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn and_time(self, time: NaiveTime) -> LocalResult<DateTime<Tz>> {$/;"	P	implementation:LocalResult
anyhow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/macros.rs	/^macro_rules! anyhow {$/;"	M
anyhow_kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^    fn anyhow_kind(&self) -> Adhoc {$/;"	P	interface:AdhocKind
anyhow_kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^    fn anyhow_kind(&self) -> Boxed {$/;"	P	interface:BoxedKind
anyhow_kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^    fn anyhow_kind(&self) -> Trait {$/;"	P	interface:TraitKind
app_from_crate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! app_from_crate {$/;"	M
app_send_sync	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/tests.rs	/^fn app_send_sync() {$/;"	f
app_settings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod app_settings;$/;"	n
app_settings_fromstr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    fn app_settings_fromstr() {$/;"	f	module:test
append	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^fn append(value: &mut String, first: &mut bool, should: bool, element: &str) {$/;"	f
append	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn append(&mut self, item: T) -> TreeIndex {$/;"	P	implementation:Tree
append	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    append: bool,$/;"	m	struct:Builder
append	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    pub fn append(&mut self, append: bool) -> &mut Self {$/;"	P	implementation:Builder
append_code_text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn append_code_text(&mut self, remaining_space: usize, start: usize, end: usize) {$/;"	P	implementation:FirstPass
append_entry_by_nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn append_entry_by_nid(&mut self, field: Nid, value: &str) -> Result<(), ErrorStack> {$/;"	P	implementation:X509NameBuilder
append_entry_by_nid_with_type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn append_entry_by_nid_with_type($/;"	P	implementation:X509NameBuilder
append_entry_by_text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn append_entry_by_text(&mut self, field: &str, value: &str) -> Result<(), ErrorStack> {$/;"	P	implementation:X509NameBuilder
append_entry_by_text_with_type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn append_entry_by_text_with_type($/;"	P	implementation:X509NameBuilder
append_extension	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn append_extension(&mut self, extension: X509Extension) -> Result<(), ErrorStack> {$/;"	P	implementation:X509Builder
append_extension2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn append_extension2(&mut self, extension: &X509ExtensionRef) -> Result<(), ErrorStack> /;"	P	implementation:X509Builder
append_html_line	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn append_html_line(&mut self, remaining_space: usize, start: usize, end: usize) {$/;"	P	implementation:FirstPass
append_keys	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^fn append_keys(keys: &mut Vec<Key>, arg: &Arg, index: usize) {$/;"	f
append_text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub(crate) fn append_text(&mut self, start: usize, end: usize) {$/;"	P	implementation:Tree
append_val	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn append_val(&mut self, val: OsString) {$/;"	P	implementation:MatchedArg
append_val_to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    fn append_val_to(&mut self, arg: &Id, val: OsString, ty: ValueSource) {$/;"	P	implementation:ArgMatcher
apply_to_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    pub fn apply_to_field(&self, field: &str) -> String {$/;"	P	implementation:RenameRule
apply_to_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    pub fn apply_to_variant(&self, variant: &str) -> String {$/;"	P	implementation:RenameRule
arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn arg<T: Key>(mut self, arg_id: T) -> Self {$/;"	P	implementation:ArgGroup
arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn arg<A: Into<Arg<'help>>>(mut self, a: A) -> Self {$/;"	P	implementation:App
arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod arg;$/;"	n
arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! arg {$/;"	M
arg_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! arg_enum {$/;"	M
arg_from_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn arg_from_usage(self, usage: &'help str) -> Self {$/;"	P	implementation:App
arg_group	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod arg_group;$/;"	n
arg_group_send_sync	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    fn arg_group_send_sync() {$/;"	f	module:test
arg_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! arg_impl {$/;"	M
arg_matcher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/mod.rs	/^mod arg_matcher;$/;"	n
arg_matches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/mod.rs	/^mod arg_matches;$/;"	n
arg_names	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn arg_names(&self) -> indexmap::map::Keys<Id, MatchedArg> {$/;"	P	implementation:ArgMatcher
arg_next_line_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn arg_next_line_help(&self, arg: &Arg<'help>, spec_vals: &str, longest: usize) -> bool {$/;"	P	implementation:Help
arg_predicate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod arg_predicate;$/;"	n
arg_required_else_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn arg_required_else_help(self, yes: bool) -> Self {$/;"	P	implementation:App
arg_send_sync	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/tests.rs	/^fn arg_send_sync() {$/;"	f
arg_settings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod arg_settings;$/;"	n
arg_settings_fromstr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    fn arg_settings_fromstr() {$/;"	f	module:test
args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn args<T: Key>(mut self, ns: &[T]) -> Self {$/;"	P	implementation:ArgGroup
args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    args: MKeyMap<'help>,$/;"	m	struct:App
args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn args<I, T>(mut self, args: I) -> Self$/;"	P	implementation:App
args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    args: Vec<Arg<'help>>,$/;"	m	struct:MKeyMap
args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    pub(crate) fn args(&self) -> impl Iterator<Item = &Arg<'help>> {$/;"	P	implementation:MKeyMap
args_conflicts_with_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn args_conflicts_with_subcommands(self, yes: bool) -> Self {$/;"	P	implementation:App
args_from_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn args_from_usage(mut self, usage: &'help str) -> Self {$/;"	P	implementation:App
args_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    pub(crate) fn args_mut<'map>(&'map mut self) -> impl Iterator<Item = &'map mut Arg<'help>> {$/;"	P	implementation:MKeyMap
args_override_self	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn args_override_self(self, yes: bool) -> Self {$/;"	P	implementation:App
args_present	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn args_present(&self) -> bool {$/;"	P	implementation:ArgMatches
argument_conflict	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn argument_conflict($/;"	P	implementation:Error
argument_not_found_auto	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn argument_not_found_auto(arg: String) -> Self {$/;"	P	implementation:Error
array_impls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! array_impls {$/;"	M
array_impls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^macro_rules! array_impls {$/;"	M
as_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    pub fn as_bytes(&self) -> Option<&[u8]> {$/;"	P	implementation:Body
as_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    pub fn as_bytes(&self) -> Option<&[u8]> {$/;"	P	implementation:Body
as_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    pub fn as_bytes(&self) -> Option<&[u8]> {$/;"	P	implementation:Body
as_f64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    pub fn as_f64(&self) -> Option<f64> {$/;"	P	implementation:Yaml
as_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn as_file(&self) -> &File {$/;"	P	implementation:NamedTempFile
as_file_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn as_file_mut(&mut self) -> &mut File {$/;"	P	implementation:NamedTempFile
as_hex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^fn as_hex(c: char) -> u32 {$/;"	f
as_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn as_ptr(self) -> *const T {$/;"	f
as_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^    pub fn as_ptr(&self) -> *mut ffi::BIO {$/;"	P	implementation:MemBio
as_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^    pub fn as_ptr(&self) -> *mut ffi::BIO {$/;"	P	implementation:MemBioSlice
as_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/conf.rs	/^    pub fn as_ptr(&self) -> *mut ffi::CONF_METHOD {$/;"	P	implementation:ConfMethod
as_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn as_ptr(&self) -> *const ffi::EVP_MD {$/;"	P	implementation:MessageDigest
as_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn as_ptr(&self) -> *mut ffi::SSL_CIPHER {$/;"	P	implementation:SslCipher
as_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn as_ptr(&self) -> *const ffi::SSL_METHOD {$/;"	P	implementation:SslMethod
as_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn as_ptr(&self) -> *mut ffi::SSL_CTX {$/;"	P	implementation:SslContextBuilder
as_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn as_ptr(&self) -> *mut T::StackType {$/;"	P	implementation:Stack
as_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn as_ptr(&self) -> *const ffi::EVP_CIPHER {$/;"	P	implementation:Cipher
as_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn as_ptr(&self) -> *mut ffi::X509V3_CTX {$/;"	P	implementation:X509v3Context
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:Asn1Type
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ex_data.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:Index
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:Nid
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:OcspCertStatus
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:OcspResponseStatus
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:OcspRevokedStatus
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:Id
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:Padding
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn as_raw(&self) -> c_int {$/;"	P	implementation:RsaPssSaltlen
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/srtp.rs	/^    pub fn as_raw(&self) -> c_ulong {$/;"	P	implementation:SrtpProfileId
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:ErrorCode
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:NameType
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:SslFiletype
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:StatusType
as_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn as_raw(&self) -> c_int {$/;"	P	implementation:X509VerifyResult
as_raw_fd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn as_raw_fd(&self) -> std::os::unix::io::RawFd {$/;"	P	implementation:NamedTempFile
as_raw_handle	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn as_raw_handle(&self) -> std::os::windows::io::RawHandle {$/;"	P	implementation:NamedTempFile
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    fn as_ref(&self) -> &(dyn StdError + 'static) {$/;"	P	implementation:Error
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    fn as_ref(&self) -> &(dyn StdError + Send + Sync + 'static) {$/;"	P	implementation:Error
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	P	implementation:DigestBytes
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn as_ref(&self) -> &[u8] {$/;"	P	implementation:stateless::Outgoing
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn as_ref(&self) -> &StackRef<T> {$/;"	P	implementation:Stack
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	P	implementation:OpensslString
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^    fn as_ref(&self) -> &[u8] {$/;"	P	implementation:OpensslStringRef
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:OpensslString
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:OpensslStringRef
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    fn as_ref(&self) -> &X509Ref {$/;"	P	implementation:X509Ref
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:CowStr
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn as_ref(&self) -> &str {$/;"	P	implementation:InlineStr
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^    fn as_ref(&self) -> &TokenStream {$/;"	P	implementation:Fragment
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^    fn as_ref(&self) -> &Path {$/;"	P	implementation:TempDir
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn as_ref(&self) -> &OsStr {$/;"	P	implementation:TempPath
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn as_ref(&self) -> &Path {$/;"	P	implementation:NamedTempFile
as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn as_ref(&self) -> &Path {$/;"	P	implementation:TempPath
as_slice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn as_slice(&self) -> &[u8] {$/;"	P	implementation:Asn1BitStringRef
as_slice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn as_slice(&self) -> &[u8] {$/;"	P	implementation:Asn1Object
as_slice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn as_slice(&self) -> &[u8] {$/;"	P	implementation:Asn1StringRef
as_stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn as_stack(&self) -> *mut OPENSSL_STACK {$/;"	P	implementation:StackRef
as_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^    fn as_str(&self) -> &str {$/;"	P	implementation:Buf
as_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    pub fn as_str(self) -> Option<&'static str> {$/;"	P	implementation:ErrorKind
as_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    fn as_str(&self) -> &str {$/;"	P	implementation:ErrorKind
as_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    pub(super) fn as_str(&self) -> Option<&'static str> {$/;"	P	implementation:Accepts
as_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^    fn as_str(&self) -> &str {$/;"	P	implementation:String
as_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^    fn as_str(&self) -> &str {$/;"	P	implementation:Url
as_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^    fn as_str(&self) -> &str {$/;"	P	implementation:str
as_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^    fn as_str(&self) -> &str;$/;"	P	interface:IntoUrlSealed
as_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/format.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Buf
as_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/utf8.rs	/^    pub fn as_str(&self) -> &str {$/;"	P	implementation:Encode
as_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub fn as_str(&self) -> Option<&str> {$/;"	P	implementation:content::Content
as_utf8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn as_utf8(&self) -> Result<OpensslString, ErrorStack> {$/;"	P	implementation:Asn1StringRef
ascii	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^    fn ascii() {$/;"	f	module:test
asctime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn asctime(&self) -> TmFmt {$/;"	P	implementation:Tm
asn1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod asn1;$/;"	n
assert_app	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^pub(crate) fn assert_app(cmd: &Command) {$/;"	f
assert_app_flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^fn assert_app_flags(cmd: &Command) {$/;"	f
assert_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^fn assert_arg(arg: &Arg) {$/;"	f
assert_arg_flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^fn assert_arg_flags(arg: &Arg) {$/;"	f
assert_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs	/^    fn assert_clone<T: Clone>() {}$/;"	f	function:_assert_impls
assert_defaults	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^fn assert_defaults<'d>($/;"	f
assert_no_utf8_validation	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^fn assert_no_utf8_validation(arg: &MatchedArg, id: &Id) {$/;"	f
assert_send	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    fn assert_send<T: Send>() {}$/;"	f	module:tests
assert_send	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs	/^    fn assert_send<T: Send>() {}$/;"	f	function:_assert_impls
assert_sync	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    fn assert_sync<T: Sync>() {}$/;"	f	module:tests
assert_sync	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs	/^    fn assert_sync<T: Sync>() {}$/;"	f	function:_assert_impls
assert_utf8_validation	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^fn assert_utf8_validation(arg: &MatchedArg, id: &Id) {$/;"	f
associated_type_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^        associated_type_usage: Vec<&'ast syn::TypePath>,$/;"	m	struct:with_bound::FindTyParams
ast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/mod.rs	/^pub mod ast;$/;"	n
at	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn at(clock: Timespec) -> Tm {$/;"	f
at_most_one	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn at_most_one(mut self) -> Result<Option<T>, ()> {$/;"	P	implementation:VecAttr
at_utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn at_utc(clock: Timespec) -> Tm {$/;"	f
atomic_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! atomic_impl {$/;"	M
atomic_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^macro_rules! atomic_impl {$/;"	M
attr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/mod.rs	/^pub mod attr;$/;"	n
attrs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub attrs: attr::Container,$/;"	m	struct:Container
attrs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub attrs: attr::Field,$/;"	m	struct:Field
attrs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub attrs: attr::Variant,$/;"	m	struct:Variant
augment_args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn augment_args(cmd: Command<'_>) -> Command<'_> {$/;"	P	implementation:Box
augment_args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn augment_args(cmd: Command<'_>) -> Command<'_>;$/;"	P	interface:Args
augment_args_for_update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn augment_args_for_update(cmd: Command<'_>) -> Command<'_> {$/;"	P	implementation:Box
augment_args_for_update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn augment_args_for_update(cmd: Command<'_>) -> Command<'_>;$/;"	P	interface:Args
augment_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn augment_subcommands(cmd: Command<'_>) -> Command<'_> {$/;"	P	implementation:Box
augment_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn augment_subcommands(cmd: Command<'_>) -> Command<'_>;$/;"	P	interface:Subcommand
augment_subcommands_for_update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn augment_subcommands_for_update(cmd: Command<'_>) -> Command<'_> {$/;"	P	implementation:Box
augment_subcommands_for_update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn augment_subcommands_for_update(cmd: Command<'_>) -> Command<'_>;$/;"	P	interface:Subcommand
auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    auth: Option<HeaderValue>,$/;"	m	struct:Custom
author	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    author: Option<&'help str>,$/;"	m	struct:App
author	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn author<S: Into<&'help str>>(mut self, author: S) -> Self {$/;"	P	implementation:App
authority_info	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn authority_info(&self) -> Option<Stack<AccessDescription>> {$/;"	P	implementation:X509Ref
auto_sys_proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    auto_sys_proxy: bool,$/;"	m	struct:Config
backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^macro_rules! backtrace {$/;"	M
backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    fn backtrace(&self) -> Option<&Backtrace> {$/;"	f
backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    backtrace: Option<Backtrace>,$/;"	m	struct:ErrorImpl
backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    fn backtrace(&self) -> Option<&Backtrace> {$/;"	f
backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub fn backtrace(&self) -> &impl_backtrace!() {$/;"	P	implementation:Error
backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub(crate) unsafe fn backtrace(this: Ref<Self>) -> &Backtrace {$/;"	P	implementation:ErrorImpl
backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^mod backtrace;$/;"	n
backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^    fn backtrace(&self) -> Option<&crate::backtrace::Backtrace> {$/;"	P	implementation:BoxedError
backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    backtrace: Option<Backtrace>,$/;"	m	struct:ErrorInner
backtrace_if_absent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^macro_rules! backtrace_if_absent {$/;"	M
bad_type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn bad_type(self, what: Unsupported) -> S::Error {$/;"	f
bad_type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn bad_type(what: Unsupported) -> M::Error {$/;"	f
bail	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/macros.rs	/^macro_rules! bail {$/;"	M
base	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub base: HashMap<DirEntryAttr, DirEntryValue>,$/;"	m	struct:LsResult
base64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod base64;$/;"	n
base_url	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    pub base_url: String,$/;"	m	struct:Site
bash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/mod.rs	/^mod bash;$/;"	n
basic	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn basic(&self) -> Result<OcspBasicResponse, ErrorStack> {$/;"	P	implementation:OcspResponseRef
basic_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn basic_auth<U, P>(self, username: U, password: Option<P>) -> RequestBuilder$/;"	P	implementation:RequestBuilder
basic_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn basic_auth<U, P>(self, username: U, password: Option<P>) -> RequestBuilder$/;"	P	implementation:RequestBuilder
basic_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    pub fn basic_auth(mut self, username: &str, password: &str) -> Proxy {$/;"	P	implementation:Proxy
basic_delete_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn basic_delete_request() {$/;"	f	module:tests
basic_get_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn basic_get_request() {$/;"	f	module:tests
basic_head_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn basic_head_request() {$/;"	f	module:tests
basic_patch_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn basic_patch_request() {$/;"	f	module:tests
basic_post_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn basic_post_request() {$/;"	f	module:tests
basic_put_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn basic_put_request() {$/;"	f	module:tests
bearer_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn bearer_auth<T>(self, token: T) -> RequestBuilder$/;"	P	implementation:RequestBuilder
bearer_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn bearer_auth<T>(self, token: T) -> RequestBuilder$/;"	P	implementation:RequestBuilder
bearer_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn bearer_auth<T>(self, token: T) -> RequestBuilder$/;"	P	implementation:RequestBuilder
before_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    before_help: Option<&'help str>,$/;"	m	struct:App
before_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn before_help<S: Into<&'help str>>(mut self, help: S) -> Self {$/;"	P	implementation:App
before_long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    before_long_help: Option<&'help str>,$/;"	m	struct:App
before_long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn before_long_help<S: Into<&'help str>>(mut self, help: S) -> Self {$/;"	P	implementation:App
begin_list_item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    begin_list_item: bool,$/;"	m	struct:FirstPass
best_indent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    best_indent: usize,$/;"	m	struct:YamlEmitter
bf_cbc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn bf_cbc() -> Cipher {$/;"	P	implementation:Cipher
bf_cfb64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn bf_cfb64() -> Cipher {$/;"	P	implementation:Cipher
bf_ecb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn bf_ecb() -> Cipher {$/;"	P	implementation:Cipher
bf_ofb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn bf_ofb() -> Cipher {$/;"	P	implementation:Cipher
bin_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    bin_name: Option<String>,$/;"	m	struct:App
bin_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn bin_name<S: Into<String>>(mut self, name: S) -> Self {$/;"	P	implementation:App
bio	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^mod bio;$/;"	n
bio	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^mod bio;$/;"	n
bits	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn bits(&self) -> u32 {$/;"	f
bits	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn bits(&self) -> CipherBits {$/;"	P	implementation:SslCipherRef
blob	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    fn blob(&self) -> crate::Result<web_sys::Blob> {$/;"	P	implementation:Part
block_mapping_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn block_mapping_key(&mut self, first: bool) -> ParseResult {$/;"	P	implementation:Parser
block_mapping_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn block_mapping_value(&mut self) -> ParseResult {$/;"	P	implementation:Parser
block_scalar_breaks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn block_scalar_breaks(&mut self, indent: &mut usize, breaks: &mut String) -> ScanResult {$/;"	P	implementation:Scanner
block_sequence_entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn block_sequence_entry(&mut self, first: bool) -> ParseResult {$/;"	P	implementation:Parser
block_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    block_size: usize,$/;"	m	struct:Open
block_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    block_size: usize,$/;"	m	struct:Seal
block_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    block_size: usize,$/;"	m	struct:Crypter
block_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn block_size(&self) -> usize {$/;"	P	implementation:Cipher
bn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod bn;$/;"	n
bn_cvt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn bn_cvt() {$/;"	f	module:tests
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub body: ItemBody,$/;"	m	struct:Item
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/mod.rs	/^pub mod body;$/;"	n
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    body: Option<Body>,$/;"	m	struct:Request
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn body(&self) -> Option<&Body> {$/;"	P	implementation:Request
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn body<T: Into<Body>>(mut self, body: T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    body: Decoder,$/;"	m	struct:Response
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    body: (Box<dyn Read + Send>, Option<u64>),$/;"	m	struct:Sender
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/mod.rs	/^mod body;$/;"	n
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    body: Option<Body>,$/;"	m	struct:Request
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn body(&self) -> Option<&Body> {$/;"	P	implementation:Request
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn body<T: Into<Body>>(mut self, body: T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    body: Option<Pin<Box<dyn futures_util::io::AsyncRead + Send + Sync>>>,$/;"	m	struct:Response
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub(crate) fn body<E: Into<BoxError>>(e: E) -> Error {$/;"	f
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/mod.rs	/^mod body;$/;"	n
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    body: Option<Body>,$/;"	m	struct:Request
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn body(&self) -> Option<&Body> {$/;"	P	implementation:Request
body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn body<T: Into<Body>>(mut self, body: T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
body_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    body_length: Option<u64>,$/;"	m	struct:Part
body_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn body_mut(&mut self) -> &mut Option<Body> {$/;"	P	implementation:Request
body_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub(crate) fn body_mut(&mut self) -> &mut Decoder {$/;"	P	implementation:Response
body_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn body_mut(&mut self) -> &mut Option<Body> {$/;"	P	implementation:Request
body_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    fn body_mut(&mut self) -> Pin<&mut dyn futures_util::io::AsyncRead> {$/;"	P	implementation:Response
body_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn body_mut(&mut self) -> &mut Option<Body> {$/;"	P	implementation:Request
body_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn body_size() {$/;"	f	module:test
bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Deserialize<'de> for bool {$/;"	c
border_skip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^        fn border_skip() {$/;"	f	module:simd::simd_test
borrow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn borrow(&self) -> &StackRef<T> {$/;"	P	implementation:Stack
borrow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn borrow(&self) -> &str {$/;"	P	implementation:CowStr
borrow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    borrow: Option<syn::Meta>,$/;"	m	struct:Variant
borrow_cow_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^pub fn borrow_cow_bytes<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrow_cow_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^pub fn borrow_cow_str<'de: 'a, 'a, D, R>(deserializer: D) -> Result<R, D::Error>$/;"	f
borrowable_lifetimes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn borrowable_lifetimes($/;"	f
borrowed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    borrowed: BorrowedLifetimes,$/;"	m	struct:Parameters
borrowed_lifetimes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn borrowed_lifetimes(cont: &Container) -> BorrowedLifetimes {$/;"	f
borrowed_lifetimes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    borrowed_lifetimes: BTreeSet<syn::Lifetime>,$/;"	m	struct:Field
borrowed_lifetimes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn borrowed_lifetimes(&self) -> &BTreeSet<syn::Lifetime> {$/;"	P	implementation:Field
both	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    both: bool, \/\/ can both open and close$/;"	m	struct:InlineEl
bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/lib.rs	/^mod bound;$/;"	n
boundary	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn boundary(&self) -> &str {$/;"	P	implementation:Form
boundary	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn boundary(&self) -> &str {$/;"	P	implementation:FormParts
boundary	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn boundary(&self) -> &str {$/;"	P	implementation:Form
box_forwarded_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! box_forwarded_impl {$/;"	M
boxed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub unsafe fn boxed(self) -> Box<T> {$/;"	f
bputs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^unsafe extern "C" fn bputs<S: Write>(bio: *mut BIO, s: *const c_char) -> c_int {$/;"	f
bread	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^unsafe extern "C" fn bread<S: Read>(bio: *mut BIO, buf: *mut c_char, len: c_int) -> c_int {$/;"	f
brief	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/main.rs	/^fn brief(program: &str) -> String {$/;"	f
broken_link_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    broken_link_callback: BrokenLinkCallback<'input, 'callback>,$/;"	m	struct:Parser
broken_links_called_only_once	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn broken_links_called_only_once() {$/;"	f	module:test
brotli	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn brotli(mut self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
brotli	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn brotli(body: Body) -> Decoder {$/;"	P	implementation:Decoder
brotli	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn brotli(self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/utf8.rs	/^    buf: [u8; 4],$/;"	m	struct:Encode
buffer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    pub fn buffer(&mut self) -> Result<&[u8], crate::Error> {$/;"	P	implementation:Body
buffer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    buffer: VecDeque<char>,$/;"	m	struct:Scanner
buffer_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub buffer_size: usize,$/;"	m	struct:CopyOptions
buffer_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^    pub buffer_size: usize,$/;"	m	struct:CopyOptions
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/lib.rs	/^mod build;$/;"	n
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    pub fn build<T>($/;"	P	implementation:Pkcs12Builder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn build(self) -> Rsa<Private> {$/;"	P	implementation:RsaPrivateKeyBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn build(self) -> SslAcceptor {$/;"	P	implementation:SslAcceptorBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn build(self) -> SslConnector {$/;"	P	implementation:SslConnectorBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn build(self) -> SslContext {$/;"	P	implementation:SslContextBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn build(self) -> Client {$/;"	P	implementation:ClientBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn build(self) -> Server {$/;"	P	implementation:Builder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn build(&self) -> Result<X509Extension, ErrorStack> {$/;"	P	implementation:BasicConstraints
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn build(&self) -> Result<X509Extension, ErrorStack> {$/;"	P	implementation:ExtendedKeyUsage
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn build(&self) -> Result<X509Extension, ErrorStack> {$/;"	P	implementation:KeyUsage
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn build(&self, ctx: &X509v3Context<'_>) -> Result<X509Extension, ErrorStack> {$/;"	P	implementation:AuthorityKeyIdentifier
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn build(&self, ctx: &X509v3Context<'_>) -> Result<X509Extension, ErrorStack> {$/;"	P	implementation:SubjectAlternativeName
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn build(&self, ctx: &X509v3Context<'_>) -> Result<X509Extension, ErrorStack> {$/;"	P	implementation:SubjectKeyIdentifier
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn build(self) -> X509 {$/;"	P	implementation:X509Builder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn build(self) -> X509Name {$/;"	P	implementation:X509NameBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn build(self) -> X509Req {$/;"	P	implementation:X509ReqBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^    pub fn build(self) -> X509Store {$/;"	P	implementation:X509StoreBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn build(self) -> crate::Result<Client> {$/;"	P	implementation:ClientBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn build(self) -> crate::Result<Request> {$/;"	P	implementation:RequestBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn build(self) -> crate::Result<Client> {$/;"	P	implementation:ClientBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn build(self) -> crate::Result<Request> {$/;"	P	implementation:RequestBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn build(mut self) -> Result<Client, crate::Error> {$/;"	P	implementation:ClientBuilder
build	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn build(self) -> crate::Result<Request> {$/;"	P	implementation:RequestBuilder
build_conflict_err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn build_conflict_err($/;"	P	implementation:Validator
build_conflict_err_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn build_conflict_err_usage(&self, matcher: &ArgMatcher, conflicting_keys: &[Id]) -> String /;"	P	implementation:Validator
build_generics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn build_generics(cont: &Container, borrowed: &BorrowedLifetimes) -> syn::Generics {$/;"	f
build_generics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn build_generics(cont: &Container) -> syn::Generics {$/;"	f
builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    pub fn builder() -> Pkcs12Builder {$/;"	P	implementation:Pkcs12
builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn builder(method: SslMethod) -> Result<SslConnectorBuilder, ErrorStack> {$/;"	P	implementation:SslConnector
builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn builder(method: SslMethod) -> Result<SslContextBuilder, ErrorStack> {$/;"	P	implementation:SslContext
builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn builder(&self) -> ClientSslBuilder {$/;"	P	implementation:Client
builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn builder() -> Builder {$/;"	P	implementation:Server
builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn builder() -> Result<X509Builder, ErrorStack> {$/;"	P	implementation:X509
builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn builder() -> Result<X509NameBuilder, ErrorStack> {$/;"	P	implementation:X509Name
builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn builder() -> Result<X509ReqBuilder, ErrorStack> {$/;"	P	implementation:X509Req
builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn builder() -> ClientBuilder {$/;"	P	implementation:Client
builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn builder() -> ClientBuilder {$/;"	P	implementation:Client
builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub(crate) fn builder<E: Into<BoxError>>(e: E) -> Error {$/;"	f
builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn builder() -> ClientBuilder {$/;"	P	implementation:Client
built	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^    fn built() -> Command<'static> {$/;"	f	module:tests
built_on	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/version.rs	/^pub fn built_on() -> &'static str {$/;"	f
built_with_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^    fn built_with_version() -> Command<'static> {$/;"	f	module:tests
bwrite	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^unsafe extern "C" fn bwrite<S: Write>(bio: *mut BIO, buf: *const c_char, len: c_int) -> c_int {$/;"	f
by_index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn by_index<'a>(&'a mut self, file_number: usize) -> ZipResult<ZipFile<'a>> {$/;"	P	implementation:ZipArchive
by_index_decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn by_index_decrypt<'a>($/;"	P	implementation:ZipArchive
by_index_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn by_index_raw<'a>(&'a mut self, file_number: usize) -> ZipResult<ZipFile<'a>> {$/;"	P	implementation:ZipArchive
by_index_with_optional_password	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn by_index_with_optional_password<'a>($/;"	P	implementation:ZipArchive
by_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn by_mut(&mut self) -> Mut<T> {$/;"	f
by_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn by_mut(self) -> Mut<'a, T> {$/;"	f
by_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn by_name<'a>(&'a mut self, name: &str) -> ZipResult<ZipFile<'a>> {$/;"	P	implementation:ZipArchive
by_name_decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn by_name_decrypt<'a>($/;"	P	implementation:ZipArchive
by_name_with_optional_password	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn by_name_with_optional_password<'a>($/;"	P	implementation:ZipArchive
by_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn by_ref(&self) -> Ref<T> {$/;"	f
by_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn by_ref(self) -> Ref<'a, T> {$/;"	f
bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^    bytes: [MaybeUninit<u8>; 40],$/;"	m	struct:Buf
bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    bytes: &'a [u8],$/;"	m	struct:LineStart
bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn bytes<T>(value: T) -> Part$/;"	P	implementation:Part
bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub async fn bytes(self) -> crate::Result<Bytes> {$/;"	P	implementation:Response
bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn bytes<T>(value: T) -> Part$/;"	P	implementation:Part
bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn bytes(self) -> crate::Result<Bytes> {$/;"	P	implementation:Response
bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub fn bytes<T>(value: T) -> Part$/;"	P	implementation:Part
bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    pub async fn bytes(self) -> crate::Result<Bytes> {$/;"	P	implementation:Response
bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/format.rs	/^    bytes: &'a mut [u8],$/;"	m	struct:Buf
bytes_scanned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    pub(crate) fn bytes_scanned(&self) -> usize {$/;"	P	implementation:LineStart
bytes_stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub fn bytes_stream(self) -> impl futures_core::Stream<Item = crate::Result<Bytes>> {$/;"	P	implementation:Response
bytes_to_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs5.rs	/^    fn bytes_to_key() {$/;"	f	module:tests
bytes_to_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs5.rs	/^pub fn bytes_to_key($/;"	f
bytes_written	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    bytes_written: u64,$/;"	m	struct:ZipWriterStats
c	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    c: u8,      \/\/ b'*' or b'_'$/;"	m	struct:InlineEl
c_flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/version.rs	/^pub fn c_flags() -> &'static str {$/;"	f
ca	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    ca: Option<Stack<X509>>,$/;"	m	struct:Pkcs12Builder
ca	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    pub fn ca(&mut self, ca: Stack<X509>) -> &mut Self {$/;"	P	implementation:Pkcs12Builder
ca	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    ca: bool,$/;"	m	struct:BasicConstraints
ca	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn ca(&mut self) -> &mut BasicConstraints {$/;"	P	implementation:BasicConstraints
cached_ex_index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn cached_ex_index<T>() -> Index<Ssl, T>$/;"	P	implementation:Ssl
cached_ex_index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn cached_ex_index<T>() -> Index<SslContext, T>$/;"	P	implementation:SslContext
calc_indent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn calc_indent(text: &[u8], max: usize) -> (usize, usize) {$/;"	f
call	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^macro_rules! call {$/;"	M
call	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn call(&mut self, dst: Uri) -> Self::Future {$/;"	P	implementation:Connector
call	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn call(&mut self, dst: Uri) -> Self::Future {$/;"	P	implementation:HttpConnector
call	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn call(&mut self, name: Name) -> Self::Future {$/;"	f
call	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^    fn call(&mut self, name: hyper_dns::Name) -> Self::Future {$/;"	P	implementation:TrustDnsResolver
call	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn call<D: Dst>(&self, uri: &D) -> Option<ProxyScheme> {$/;"	P	implementation:Custom
call	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    macro_rules! call {$/;"	M	module:inner
callbacks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^mod callbacks;$/;"	n
capture	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        capture: UnsafeCell<Capture>,$/;"	m	struct:capture::LazilyResolvedCapture
capture	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        pub(crate) fn capture() -> Backtrace {$/;"	P	implementation:capture::Backtrace
capture	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^mod capture {$/;"	n
case	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/mod.rs	/^mod case;$/;"	n
case_insensitive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn case_insensitive(self, yes: bool) -> Self {$/;"	P	implementation:Arg
cast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn cast<U: CastTo>(self) -> Mut<'a, U::Target> {$/;"	f
cast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn cast<U: CastTo>(self) -> Own<U::Target> {$/;"	f
cast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn cast<U: CastTo>(self) -> Ref<'a, U::Target> {$/;"	f
categories	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    pub categories: HashSet<String>,$/;"	m	struct:Site
category	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub category: String,$/;"	m	struct:Page
cause	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn cause(&self) -> Option<&dyn Error> {$/;"	P	implementation:EmitError
cause	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn cause(&self) -> Option<&dyn Error> {$/;"	P	implementation:ScanError
cautious	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/size_hint.rs	/^pub fn cautious(hint: Option<usize>) -> usize {$/;"	f
cb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^    cb: Option<F>,$/;"	m	struct:CallbackState
cdata	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub cdata: usize,$/;"	m	struct:HtmlScanGuard
central_directory_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub central_directory_offset: u32,$/;"	m	struct:CentralDirectoryEnd
central_directory_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub central_directory_offset: u64,$/;"	m	struct:Zip64CentralDirectoryEnd
central_directory_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub central_directory_size: u32,$/;"	m	struct:CentralDirectoryEnd
central_directory_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub central_directory_size: u64,$/;"	m	struct:Zip64CentralDirectoryEnd
central_header_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn central_header_start(&self) -> u64 {$/;"	P	implementation:ZipFile
central_header_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub central_header_start: u64,$/;"	m	struct:ZipFileData
central_header_to_zip_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^pub(crate) fn central_header_to_zip_file<R: Read + io::Seek>($/;"	f
cert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    pub cert: X509,$/;"	m	struct:ParsedPkcs12
cert_algorithm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    pub fn cert_algorithm(&mut self, nid: Nid) -> &mut Self {$/;"	P	implementation:Pkcs12Builder
cert_store	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn cert_store(&self) -> &X509StoreBuilderRef {$/;"	P	implementation:SslContextBuilder
cert_store	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn cert_store(&self) -> &X509StoreRef {$/;"	P	implementation:SslContextRef
cert_store	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn cert_store() {$/;"	f
cert_store_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn cert_store_mut(&mut self) -> &mut X509StoreBuilderRef {$/;"	P	implementation:SslContextBuilder
certificate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn certificate(&self) -> Option<&X509Ref> {$/;"	P	implementation:SslContextRef
certificate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn certificate(&self) -> Option<&X509Ref> {$/;"	P	implementation:SslRef
certificate_from_der_invalid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    fn certificate_from_der_invalid() {$/;"	f	module:tests
certificate_from_pem_invalid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    fn certificate_from_pem_invalid() {$/;"	f	module:tests
certs_verification	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    certs_verification: bool,$/;"	m	struct:Config
ch	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn ch(&self) -> char {$/;"	P	implementation:Scanner
ch_is	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn ch_is(&self, c: char) -> bool {$/;"	P	implementation:Scanner
chacha20	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn chacha20() -> Cipher {$/;"	P	implementation:Cipher
chacha20_poly1305	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn chacha20_poly1305() -> Cipher {$/;"	P	implementation:Cipher
chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub fn chain(&self) -> Chain {$/;"	P	implementation:Error
chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub(crate) unsafe fn chain(this: Ref<Self>) -> Chain {$/;"	P	implementation:ErrorImpl
chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^mod chain;$/;"	n
chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    pub chain: Option<Stack<X509>>,$/;"	m	struct:ParsedPkcs12
chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn chain(&self) -> Option<&StackRef<X509>> {$/;"	P	implementation:X509StoreContextRef
char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn char(s: &str, c1: u8) -> ParseResult<&str> {$/;"	f
char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de> Deserialize<'de> for char {$/;"	c
char_from_codepoint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn char_from_codepoint(input: usize) -> Option<char> {$/;"	f
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    macro_rules! check {$/;"	M	function:test_parse
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn check((y1, m1, d1): (i32, u32, u32), (y2, m2, d2): (i32, u32, u32), diff: Duration) {$/;"	f	function:tests::test_date_sub
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn check((y1, m1, d1): (i32, u32, u32), rhs: Duration, ymd: Option<(i32, u32, u32)>) {$/;"	f	function:tests::test_date_add
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn check(year: i32, month: u32, day: u32, ordinal: u32) {$/;"	f	function:tests::test_date_fields
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn check($/;"	f	function:tests::test_datetime_add
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^        fn check(expected: bool, flags: YearFlags, month1: u32, day1: u32, month2: u32, day2: u3/;"	f	function:tests::test_mdf_valid
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^        fn check(expected: bool, flags: YearFlags, ordinal1: u32, ordinal2: u32) {$/;"	f	function:tests::test_of
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^        fn check(flags: YearFlags, month: u32, day: u32) {$/;"	f	function:tests::test_mdf_with_fields
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^        fn check(flags: YearFlags, ordinal: u32) {$/;"	f	function:tests::test_of_with_fields
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        macro_rules! check {$/;"	M	function:tests::test_time_add
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        macro_rules! check {$/;"	M	function:tests::test_time_sub
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    pub(crate) fn check(&self, status: StatusCode, next: &Url, previous: &[Url]) -> ActionKind {$/;"	P	implementation:Policy
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/check.rs	/^pub fn check(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ctxt.rs	/^    pub fn check(self) -> Result<(), Vec<syn::Error>> {$/;"	P	implementation:Ctxt
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/mod.rs	/^mod check;$/;"	n
check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^    check: u32,$/;"	m	struct:Crc32Reader
check_adjacent_tag_conflict	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/check.rs	/^fn check_adjacent_tag_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_and_create_directory	/mnt/c/Users/SamanthaC/rust/md_puppy/src/directory_handling.rs	/^pub fn check_and_create_directory(dir: &str) -> Result<()> {$/;"	f
check_expected_indices	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^        fn check_expected_indices(bytes: &[u8], expected: &[usize], skip: usize) {$/;"	f	module:simd::simd_test
check_explicit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn check_explicit<'a>(&self, arg: &Id, predicate: ArgPredicate<'a>) -> bool {$/;"	P	implementation:ArgMatcher
check_explicit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn check_explicit(&self, predicate: ArgPredicate) -> bool {$/;"	P	implementation:MatchedArg
check_flatten	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/check.rs	/^fn check_flatten(cx: &Ctxt, cont: &Container) {$/;"	f
check_flatten_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/check.rs	/^fn check_flatten_field(cx: &Ctxt, style: Style, field: &Field) {$/;"	f
check_for_config	/mnt/c/Users/SamanthaC/rust/md_puppy/src/directory_handling.rs	/^fn check_for_config() -> Result<()> {$/;"	f
check_for_help_and_version_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn check_for_help_and_version_char(&self, arg: char) -> Option<ParseResult> {$/;"	P	implementation:Parser
check_for_help_and_version_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn check_for_help_and_version_str(&self, arg: &RawOsStr) -> Option<ParseResult> {$/;"	P	implementation:Parser
check_for_static_folder	/mnt/c/Users/SamanthaC/rust/md_puppy/src/directory_handling.rs	/^fn check_for_static_folder(static_url: &str) -> Result<()> {$/;"	f
check_for_template	/mnt/c/Users/SamanthaC/rust/md_puppy/src/directory_handling.rs	/^fn check_for_template(template_url: &str) -> Result<()> {$/;"	f
check_from_and_try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/check.rs	/^fn check_from_and_try_from(cx: &Ctxt, cont: &mut Container) {$/;"	f
check_getter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/check.rs	/^fn check_getter(cx: &Ctxt, cont: &Container) {$/;"	f
check_identifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/check.rs	/^fn check_identifier(cx: &Ctxt, cont: &Container) {$/;"	f
check_internal_tag_field_name_conflict	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/check.rs	/^fn check_internal_tag_field_name_conflict(cx: &Ctxt, cont: &Container) {$/;"	f
check_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn check_key(&self) -> Result<(), ErrorStack> {$/;"	f
check_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn check_key(&self) -> Result<bool, ErrorStack> {$/;"	f
check_match	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^        fn check_match(method: CompressionMethod) {$/;"	f	function:test::to_display_fmt
check_match	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^        fn check_match(method: CompressionMethod) {$/;"	f	function:test::to_eq_from
check_matches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^    fn check_matches(&self) -> bool {$/;"	P	implementation:Crc32Reader
check_overflow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        fn check_overflow<E>(secs: u64, nanos: u32) -> Result<(), E>$/;"	f	method:Duration::deserialize
check_overflow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        fn check_overflow<E>(secs: u64, nanos: u32) -> Result<(), E>$/;"	f	method:SystemTime::deserialize
check_panic	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn check_panic(&mut self) {$/;"	P	implementation:SslStream
check_private_components	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ecdsa.rs	/^    fn check_private_components() {$/;"	f	module:test
check_private_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn check_private_key(&self) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
check_transparent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/check.rs	/^fn check_transparent(cx: &Ctxt, cont: &mut Container, derive: Derive) {$/;"	f
check_validity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn check_validity(&self, nsec: u32, maxsec: Option<u32>) -> Result<(), ErrorStack> {$/;"	P	implementation:OcspStatus
check_variant_skip_attrs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/check.rs	/^fn check_variant_skip_attrs(cx: &Ctxt, cont: &Container) {$/;"	f
checked_add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn checked_add(&self, rhs: &Duration) -> Option<Duration> {$/;"	P	implementation:Duration
checked_add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn checked_add(&mut self, a: &BigNumRef, b: &BigNumRef) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
checked_add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn checked_add(&self, rhs: &Duration) -> Option<Duration> {$/;"	P	implementation:Duration
checked_add_signed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<Date<Tz>> {$/;"	P	implementation:Date
checked_add_signed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
checked_add_signed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
checked_add_signed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn checked_add_signed(self, rhs: OldDuration) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
checked_div	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn checked_div($/;"	P	implementation:BigNumRef
checked_mul	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn checked_mul($/;"	P	implementation:BigNumRef
checked_rem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn checked_rem($/;"	P	implementation:BigNumRef
checked_sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn checked_sub(&self, rhs: &Duration) -> Option<Duration> {$/;"	P	implementation:Duration
checked_sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn checked_sub(&mut self, a: &BigNumRef, b: &BigNumRef) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
checked_sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn checked_sub(&self, rhs: &Duration) -> Option<Duration> {$/;"	P	implementation:Duration
checked_sub_signed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<Date<Tz>> {$/;"	P	implementation:Date
checked_sub_signed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
checked_sub_signed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
checked_sub_signed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn checked_sub_signed(self, rhs: OldDuration) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
checker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^    macro_rules! checker {$/;"	M	function:assert_app_flags
checker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^    macro_rules! checker {$/;"	M	function:assert_arg_flags
child	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub child: Option<TreeIndex>,$/;"	m	struct:Node
children	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/graph.rs	/^    children: Vec<usize>,$/;"	m	struct:Child
chunk	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub async fn chunk(&mut self) -> crate::Result<Option<Bytes>> {$/;"	P	implementation:Response
cipher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^fn cipher($/;"	f
cipher_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub fn cipher_name(std_name: &str) -> &'static str {$/;"	f
cipher_nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn cipher_nid(&self) -> Option<Nid> {$/;"	P	implementation:SslCipherRef
cipher_test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn cipher_test(ciphertype: super::Cipher, pt: &str, ct: &str, key: &str, iv: &str) {$/;"	f	module:tests
cipher_test_nopad	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn cipher_test_nopad(ciphertype: super::Cipher, pt: &str, ct: &str, key: &str, iv: &str) {$/;"	f	module:tests
clamp_day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn clamp_day(day: u32) -> u32 {$/;"	P	implementation:Mdf
clamp_month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn clamp_month(month: u32) -> u32 {$/;"	P	implementation:Mdf
clamp_ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn clamp_ordinal(ordinal: u32) -> u32 {$/;"	P	implementation:Of
clap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn clap<'help>() -> Command<'help> {$/;"	P	interface:Parser
clap_app	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! clap_app {$/;"	M
clap_error_impl_send_sync	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    mod clap_error_impl_send_sync {$/;"	n	module:tests
classes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub classes: Vec<&'a str>,$/;"	m	struct:HeadingAttributes
clear	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn clear(&mut self) {$/;"	P	implementation:BigNumRef
clear	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn clear(&mut self) {$/;"	P	implementation:CodeDelims
clear	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn clear(&mut self) {$/;"	P	implementation:LinkStack
clear_bit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn clear_bit(&mut self, n: i32) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
clear_ctx_options	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn clear_ctx_options() {$/;"	f
clear_flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/verify.rs	/^    pub fn clear_flags(&mut self, flags: X509VerifyFlags) -> Result<(), ErrorStack> {$/;"	P	implementation:X509VerifyParamRef
clear_options	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn clear_options(&mut self, option: SslOptions) -> SslOptions {$/;"	P	implementation:SslContextBuilder
cli	/mnt/c/Users/SamanthaC/rust/md_puppy/src/main.rs	/^mod cli;$/;"	n
client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn client(&self) -> ClientBuilder {$/;"	P	implementation:Server
client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/mod.rs	/^pub mod client;$/;"	n
client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    client: Client,$/;"	m	struct:RequestBuilder
client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/mod.rs	/^mod client;$/;"	n
client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    client: Client,$/;"	m	struct:RequestBuilder
client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/mod.rs	/^mod client;$/;"	n
client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    client: Client,$/;"	m	struct:RequestBuilder
client_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    client_auth: bool,$/;"	m	struct:ExtendedKeyUsage
client_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn client_auth(&mut self) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
client_ca_list	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn client_ca_list() {$/;"	f
client_hello	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn client_hello() {$/;"	f
client_hello_ciphers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn client_hello_ciphers(&self) -> Option<&[u8]> {$/;"	P	implementation:SslRef
client_hello_compression_methods	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn client_hello_compression_methods(&self) -> Option<&[u8]> {$/;"	P	implementation:SslRef
client_hello_isv2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn client_hello_isv2(&self) -> bool {$/;"	P	implementation:SslRef
client_hello_legacy_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn client_hello_legacy_version(&self) -> Option<SslVersion> {$/;"	P	implementation:SslRef
client_hello_random	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn client_hello_random(&self) -> Option<&[u8]> {$/;"	P	implementation:SslRef
client_hello_session_id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn client_hello_session_id(&self) -> Option<&[u8]> {$/;"	P	implementation:SslRef
client_random	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn client_random(&self, buf: &mut [u8]) -> usize {$/;"	P	implementation:SslRef
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:InternalNumeric
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:ArgGroup
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    fn clone(&self) -> TransitProcess {$/;"	P	implementation:TransitProcess
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^    fn clone(&self) -> TransitProcess {$/;"	P	implementation:TransitProcess
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    fn clone(&self) -> Dsa<T> {$/;"	P	implementation:Dsa
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    fn clone() {$/;"	f	module:test
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn clone(&self) -> EcKey<T> {$/;"	P	implementation:EcKey
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ex_data.rs	/^    fn clone(&self) -> Index<T, U> {$/;"	P	implementation:Index
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn clone(&self) -> DigestBytes {$/;"	P	implementation:DigestBytes
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn clone(&self) -> Hasher {$/;"	P	implementation:Hasher
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn clone(&self) -> PKey<T> {$/;"	P	implementation:PKey
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn clone(&self) -> Rsa<T> {$/;"	P	implementation:Rsa
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn clone() {$/;"	f	module:test
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:SslContext
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn clone(&self) -> SslSession {$/;"	P	implementation:SslSession
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    fn clone(&self) -> X509 {$/;"	P	implementation:X509
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:CowStr
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:CowStrDeserializer
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	P	implementation:StringDeserializer
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn clone(&self) -> Self {$/;"	f
clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn clone(&self) -> SteadyTime {$/;"	P	implementation:inner::unix::SteadyTime
clone_x509	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn clone_x509() {$/;"	f
cloning_allows_incremental_hashing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^    fn cloning_allows_incremental_hashing() {$/;"	f	module:test
close	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^    pub fn close(mut self) -> io::Result<()> {$/;"	P	implementation:TempDir
close	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn close(mut self) -> io::Result<()> {$/;"	P	implementation:TempPath
close	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn close(self) -> io::Result<()> {$/;"	P	implementation:NamedTempFile
cmac	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn cmac(cipher: &Cipher, key: &[u8]) -> Result<PKey<Private>, ErrorStack> {$/;"	P	implementation:PKey
cmd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    cmd: &'cmd Command<'help>,$/;"	m	struct:Help
cmd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^    cmd: &'cmd Command<'help>,$/;"	m	struct:Usage
cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn cmp(&self, other: &Date<Tz>) -> Ordering {$/;"	P	implementation:Date
cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn cmp(&self, other: &DateTime<Tz>) -> Ordering {$/;"	P	implementation:DateTime
cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn cmp(&self, other: &Arg) -> Ordering {$/;"	P	implementation:Arg
cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^    fn cmp(&self, other: &Self) -> Ordering {$/;"	P	implementation:Flag
cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn cmp(&self, oth: &BigNum) -> Ordering {$/;"	P	implementation:BigNum
cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn cmp(&self, oth: &BigNumRef) -> Ordering {$/;"	P	implementation:BigNumRef
cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn cmp(&self, other: &Tm) -> Ordering {$/;"	P	implementation:Tm
cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn cmp(&self, other: &SteadyTime) -> Ordering {$/;"	P	implementation:inner::unix::SteadyTime
cms	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod cms;$/;"	n
cms_encrypt_decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/cms.rs	/^    fn cms_encrypt_decrypt() {$/;"	f	module:test
code	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    code: c_ulong,$/;"	m	struct:Error
code	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    pub fn code(&self) -> c_ulong {$/;"	P	implementation:Error
code	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    pub fn code(&self) -> ErrorCode {$/;"	P	implementation:Error
code_block_kind_check_fenced	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn code_block_kind_check_fenced() {$/;"	f	module:test
code_block_kind_check_indented	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn code_block_kind_check_indented() {$/;"	f	module:test
code_signing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    code_signing: bool,$/;"	m	struct:ExtendedKeyUsage
code_signing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn code_signing(&mut self) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
cofactor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn cofactor() {$/;"	f	module:test
cofactor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn cofactor($/;"	P	implementation:EcGroupRef
col	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    col: usize,$/;"	m	struct:Marker
col	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn col(&self) -> usize {$/;"	P	implementation:Marker
collect_lifetimes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn collect_lifetimes(ty: &syn::Type, out: &mut BTreeSet<syn::Lifetime>) {$/;"	f
collect_lifetimes_from_tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn collect_lifetimes_from_tokens(tokens: TokenStream, out: &mut BTreeSet<syn::Lifetime>) {$/;"	f
collect_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn collect_map<K, V, I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
collect_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn collect_seq<I>(self, iter: I) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
collect_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn collect_str<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
collect_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> fmt::Result$/;"	P	implementation:Formatter
collect_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn collect_str<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
colno	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        colno: Option<u32>,$/;"	m	struct:capture::BacktraceSymbol
colon_or_space	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn colon_or_space(s: &str) -> ParseResult<&str> {$/;"	f
color	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn color(self, color: ColorChoice) -> Self {$/;"	P	implementation:App
color	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/mod.rs	/^pub(crate) mod color;$/;"	n
color_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    pub(crate) fn color_help(&self) -> ColorChoice {$/;"	P	implementation:Parser
color_when	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    color_when: ColorChoice,$/;"	m	struct:ErrorInner
color_when	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    color_when: ColorChoice,$/;"	m	struct:Colorizer
command	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod command;$/;"	n
command	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn command<'help>() -> Command<'help> {$/;"	P	interface:CommandFactory
command	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! command {$/;"	M
command	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^    pub command: Commands,$/;"	m	struct:Args
command_for_update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn command_for_update<'help>() -> Command<'help> {$/;"	P	interface:CommandFactory
comment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    comment: Vec<u8>,$/;"	m	struct:ZipArchive
comment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn comment(&self) -> &[u8] {$/;"	P	implementation:ZipArchive
comment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn comment(&self) -> &str {$/;"	P	implementation:ZipFile
comment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    comment: Vec<u8>,$/;"	m	struct:ZipWriter
common	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^mod common {$/;"	n
common_app	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^    fn common_app() -> Command<'static> {$/;"	f	module:tests
common_lifetime_patterns_allowed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn common_lifetime_patterns_allowed<'b>() {$/;"	f	module:test
compact	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    compact: bool,$/;"	m	struct:YamlEmitter
compact	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    pub fn compact(&mut self, compact: bool) {$/;"	P	implementation:escape_str::YamlEmitter
compare	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn compare(&self, other: &Self) -> Result<Ordering, ErrorStack> {$/;"	P	implementation:Asn1TimeRef
completions	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^    pub completions: Option<Shell>,$/;"	m	struct:Args
components_gf2m	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn components_gf2m($/;"	P	implementation:EcGroupRef
components_gfp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn components_gfp($/;"	P	implementation:EcGroupRef
compressed_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn compressed_size(&self) -> u64 {$/;"	P	implementation:ZipFile
compressed_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub compressed_size: u64,$/;"	m	struct:ZipFileData
compressed_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    compressed_size: u64,$/;"	m	struct:ZipRawValues
compression	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/lib.rs	/^mod compression;$/;"	n
compression	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn compression(&self) -> CompressionMethod {$/;"	P	implementation:ZipFile
compression_method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub compression_method: crate::compression::CompressionMethod,$/;"	m	struct:ZipFileData
compression_method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    compression_method: CompressionMethod,$/;"	m	struct:FileOptions
compression_method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn compression_method(mut self, method: CompressionMethod) -> FileOptions {$/;"	P	implementation:FileOptions
compute_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn compute_key(&self, public_key: &BigNumRef) -> Result<Vec<u8>, ErrorStack> {$/;"	f
compute_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn compute_length(&mut self) -> Option<u64> {$/;"	P	implementation:Form
compute_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn compute_length(&mut self) -> Option<u64> {$/;"	P	implementation:FormParts
compute_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub(crate) fn compute_length(&mut self) -> Option<u64> {$/;"	P	implementation:Form
compute_lookup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    pub(super) fn compute_lookup(options: &Options) -> [u8; 16] {$/;"	f	module:simd
compute_mask	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^    unsafe fn compute_mask(bytes: &[u8], offset: usize) -> i32 {$/;"	f	module:simd
conf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod conf;$/;"	n
config	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    config: Config,$/;"	m	struct:ClientBuilder
config	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    config: Arc<Config>,$/;"	m	struct:Client
config	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    config: Config,$/;"	m	struct:ClientBuilder
configure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn configure(&self) -> Result<ConnectConfiguration, ErrorStack> {$/;"	P	implementation:SslConnector
conflicts_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn conflicts_with<T: Key>(mut self, arg_id: T) -> Self {$/;"	P	implementation:Arg
conflicts_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn conflicts_with<T: Key>(mut self, id: T) -> Self {$/;"	P	implementation:ArgGroup
conflicts_with_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn conflicts_with_all(mut self, names: &[&str]) -> Self {$/;"	P	implementation:Arg
conflicts_with_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn conflicts_with_all(mut self, ns: &[&'help str]) -> Self {$/;"	P	implementation:ArgGroup
connect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn connect<S>(&self, domain: &str, stream: S) -> Result<SslStream<S>, HandshakeError<S>>$/;"	P	implementation:SslConnector
connect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn connect<S>(self, domain: &str, stream: S) -> Result<SslStream<S>, HandshakeError<S>>$/;"	P	implementation:ConnectConfiguration
connect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn connect(&mut self) -> Result<(), Error> {$/;"	P	implementation:SslStream
connect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn connect(mut self) -> Result<SslStream<S>, HandshakeError<S>> {$/;"	f
connect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn connect<S>(self, stream: S) -> Result<SslStream<S>, HandshakeError<S>>$/;"	P	implementation:Ssl
connect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn connect(self) -> SslStream<TcpStream> {$/;"	P	implementation:ClientBuilder
connect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn connect(self) -> SslStream<TcpStream> {$/;"	P	implementation:ClientSslBuilder
connect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(super) async fn connect($/;"	f	module:socks
connect_err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn connect_err(self) {$/;"	P	implementation:ClientBuilder
connect_err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn connect_err(self) {$/;"	P	implementation:ClientSslBuilder
connect_socks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    async fn connect_socks(&self, dst: Uri, proxy: ProxyScheme) -> Result<Conn, BoxError> {$/;"	P	implementation:Connector
connect_tcp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn connect_tcp(&self) -> TcpStream {$/;"	P	implementation:Server
connect_timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    connect_timeout: Option<Duration>,$/;"	m	struct:Config
connect_timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn connect_timeout(mut self, timeout: Duration) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
connect_timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn connect_timeout<T>(self, timeout: T) -> ClientBuilder$/;"	P	implementation:ClientBuilder
connect_via_proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    async fn connect_via_proxy($/;"	P	implementation:Connector
connect_with_maybe_proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    async fn connect_with_maybe_proxy(self, dst: Uri, is_proxy: bool) -> Result<Conn, BoxError> /;"	P	implementation:Connector
connected	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn connected(&self) -> Connected {$/;"	P	implementation:native_tls_conn::NativeTlsConn
connected	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn connected(&self) -> Connected {$/;"	P	implementation:rustls_tls_conn::RustlsTlsConn
connected	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn connected(&self) -> Connected {$/;"	P	implementation:verbose::Verbose
connected	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn connected(&self) -> Connected {$/;"	P	implementation:Conn
connection_verbose	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    connection_verbose: bool,$/;"	m	struct:Config
connection_verbose	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn connection_verbose(mut self, verbose: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
connection_verbose	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn connection_verbose(self, verbose: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
connector	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^mod connector;$/;"	n
connector_client_server_mozilla_intermediate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn connector_client_server_mozilla_intermediate() {$/;"	f
connector_client_server_mozilla_intermediate_v5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn connector_client_server_mozilla_intermediate_v5() {$/;"	f
connector_client_server_mozilla_modern	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn connector_client_server_mozilla_modern() {$/;"	f
connector_client_server_mozilla_modern_v5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn connector_client_server_mozilla_modern_v5() {$/;"	f
connector_invalid_hostname	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn connector_invalid_hostname() {$/;"	f
connector_invalid_no_hostname_verification	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn connector_invalid_no_hostname_verification() {$/;"	f
connector_no_hostname_can_disable_verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn connector_no_hostname_can_disable_verify() {$/;"	f
connector_no_hostname_still_verifies	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn connector_no_hostname_still_verifies() {$/;"	f
connector_valid_hostname	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn connector_valid_hostname() {$/;"	f
constrain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^pub fn constrain<T: ?Sized>(t: &T) -> &T {$/;"	f
construct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    unsafe fn construct<E>($/;"	P	implementation:Error
contains	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    pub(crate) fn contains<K>(&self, key: K) -> bool$/;"	P	implementation:MKeyMap
contains	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn contains(&self, arg: &Id) -> bool {$/;"	P	implementation:ArgMatcher
contains	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/graph.rs	/^    pub(crate) fn contains(&self, req: &T) -> bool {$/;"	f
contains	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn contains(&self, addr: IpAddr) -> bool {$/;"	P	implementation:IpMatcher
contains	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn contains(&self, domain: &str) -> bool {$/;"	P	implementation:DomainMatcher
contains	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn contains(&self, host: &str) -> bool {$/;"	P	implementation:NoProxy
contains_short	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn contains_short(&self, s: char) -> bool {$/;"	P	implementation:App
content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        content: &'a Content<'de>,$/;"	m	struct:content::ContentRefDeserializer
content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        content: Content<'de>,$/;"	m	struct:content::ContentDeserializer
content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub content: &'static str,$/;"	m	struct:content::TagContentOtherFieldVisitor
content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub content: &'static str,$/;"	m	struct:content::TagOrContentFieldVisitor
content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub content: Content<'de>,$/;"	m	struct:content::TaggedContent
content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^mod content {$/;"	n
content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^mod content {$/;"	n
content	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub content: String,$/;"	m	struct:Page
content_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    pub(crate) fn content_length(&self) -> Option<u64> {$/;"	P	implementation:Body
content_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub fn content_length(&self) -> Option<u64> {$/;"	P	implementation:Response
content_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn content_length(&self) -> Option<u64> {$/;"	P	implementation:Response
content_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    pub fn content_length(&self) -> Option<u64> {$/;"	P	implementation:Response
content_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub content_only: bool,$/;"	m	struct:CopyOptions
content_to_html	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub fn content_to_html(&mut self, template_path: &str) -> Result<()> {$/;"	P	implementation:Page
context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    fn context<C>(self, context: C) -> Result<T, Error>$/;"	P	implementation:Option
context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    fn context<C>(self, context: C) -> Result<T, Error>$/;"	f
context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub context: C,$/;"	m	struct:ContextError
context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub fn context<C>(self, context: C) -> Self$/;"	P	implementation:Error
context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^    fn context<C>(self, context: C) -> Result<T, Error>$/;"	P	interface:Context
context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^mod context;$/;"	n
context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    context: Vec<(ContextKind, ContextValue)>,$/;"	m	struct:ErrorInner
context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub fn context(&self) -> impl Iterator<Item = (ContextKind, &ContextValue)> {$/;"	P	implementation:Error
context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^mod context;$/;"	n
context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn context(&self) -> &SslContextRef {$/;"	P	implementation:SslAcceptor
context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn context(&self) -> &SslContextRef {$/;"	P	implementation:SslConnector
context_backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn context_backtrace<C>(e: Ref<ErrorImpl>) -> Option<&Backtrace>$/;"	f
context_chain_downcast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn context_chain_downcast<C>(e: Ref<ErrorImpl>, target: TypeId) -> Option<Ref<()>>$/;"	f
context_chain_downcast_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn context_chain_downcast_mut<C>(e: Mut<ErrorImpl>, target: TypeId) -> Option<Mut<()>>$/;"	f
context_chain_drop_rest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn context_chain_drop_rest<C>(e: Own<ErrorImpl>, target: TypeId)$/;"	f
context_downcast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn context_downcast<C, E>(e: Ref<ErrorImpl>, target: TypeId) -> Option<Ref<()>>$/;"	f
context_downcast_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn context_downcast_mut<C, E>(e: Mut<ErrorImpl>, target: TypeId) -> Option<Mut<()>>$/;"	f
context_drop_rest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn context_drop_rest<C, E>(e: Own<ErrorImpl>, target: TypeId)$/;"	f
continue_list	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn continue_list(&mut self, start: usize, ch: u8, index: u64) {$/;"	P	implementation:FirstPass
convert_datetime	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^pub fn convert_datetime(timestamp: &str) -> String {$/;"	f
convert_datetime_test	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    fn convert_datetime_test() {$/;"	f	module:tests
convert_from_http_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn convert_from_http_request() {$/;"	f	module:tests
convert_from_http_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn convert_from_http_request() {$/;"	f	module:tests
convert_url_authority_into_basic_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn convert_url_authority_into_basic_auth() {$/;"	f	module:tests
convert_url_authority_into_basic_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn convert_url_authority_into_basic_auth() {$/;"	f	module:tests
cookie_provider	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn cookie_provider<C: cookie::CookieStore + 'static>($/;"	P	implementation:ClientBuilder
cookie_provider	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn cookie_provider<C: crate::cookie::CookieStore + 'static>($/;"	P	implementation:ClientBuilder
cookie_store	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    cookie_store: Option<Arc<dyn cookie::CookieStore>>,$/;"	m	struct:ClientRef
cookie_store	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    cookie_store: Option<Arc<dyn cookie::CookieStore>>,$/;"	m	struct:Config
cookie_store	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn cookie_store(mut self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
cookie_store	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn cookie_store(self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
cookies	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub fn cookies<'a>(&'a self) -> impl Iterator<Item = cookie::Cookie<'a>> + 'a {$/;"	P	implementation:Response
cookies	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn cookies<'a>(&'a self) -> impl Iterator<Item = cookie::Cookie<'a>> + 'a {$/;"	P	implementation:Response
cookies	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    fn cookies(&self, url: &url::Url) -> Option<HeaderValue> {$/;"	P	implementation:Jar
cookies	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    fn cookies(&self, url: &url::Url) -> Option<HeaderValue>;$/;"	P	interface:CookieStore
copied_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub copied_bytes: u64,$/;"	m	struct:TransitProcess
copied_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^    pub copied_bytes: u64,$/;"	m	struct:TransitProcess
copied_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^    pub copied_bytes: u64,$/;"	m	struct:TransitProcess
copy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^pub fn copy<P, Q>(from: P, to: Q, options: &CopyOptions) -> Result<u64>$/;"	f
copy_inside	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub copy_inside: bool,$/;"	m	struct:CopyOptions
copy_items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^pub fn copy_items<P, Q>(from: &[P], to: Q, options: &dir::CopyOptions) -> Result<u64>$/;"	f
copy_items_with_progress	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^pub fn copy_items_with_progress<P, Q, F>($/;"	f
copy_static	/mnt/c/Users/SamanthaC/rust/md_puppy/src/directory_handling.rs	/^pub fn copy_static() -> Result<()> {$/;"	f
copy_static_test	/mnt/c/Users/SamanthaC/rust/md_puppy/src/directory_handling.rs	/^    fn copy_static_test() {$/;"	f	module:tests
copy_to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn copy_to<W: ?Sized>(&mut self, w: &mut W) -> crate::Result<u64>$/;"	P	implementation:Response
copy_with_progress	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub fn copy_with_progress<P, Q, F>($/;"	f
copy_with_progress	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^pub fn copy_with_progress<P, Q, F>($/;"	f
core	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/lib.rs	/^    mod core {$/;"	n	module:lib
correct_content_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn correct_content_length() {$/;"	f	module:tests
count	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    count: usize,$/;"	m	struct:InlineEl
count	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    count: usize,$/;"	m	struct:MapDeserializer
count	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    count: usize,$/;"	m	struct:SeqDeserializer
count_header_cols	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^fn count_header_cols($/;"	f
cow_char_to_cow_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn cow_char_to_cow_str() {$/;"	f	module:test_special_string
cow_str_to_cow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn cow_str_to_cow() {$/;"	f	module:test_special_string
cow_to_cow_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn cow_to_cow_str() {$/;"	f	module:test_special_string
cows	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    cows: Vec<CowStr<'a>>,$/;"	m	struct:Allocations
cowstr_char_to_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn cowstr_char_to_string() {$/;"	f	module:test_special_string
cowstr_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn cowstr_size() {$/;"	f	module:test_special_string
cp437	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/lib.rs	/^mod cp437;$/;"	n
crate_authors	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! crate_authors {$/;"	M
crate_description	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! crate_description {$/;"	M
crate_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! crate_name {$/;"	M
crate_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! crate_version {$/;"	M
crc32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/lib.rs	/^mod crc32;$/;"	n
crc32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn crc32(&self) -> u32 {$/;"	P	implementation:ZipFile
crc32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub crc32: u32,$/;"	m	struct:ZipFileData
crc32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    crc32: u32,$/;"	m	struct:ZipRawValues
crc32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    fn crc32(crc: Wrapping<u32>, input: u8) -> Wrapping<u32> {$/;"	P	implementation:ZipCryptoKeys
create	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        fn create(ip: usize) -> Backtrace {$/;"	P	implementation:capture::Backtrace
create	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn create($/;"	P	implementation:OcspResponse
create	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    fn create() {$/;"	f	module:test
create	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^unsafe extern "C" fn create(bio: *mut BIO) -> c_int {$/;"	f
create	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^pub(crate) fn create(path: PathBuf) -> io::Result<TempDir> {$/;"	f
create	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/other.rs	/^pub fn create(_dir: &Path) -> io::Result<File> {$/;"	f
create	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/unix.rs	/^pub fn create(dir: &Path) -> io::Result<File> {$/;"	f
create	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/windows.rs	/^pub fn create(dir: &Path) -> io::Result<File> {$/;"	f
create_category_index	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    pub fn create_category_index(&mut self, category: &str) -> String {$/;"	P	implementation:Site
create_category_links	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    pub fn create_category_links(&mut self) -> String {$/;"	P	implementation:Site
create_directory_test	/mnt/c/Users/SamanthaC/rust/md_puppy/src/directory_handling.rs	/^    fn create_directory_test() {$/;"	f	module:tests
create_flag_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_flag_usage() {$/;"	f	module:test
create_help_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^    fn create_help_usage(&self, incl_reqs: bool) -> String {$/;"	P	implementation:Usage
create_helper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/util.rs	/^pub fn create_helper<F, R>($/;"	f
create_html_escape_table	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^const fn create_html_escape_table() -> [u8; 256] {$/;"	f
create_index_page	/mnt/c/Users/SamanthaC/rust/md_puppy/src/page_creation.rs	/^pub fn create_index_page(filename: &str, category: &str) -> Result<()> {$/;"	f
create_lookup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^    const fn create_lookup() -> [u8; 16] {$/;"	f	module:simd
create_lut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^fn create_lut(options: &Options) -> LookupTable {$/;"	f
create_named	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/other.rs	/^pub fn create_named(_path: &Path, open_options: &mut OpenOptions) -> io::Result<File> {$/;"	f
create_named	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/unix.rs	/^pub fn create_named(path: &Path, open_options: &mut OpenOptions) -> io::Result<File> {$/;"	f
create_named	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/windows.rs	/^pub fn create_named(path: &Path, open_options: &mut OpenOptions) -> io::Result<File> {$/;"	f
create_named	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^pub(crate) fn create_named($/;"	f
create_node	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn create_node(&mut self, item: T) -> TreeIndex {$/;"	P	implementation:Tree
create_option_usage0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage0() {$/;"	f	module:test
create_option_usage1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage1() {$/;"	f	module:test
create_option_usage2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage2() {$/;"	f	module:test
create_option_usage3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage3() {$/;"	f	module:test
create_option_usage4	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage4() {$/;"	f	module:test
create_option_usage5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage5() {$/;"	f	module:test
create_option_usage6	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage6() {$/;"	f	module:test
create_option_usage7	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage7() {$/;"	f	module:test
create_option_usage8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage8() {$/;"	f	module:test
create_option_usage9	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage9() {$/;"	f	module:test
create_option_usage_both1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both1() {$/;"	f	module:test
create_option_usage_both2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both2() {$/;"	f	module:test
create_option_usage_both3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both3() {$/;"	f	module:test
create_option_usage_both4	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both4() {$/;"	f	module:test
create_option_usage_both5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both5() {$/;"	f	module:test
create_option_usage_both6	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both6() {$/;"	f	module:test
create_option_usage_both7	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both7() {$/;"	f	module:test
create_option_usage_both8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both8() {$/;"	f	module:test
create_option_usage_both_equals1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both_equals1() {$/;"	f	module:test
create_option_usage_both_equals2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both_equals2() {$/;"	f	module:test
create_option_usage_both_equals3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both_equals3() {$/;"	f	module:test
create_option_usage_both_equals4	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both_equals4() {$/;"	f	module:test
create_option_usage_both_equals5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both_equals5() {$/;"	f	module:test
create_option_usage_both_equals6	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both_equals6() {$/;"	f	module:test
create_option_usage_both_equals7	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both_equals7() {$/;"	f	module:test
create_option_usage_both_equals8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_both_equals8() {$/;"	f	module:test
create_option_usage_long1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long1() {$/;"	f	module:test
create_option_usage_long10	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long10() {$/;"	f	module:test
create_option_usage_long2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long2() {$/;"	f	module:test
create_option_usage_long3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long3() {$/;"	f	module:test
create_option_usage_long4	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long4() {$/;"	f	module:test
create_option_usage_long5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long5() {$/;"	f	module:test
create_option_usage_long6	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long6() {$/;"	f	module:test
create_option_usage_long7	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long7() {$/;"	f	module:test
create_option_usage_long8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long8() {$/;"	f	module:test
create_option_usage_long9	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long9() {$/;"	f	module:test
create_option_usage_long_equals1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long_equals1() {$/;"	f	module:test
create_option_usage_long_equals10	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long_equals10() {$/;"	f	module:test
create_option_usage_long_equals2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long_equals2() {$/;"	f	module:test
create_option_usage_long_equals3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long_equals3() {$/;"	f	module:test
create_option_usage_long_equals4	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long_equals4() {$/;"	f	module:test
create_option_usage_long_equals5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long_equals5() {$/;"	f	module:test
create_option_usage_long_equals6	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long_equals6() {$/;"	f	module:test
create_option_usage_long_equals7	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long_equals7() {$/;"	f	module:test
create_option_usage_long_equals8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long_equals8() {$/;"	f	module:test
create_option_usage_long_equals9	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_usage_long_equals9() {$/;"	f	module:test
create_option_with_vals1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_with_vals1() {$/;"	f	module:test
create_option_with_vals1_def	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_with_vals1_def() {$/;"	f	module:test
create_option_with_vals2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_with_vals2() {$/;"	f	module:test
create_option_with_vals3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_with_vals3() {$/;"	f	module:test
create_option_with_vals4	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_with_vals4() {$/;"	f	module:test
create_option_with_vals4_def	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_with_vals4_def() {$/;"	f	module:test
create_option_with_vals5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_option_with_vals5() {$/;"	f	module:test
create_page	/mnt/c/Users/SamanthaC/rust/md_puppy/src/page_creation.rs	/^pub fn create_page(input: &str) -> Result<()> {$/;"	f
create_positional_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_positional_usage() {$/;"	f	module:test
create_positional_usage0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn create_positional_usage0() {$/;"	f	module:test
create_smart_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^    fn create_smart_usage(&self, used: &[Id]) -> String {$/;"	P	implementation:Usage
create_unix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/unix.rs	/^fn create_unix(dir: &Path) -> io::Result<File> {$/;"	f
create_unlinked	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/unix.rs	/^fn create_unlinked(path: &Path) -> io::Result<File> {$/;"	f
create_usage_no_title	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^    pub(crate) fn create_usage_no_title(&self, used: &[Id]) -> String {$/;"	P	implementation:Usage
create_usage_with_title	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^    pub(crate) fn create_usage_with_title(&self, used: &[Id]) -> String {$/;"	P	implementation:Usage
critical	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    critical: bool,$/;"	m	struct:AuthorityKeyIdentifier
critical	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    critical: bool,$/;"	m	struct:BasicConstraints
critical	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    critical: bool,$/;"	m	struct:ExtendedKeyUsage
critical	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    critical: bool,$/;"	m	struct:KeyUsage
critical	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    critical: bool,$/;"	m	struct:SubjectAlternativeName
critical	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    critical: bool,$/;"	m	struct:SubjectKeyIdentifier
critical	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn critical(&mut self) -> &mut AuthorityKeyIdentifier {$/;"	P	implementation:AuthorityKeyIdentifier
critical	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn critical(&mut self) -> &mut BasicConstraints {$/;"	P	implementation:BasicConstraints
critical	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn critical(&mut self) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
critical	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn critical(&mut self) -> &mut KeyUsage {$/;"	P	implementation:KeyUsage
critical	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn critical(&mut self) -> &mut SubjectAlternativeName {$/;"	P	implementation:SubjectAlternativeName
critical	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn critical(&mut self) -> &mut SubjectKeyIdentifier {$/;"	P	implementation:SubjectKeyIdentifier
crl_sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    crl_sign: bool,$/;"	m	struct:KeyUsage
crl_sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn crl_sign(&mut self) -> &mut KeyUsage {$/;"	P	implementation:KeyUsage
crypto_reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    crypto_reader: Option<CryptoReader<'a>>,$/;"	m	struct:ZipFile
cstr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/unix.rs	/^pub fn cstr(path: &Path) -> io::Result<CString> {$/;"	f
ctime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn ctime(&self) -> TmFmt {$/;"	P	implementation:Tm
ctrl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^unsafe extern "C" fn ctrl<S: Write>($/;"	f
ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    ctx: *mut ffi::EVP_CIPHER_CTX,$/;"	m	struct:Open
ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    ctx: *mut ffi::EVP_CIPHER_CTX,$/;"	m	struct:Seal
ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    ctx: *mut ffi::EVP_MD_CTX,$/;"	m	struct:Hasher
ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^fn ctx(method: SslMethod) -> Result<SslContextBuilder, ErrorStack> {$/;"	f
ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    ctx: SslContext,$/;"	m	struct:Client
ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    ctx: SslContextBuilder,$/;"	m	struct:Builder
ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    ctx: SslContextBuilder,$/;"	m	struct:ClientBuilder
ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn ctx(&mut self) -> &mut SslContextBuilder {$/;"	P	implementation:Builder
ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn ctx(&mut self) -> &mut SslContextBuilder {$/;"	P	implementation:ClientBuilder
ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    ctx: *mut ffi::EVP_CIPHER_CTX,$/;"	m	struct:Crypter
ctxt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/mod.rs	/^mod ctxt;$/;"	n
cur	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    cur: Option<TreeIndex>,$/;"	m	struct:Tree
cur	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn cur(&self) -> Option<TreeIndex> {$/;"	P	implementation:Tree
cur_idx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    cur_idx: Cell<usize>,$/;"	m	struct:Parser
current	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    current: Option<(Event, Marker)>,$/;"	m	struct:Parser
current_cert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn current_cert(&self) -> Option<&X509Ref> {$/;"	P	implementation:X509StoreContextRef
current_cipher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn current_cipher(&self) -> Option<&SslCipherRef> {$/;"	P	implementation:SslRef
current_compression	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn current_compression(&self) -> Option<CompressionMethod> {$/;"	P	implementation:GenericZipWriter
current_disp_ord	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    current_disp_ord: Option<usize>,$/;"	m	struct:App
current_help_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    current_help_heading: Option<&'help str>,$/;"	m	struct:App
cursor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    cursor: usize,$/;"	m	struct:Input
curve_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn curve_name(&self) -> Option<Nid> {$/;"	P	implementation:EcGroupRef
custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn custom(val: c_int) -> RsaPssSaltlen {$/;"	P	implementation:RsaPssSaltlen
custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    pub fn custom<F, U: IntoProxyScheme>(fun: F) -> Proxy$/;"	P	implementation:Proxy
custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    pub fn custom<T>(policy: T) -> Self$/;"	P	implementation:Policy
custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn custom<T>(msg: T) -> Self$/;"	P	implementation:Error
custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/doc.rs	/^    fn custom<T>(_: T) -> Self$/;"	P	implementation:Error
custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn custom<T: Display>(_msg: T) -> Self {$/;"	P	implementation:Error
custom_extensions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn custom_extensions() {$/;"	f
custom_serde_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn custom_serde_path(&self) -> Option<&syn::Path> {$/;"	P	implementation:Container
cvt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^fn cvt(r: c_int) -> Result<c_int, ErrorStack> {$/;"	f
cvt_err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/unix.rs	/^pub fn cvt_err(result: Result<usize, syscall::Error>) -> io::Result<usize> {$/;"	f
cvt_err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/unix.rs	/^pub fn cvt_err(result: c_int) -> io::Result<c_int> {$/;"	f
cvt_n	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^fn cvt_n(r: c_int) -> Result<c_int, ErrorStack> {$/;"	f
cvt_p	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^fn cvt_p<T>(r: *mut T) -> Result<*mut T, ErrorStack> {$/;"	f
cx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    cx: &'c Ctxt,$/;"	m	struct:Attr
cx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    cx: &'c Ctxt,$/;"	m	struct:VecAttr
cycle_to_yo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub fn cycle_to_yo(cycle: u32) -> (u32, u32) {$/;"	f
d	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn d(&self) -> &BigNumRef {$/;"	f
d_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn d_fmt(locale: Locale) -> &'static str {$/;"	f
d_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    d_fmt: Fmt<'a>,$/;"	m	struct:StrftimeItems
d_t_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn d_t_fmt(locale: Locale) -> &'static str {$/;"	f
d_t_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    d_t_fmt: Fmt<'a>,$/;"	m	struct:StrftimeItems
danger_accept_invalid_certs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn danger_accept_invalid_certs(mut self, accept_invalid_certs: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
danger_accept_invalid_certs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn danger_accept_invalid_certs(self, accept_invalid_certs: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
danger_accept_invalid_hostnames	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn danger_accept_invalid_hostnames($/;"	P	implementation:ClientBuilder
danger_accept_invalid_hostnames	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn danger_accept_invalid_hostnames(self, accept_invalid_hostname: bool) -> ClientBuilder/;"	P	implementation:ClientBuilder
data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    data: Option<Cow<'static, str>>,$/;"	m	struct:Error
data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    pub fn data(&self) -> Option<&str> {$/;"	P	implementation:Error
data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn data(&self) -> &Asn1StringRef {$/;"	P	implementation:X509NameEntryRef
data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub data: Data<'a>,$/;"	m	struct:Container
data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    data: Cow<'a, ZipFileData>,$/;"	m	struct:ZipFile
data_encipherment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    data_encipherment: bool,$/;"	m	struct:KeyUsage
data_encipherment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn data_encipherment(&mut self) -> &mut KeyUsage {$/;"	P	implementation:KeyUsage
data_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn data_start(&self) -> u64 {$/;"	P	implementation:ZipFile
data_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub data_start: u64,$/;"	m	struct:ZipFileData
date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    date: NaiveDate,$/;"	m	struct:Date
date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn date(&self) -> Date<Tz> {$/;"	P	implementation:DateTime
date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    date: Option<NaiveDate>,$/;"	m	struct:DelayedFormat
date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    mod date;$/;"	n	module:naive
date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod date;$/;"	n
date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    date: NaiveDate,$/;"	m	struct:NaiveDateTime
date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn date(&self) -> NaiveDate {$/;"	P	implementation:NaiveDateTime
date	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub date: String,$/;"	m	struct:Page
datepart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn datepart(&self) -> u16 {$/;"	P	implementation:DateTime
datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    datetime: NaiveDateTime,$/;"	m	struct:DateTime
datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    mod datetime;$/;"	n	module:naive
datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod datetime;$/;"	n
datetime_bounds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    fn datetime_bounds() {$/;"	f	module:test
datetime_default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    fn datetime_default() {$/;"	f	module:test
datetime_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn datetime_from_str(&self, s: &str, fmt: &str) -> ParseResult<DateTime<Self>> {$/;"	P	interface:TimeZone
datetime_from_time_bounds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    fn datetime_from_time_bounds() {$/;"	f	module:test
datetime_max	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    fn datetime_max() {$/;"	f	module:test
datetime_to_timespec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^fn datetime_to_timespec(d: &NaiveDateTime, local: bool) -> sys::Timespec {$/;"	f
day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn day(&self) -> u32 {$/;"	P	implementation:Date
day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn day(&self) -> u32 {$/;"	P	implementation:DateTime
day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub day: Option<u32>,$/;"	m	struct:Parsed
day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn day(&self) -> u32;$/;"	P	interface:Datelike
day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn day(&self) -> u32 {$/;"	P	implementation:NaiveDate
day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn day(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn day(&self) -> u32 {$/;"	P	implementation:Mdf
day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    day: u8,$/;"	m	struct:DateTime
day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn day(&self) -> u8 {$/;"	P	implementation:DateTime
day0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn day0(&self) -> u32 {$/;"	P	implementation:Date
day0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn day0(&self) -> u32 {$/;"	P	implementation:DateTime
day0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn day0(&self) -> u32;$/;"	P	interface:Datelike
day0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn day0(&self) -> u32 {$/;"	P	implementation:NaiveDate
day0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn day0(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
days	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn days(days: i64) -> Duration {$/;"	P	implementation:Duration
days	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub days: c_int,$/;"	m	struct:TimeDiff
days	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn days(days: i64) -> Duration {$/;"	P	implementation:Duration
days_from_now	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn days_from_now(days: u32) -> Result<Asn1Time, ErrorStack> {$/;"	P	implementation:Asn1Time
days_in_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn days_in_year(year: i32) -> i32 {$/;"	f
de	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/lib.rs	/^pub mod de;$/;"	n
de	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/mod.rs	/^pub mod de;$/;"	n
de	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/lib.rs	/^mod de;$/;"	n
de_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    de_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Container
de_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    de_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Field
de_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    de_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Variant
de_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Container
de_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Field
de_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn de_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Variant
de_lifetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    fn de_lifetime(&self) -> syn::Lifetime {$/;"	P	implementation:BorrowedLifetimes
de_lifetime_def	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    fn de_lifetime_def(&self) -> Option<syn::LifetimeDef> {$/;"	P	implementation:BorrowedLifetimes
debug	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^    pub(crate) unsafe fn debug(this: Ref<Self>, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ErrorImpl
debug	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! debug {$/;"	M
debug	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/macros.rs	/^macro_rules! debug {$/;"	M
debug_assert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn debug_assert(mut self) {$/;"	P	implementation:App
debug_asserts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod debug_asserts;$/;"	n
debug_tree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^        fn debug_tree<T>($/;"	f	function:fmt
decide_identifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn decide_identifier($/;"	f
decide_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn decide_tag($/;"	f
decipher_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    decipher_only: bool,$/;"	m	struct:KeyUsage
decipher_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn decipher_only(&mut self) -> &mut KeyUsage {$/;"	P	implementation:KeyUsage
declaration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub declaration: usize,$/;"	m	struct:HtmlScanGuard
declare_error_trait	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^macro_rules! declare_error_trait {$/;"	M
declare_error_trait	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^macro_rules! declare_error_trait {$/;"	M
decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<DateTime<FixedOffset>, D::Error> {$/;"	P	implementation:rustc_serialize::DateTime
decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<DateTime<Local>, D::Error> {$/;"	P	implementation:rustc_serialize::DateTime
decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<DateTime<Utc>, D::Error> {$/;"	P	implementation:rustc_serialize::DateTime
decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds<FixedOffset>, D::Error> {$/;"	P	implementation:rustc_serialize::TsSeconds
decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds<Local>, D::Error> {$/;"	P	implementation:rustc_serialize::TsSeconds
decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds<Utc>, D::Error> {$/;"	P	implementation:rustc_serialize::TsSeconds
decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<NaiveDate, D::Error> {$/;"	P	implementation:rustc_serialize::NaiveDate
decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<NaiveDateTime, D::Error> {$/;"	P	implementation:rustc_serialize::NaiveDateTime
decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<TsSeconds, D::Error> {$/;"	P	implementation:rustc_serialize::TsSeconds
decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn decode<D: Decoder>(d: &mut D) -> Result<NaiveTime, D::Error> {$/;"	P	implementation:rustc_serialize::NaiveTime
decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub(crate) fn decode<E: Into<BoxError>>(e: E) -> Error {$/;"	f
decode_block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/base64.rs	/^pub fn decode_block(src: &str) -> Result<Vec<u8>, ErrorStack> {$/;"	f
decode_io	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub(crate) fn decode_io(e: io::Error) -> Error {$/;"	f
decoded_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/base64.rs	/^fn decoded_len(src_len: c_int) -> Option<c_int> {$/;"	f
decoder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/mod.rs	/^pub mod decoder;$/;"	n
decrease_flow_level	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn decrease_flow_level(&mut self) {$/;"	P	implementation:Scanner
decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/cms.rs	/^    pub fn decrypt<T>(&self, pkey: &PKeyRef<T>, cert: &X509) -> Result<Vec<u8>, ErrorStack>$/;"	P	implementation:CmsContentInfoRef
decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn decrypt(&self, from: &[u8], to: &mut [u8]) -> Result<usize, ErrorStack> {$/;"	P	implementation:Decrypter
decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^    pub fn decrypt<PT>($/;"	P	implementation:Pkcs7Ref
decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^pub fn decrypt($/;"	f
decrypt_aead	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^pub fn decrypt_aead($/;"	f
decrypt_byte	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    fn decrypt_byte(&mut self, cipher_byte: u8) -> u8 {$/;"	P	implementation:ZipCryptoKeys
decrypt_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn decrypt_len(&self, from: &[u8]) -> Result<usize, ErrorStack> {$/;"	P	implementation:Decrypter
decrypt_without_cert_check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/cms.rs	/^    pub fn decrypt_without_cert_check<T>(&self, pkey: &PKeyRef<T>) -> Result<Vec<u8>, ErrorStack/;"	P	implementation:CmsContentInfoRef
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^    fn default() -> Self {$/;"	P	implementation:Chain
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn default() -> Parsed {$/;"	P	implementation:Parsed
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    fn default() -> Self {$/;"	P	implementation:AppFlags
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn default() -> Self {$/;"	P	implementation:ArgProvider
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn default() -> Self {$/;"	P	implementation:DisplayOrder
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    fn default() -> Self {$/;"	P	implementation:ArgFlags
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    fn default() -> Self {$/;"	P	implementation:App
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn default(&mut self, arg: &mut Arg<'help>) {$/;"	P	implementation:UsageParser
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    fn default() -> Self {$/;"	P	implementation:ValueHint
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    fn default() -> Self {$/;"	P	implementation:Style
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:GroupedValues
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:Indices
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:OsValues
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn default() -> Self {$/;"	P	implementation:Values
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    fn default() -> Self {$/;"	P	implementation:MatchedArg
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/color.rs	/^    fn default() -> Self {$/;"	P	implementation:ColorChoice
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    fn default() -> Self {$/;"	P	implementation:CopyOptions
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^    fn default() -> Self {$/;"	P	implementation:CopyOptions
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/conf.rs	/^    pub fn default() -> ConfMethod {$/;"	P	implementation:ConfMethod
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    fn default() -> AuthorityKeyIdentifier {$/;"	P	implementation:AuthorityKeyIdentifier
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    fn default() -> BasicConstraints {$/;"	P	implementation:BasicConstraints
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    fn default() -> ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    fn default() -> KeyUsage {$/;"	P	implementation:KeyUsage
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    fn default() -> SubjectAlternativeName {$/;"	P	implementation:SubjectAlternativeName
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    fn default() -> SubjectKeyIdentifier {$/;"	P	implementation:SubjectKeyIdentifier
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn default() -> Self {$/;"	P	implementation:ItemBody
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn default() -> Self {$/;"	P	implementation:Client
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn default() -> Self {$/;"	P	implementation:ClientBuilder
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn default() -> Accepts {$/;"	P	implementation:Accepts
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn default() -> Self {$/;"	P	implementation:Form
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    fn default() -> Self {$/;"	P	implementation:Client
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    fn default() -> Self {$/;"	P	implementation:ClientBuilder
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    fn default() -> Timeout {$/;"	P	implementation:Timeout
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn default() -> Self {$/;"	P	implementation:Form
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    fn default() -> Policy {$/;"	P	implementation:Policy
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    fn default() -> TlsBackend {$/;"	P	implementation:TlsBackend
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    fn default() -> Config {$/;"	P	implementation:Config
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    fn default() -> Self {$/;"	P	implementation:Client
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    fn default() -> Self {$/;"	P	implementation:ClientBuilder
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    fn default() -> Self {$/;"	P	implementation:Form
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    default: Default,$/;"	m	struct:Container
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    default: Default,$/;"	m	struct:Field
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn default(&self) -> &Default {$/;"	P	implementation:Container
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn default(&self) -> &Default {$/;"	P	implementation:Field
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    fn default() -> Self {$/;"	P	implementation:Builder
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    fn default() -> DateTime {$/;"	P	implementation:DateTime
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn default() -> Self {$/;"	P	implementation:FileOptions
default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn default() -> FileOptions {$/;"	P	implementation:FileOptions
default_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn default_headers(mut self, headers: HeaderMap) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
default_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn default_headers(self, headers: header::HeaderMap) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
default_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    async fn default_headers() {$/;"	f	module:tests
default_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn default_headers(mut self, headers: HeaderMap) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
default_headers_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    async fn default_headers_clone() {$/;"	f	module:tests
default_missing_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn default_missing_value(self, val: &'help str) -> Self {$/;"	P	implementation:Arg
default_missing_value_os	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn default_missing_value_os(self, val: &'help OsStr) -> Self {$/;"	P	implementation:Arg
default_missing_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn default_missing_values(self, vals: &[&'help str]) -> Self {$/;"	P	implementation:Arg
default_missing_values_os	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn default_missing_values_os(mut self, vals: &[&'help OsStr]) -> Self {$/;"	P	implementation:Arg
default_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn default_value(self, val: &'help str) -> Self {$/;"	P	implementation:Arg
default_value_end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^fn default_value_end(b: u8) -> bool {$/;"	f
default_value_if	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn default_value_if<T: Key>($/;"	P	implementation:Arg
default_value_if_os	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn default_value_if_os<T: Key>($/;"	P	implementation:Arg
default_value_ifs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn default_value_ifs<T: Key>($/;"	P	implementation:Arg
default_value_ifs_os	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn default_value_ifs_os<T: Key>($/;"	P	implementation:Arg
default_value_os	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn default_value_os(self, val: &'help OsStr) -> Self {$/;"	P	implementation:Arg
default_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn default_values(self, vals: &[&'help str]) -> Self {$/;"	P	implementation:Arg
default_values_os	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn default_values_os(mut self, vals: &[&'help OsStr]) -> Self {$/;"	P	implementation:Arg
default_verify_paths	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn default_verify_paths() {$/;"	f
define_as	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^macro_rules! define_as ($/;"	M
define_as_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^macro_rules! define_as_ref ($/;"	M
define_into	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^macro_rules! define_into ($/;"	M
deflate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn deflate(mut self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
deflate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn deflate(body: Body) -> Decoder {$/;"	P	implementation:Decoder
deflate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn deflate(self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
degree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn degree(&self) -> u32 {$/;"	P	implementation:EcGroupRef
delegate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^macro_rules! delegate {$/;"	M
delegate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    delegate: S,$/;"	m	struct:TaggedSerializer
delete	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn delete<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
delete	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn delete<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
delete	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn delete<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
delim_run_can_close	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^fn delim_run_can_close(s: &str, suffix: &str, run_len: usize, ix: usize) -> bool {$/;"	f
delim_run_can_open	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^fn delim_run_can_open(s: &str, suffix: &str, run_len: usize, ix: usize) -> bool {$/;"	f
deny_unknown_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    deny_unknown_fields: bool,$/;"	m	struct:Container
deny_unknown_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn deny_unknown_fields(&self) -> bool {$/;"	P	implementation:Container
depth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub depth: u64,$/;"	m	struct:CopyOptions
depth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub depth: u64,$/;"	m	struct:DirOptions
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Error
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub unsafe fn deref(self) -> &'a T {$/;"	f
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn deref(&self) -> &Self::Target {$/;"	P	implementation:rustc_serialize::TsSeconds
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn deref(&self) -> &Self::Target {$/;"	P	implementation:rustc_serialize::TsSeconds
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:ArgMatcher
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^    fn deref(&self) -> &Self::Target {$/;"	P	implementation:Id
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn deref(&self) -> &[u8] {$/;"	P	implementation:DigestBytes
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    fn deref(&self) -> &SslContextBuilder {$/;"	P	implementation:SslAcceptorBuilder
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    fn deref(&self) -> &SslContextBuilder {$/;"	P	implementation:SslConnectorBuilder
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    fn deref(&self) -> &SslRef {$/;"	P	implementation:ConnectConfiguration
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn deref(&self) -> &SslCipherRef {$/;"	P	implementation:SslCipher
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn deref(&self) -> &[u8] {$/;"	P	implementation:stateless::Outgoing
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn deref(&self) -> &StackRef<T> {$/;"	P	implementation:Stack
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^    fn deref(&self) -> &str {$/;"	P	implementation:OpensslStringRef
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn deref(&self) -> &str {$/;"	P	implementation:CowStr
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn deref(&self) -> &str {$/;"	P	implementation:InlineStr
deref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn deref(&self) -> &Path {$/;"	P	implementation:TempPath
deref_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^macro_rules! deref_impl {$/;"	M
deref_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    fn deref_mut(&mut self) -> &mut Self::Target {$/;"	P	implementation:Error
deref_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub unsafe fn deref_mut(self) -> &'a mut T {$/;"	f
deref_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn deref_mut(&mut self) -> &mut [u8] {$/;"	P	implementation:DigestBytes
deref_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    fn deref_mut(&mut self) -> &mut SslContextBuilder {$/;"	P	implementation:SslAcceptorBuilder
deref_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    fn deref_mut(&mut self) -> &mut SslContextBuilder {$/;"	P	implementation:SslConnectorBuilder
deref_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    fn deref_mut(&mut self) -> &mut SslRef {$/;"	P	implementation:ConnectConfiguration
deref_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn deref_mut(&mut self) -> &mut SslCipherRef {$/;"	P	implementation:SslCipher
deref_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn deref_mut(&mut self) -> &mut StackRef<T> {$/;"	P	implementation:Stack
derive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/lib.rs	/^mod derive;$/;"	n
derive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^    pub fn derive(&mut self, buf: &mut [u8]) -> Result<usize, ErrorStack> {$/;"	P	implementation:Deriver
derive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod derive;$/;"	n
derive_deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/lib.rs	/^pub fn derive_deserialize(input: TokenStream) -> TokenStream {$/;"	f
derive_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/lib.rs	/^pub fn derive_serialize(input: TokenStream) -> TokenStream {$/;"	f
derive_to_vec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^    pub fn derive_to_vec(&mut self) -> Result<Vec<u8>, ErrorStack> {$/;"	P	implementation:Deriver
derive_without_peer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^    fn derive_without_peer() {$/;"	f	module:test
des_cbc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn des_cbc() -> Cipher {$/;"	P	implementation:Cipher
des_ecb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn des_ecb() -> Cipher {$/;"	P	implementation:Cipher
des_ede3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn des_ede3() -> Cipher {$/;"	P	implementation:Cipher
des_ede3_cbc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn des_ede3_cbc() -> Cipher {$/;"	P	implementation:Cipher
des_ede3_cfb64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn des_ede3_cfb64() -> Cipher {$/;"	P	implementation:Cipher
description	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:ParseError
description	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:OutOfRangeError
description	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:RoundingError
description	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn description(&self) -> String {$/;"	P	implementation:SslCipherRef
description	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/doc.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:Error
description	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:OutOfRangeError
description	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:ParseError
description	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn description(&self) -> &str {$/;"	P	implementation:ScanError
description	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub description: String,$/;"	m	struct:Page
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde::DateTime
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<DateTime<Utc>, D::Error>$/;"	f	module:serde::ts_milliseconds
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<DateTime<Utc>, D::Error>$/;"	f	module:serde::ts_nanoseconds
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<DateTime<Utc>, D::Error>$/;"	f	module:serde::ts_seconds
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	f	module:serde::ts_milliseconds_option
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	f	module:serde::ts_nanoseconds_option
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	f	module:serde::ts_seconds_option
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:month_serde::Month
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:weekday_serde::Weekday
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde::NaiveDate
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde::NaiveDateTime
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<NaiveDateTime, D::Error>$/;"	f	module:serde::ts_milliseconds
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<NaiveDateTime, D::Error>$/;"	f	module:serde::ts_nanoseconds
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn deserialize<'de, D>(d: D) -> Result<NaiveDateTime, D::Error>$/;"	f	module:serde::ts_seconds
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde::NaiveTime
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:serde_impl::CowStr
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn deserialize<D>(deserializer: D) -> Result<IgnoredAny, D::Error>$/;"	P	implementation:IgnoredAny
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Duration::deserialize::Field
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SystemTime::deserialize::Field
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:deserialize::Field
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:range::Field
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(_deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Deserialize
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:CString
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Deserialize
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Duration
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:IpAddr
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:OsString
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:Path
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:PathBuf
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:PhantomData
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SocketAddr
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:String
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:SystemTime
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:T
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:bool
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:char
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:str
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:u8
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	f
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	interface:Deserialize
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:DeserializeSeed
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<T, D::Error>$/;"	f
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/seed.rs	/^    fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f	module:private
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize<D>(deserializer: D) -> Result<Self, D::Error>$/;"	P	implementation:content::Content
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagContentOtherFieldVisitor
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentFieldVisitor
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f	module:content
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    deserialize: RenameRule,$/;"	m	struct:RenameAllRules
deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    deserialize: String,$/;"	m	struct:Name
deserialize_adjacently_tagged_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_adjacently_tagged_enum($/;"	f
deserialize_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    deserialize_aliases: Vec<String>,$/;"	m	struct:Name
deserialize_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn deserialize_aliases(&self) -> Vec<String> {$/;"	P	implementation:Name
deserialize_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_any<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_any<V>(self, _visitor: V) -> Result<V::Value, E>$/;"	f	function:missing_field
deserialize_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn deserialize_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_bool<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_byte_buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_byte_buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_byte_buf<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_bytes<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_char<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_custom_identifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_custom_identifier($/;"	f
deserialize_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! deserialize_enum {$/;"	M
deserialize_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_enum<V>($/;"	P	interface:Deserializer
deserialize_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_enum<V>($/;"	f	module:content
deserialize_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn deserialize_enum<V>($/;"	f
deserialize_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_enum($/;"	f
deserialize_externally_tagged_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_externally_tagged_enum($/;"	f
deserialize_externally_tagged_newtype_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_externally_tagged_newtype_variant($/;"	f
deserialize_externally_tagged_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_externally_tagged_variant($/;"	f
deserialize_f32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_f32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_f32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_f64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_f64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_f64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_float	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_float<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_from(type_from: &syn::Type) -> Fragment {$/;"	f
deserialize_generated_identifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_generated_identifier($/;"	f
deserialize_i16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_i16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_i32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_i64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_i8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_i8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_i8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_identifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_identifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_identifier<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_identifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_identifier($/;"	f
deserialize_ignored_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_ignored_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_ignored_any<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_in_place	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	P	implementation:String
deserialize_in_place	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	f
deserialize_in_place	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_in_place<D>(deserializer: D, place: &mut Self) -> Result<(), D::Error>$/;"	P	interface:Deserialize
deserialize_in_place_body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_in_place_body(_cont: &Container, _params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_in_place_body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_in_place_body(cont: &Container, params: &Parameters) -> Option<Stmts> {$/;"	f
deserialize_integer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_integer<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_internally_tagged_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_internally_tagged_enum($/;"	f
deserialize_internally_tagged_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_internally_tagged_variant($/;"	f
deserialize_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn deserialize_map<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_map($/;"	f
deserialize_map_in_place	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_map_in_place($/;"	f
deserialize_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn deserialize_name(&self) -> String {$/;"	P	implementation:Name
deserialize_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_newtype_struct<V>($/;"	P	interface:Deserializer
deserialize_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_newtype_struct<V>($/;"	f	module:content
deserialize_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn deserialize_newtype_struct<V>(self, _name: &str, visitor: V) -> Result<V::Value, Self::Er/;"	f
deserialize_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_newtype_struct($/;"	f
deserialize_newtype_struct_in_place	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_newtype_struct_in_place(params: &Parameters, field: &Field) -> TokenStream {$/;"	f
deserialize_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	function:missing_field
deserialize_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, E>$/;"	f	module:content
deserialize_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn deserialize_option<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_other	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn deserialize_other<V>() -> Result<V, E> {$/;"	f
deserialize_renamed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    deserialize_renamed: bool,$/;"	m	struct:Name
deserialize_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn deserialize_seq<V>(mut self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_seq<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_seq($/;"	f
deserialize_seq_in_place	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_seq_in_place($/;"	f
deserialize_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_str<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_string<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_struct<V>($/;"	P	interface:Deserializer
deserialize_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_struct<V>($/;"	f	module:content
deserialize_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn deserialize_struct<V>($/;"	f
deserialize_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_struct($/;"	f
deserialize_struct_as_map_visitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_struct_as_map_visitor($/;"	f
deserialize_struct_as_struct_in_place_visitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_struct_as_struct_in_place_visitor($/;"	f
deserialize_struct_as_struct_visitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_struct_as_struct_visitor($/;"	f
deserialize_struct_in_place	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_struct_in_place($/;"	f
deserialize_transparent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
deserialize_try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_try_from(type_try_from: &syn::Type) -> Fragment {$/;"	f
deserialize_tuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_tuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn deserialize_tuple<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_tuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_tuple<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_tuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_tuple($/;"	f
deserialize_tuple_in_place	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_tuple_in_place($/;"	f
deserialize_tuple_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_tuple_struct<V>($/;"	P	interface:Deserializer
deserialize_tuple_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_tuple_struct<V>($/;"	f	module:content
deserialize_u16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_u16<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_u32<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_u64<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_u8<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:Deserializer
deserialize_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
deserialize_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn deserialize_unit<V>(self, visitor: V) -> Result<V::Value, Self::Error>$/;"	f
deserialize_unit_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn deserialize_unit_struct<V>($/;"	P	interface:Deserializer
deserialize_unit_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn deserialize_unit_struct<V>($/;"	f	module:content
deserialize_unit_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_unit_struct(params: &Parameters, cattrs: &attr::Container) -> Fragment {$/;"	f
deserialize_untagged_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_untagged_enum($/;"	f
deserialize_untagged_newtype_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_untagged_newtype_variant($/;"	f
deserialize_untagged_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn deserialize_untagged_variant($/;"	f
deserialize_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    deserialize_with: Option<syn::ExprPath>,$/;"	m	struct:Field
deserialize_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    deserialize_with: Option<syn::ExprPath>,$/;"	m	struct:Variant
deserialize_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn deserialize_with(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Field
deserialize_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn deserialize_with(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Variant
dest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub dest: CowStr<'a>,$/;"	m	struct:LinkDef
destroy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^unsafe extern "C" fn destroy<S>(bio: *mut BIO) -> c_int {$/;"	f
detect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    pub(super) fn detect(_headers: &mut HeaderMap, body: Body, _accepts: Accepts) -> Decoder {$/;"	P	implementation:Decoder
detect_duplicate_flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^fn detect_duplicate_flags(flags: &[Flag], short_or_long: &str) {$/;"	f
detect_encoding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn detect_encoding(headers: &mut HeaderMap, encoding_str: &str) -> bool {$/;"	P	implementation:Decoder
dh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod dh;$/;"	n
dh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn dh(&self) -> Result<Dh<T>, ErrorStack> {$/;"	P	implementation:PKeyRef
did_you_mean	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/features/suggestions.rs	/^pub(crate) fn did_you_mean<T, I>(_: &str, _: I) -> Vec<String>$/;"	f
did_you_mean	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/features/suggestions.rs	/^pub(crate) fn did_you_mean<T, I>(v: &str, possible_values: I) -> Vec<String>$/;"	f
did_you_mean_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn did_you_mean_error($/;"	P	implementation:Parser
did_you_mean_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/features/suggestions.rs	/^pub(crate) fn did_you_mean_flag<'a, 'help, I, T>($/;"	f
diff	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn diff(&self, compare: &Self) -> Result<TimeDiff, ErrorStack> {$/;"	P	implementation:Asn1TimeRef
digest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^    pub digest: Nid,$/;"	m	struct:SignatureAlgorithms
digest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn digest(&self, hash_type: MessageDigest) -> Result<DigestBytes, ErrorStack> {$/;"	P	implementation:X509Ref
digital_signature	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    digital_signature: bool,$/;"	m	struct:KeyUsage
digital_signature	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn digital_signature(&mut self) -> &mut KeyUsage {$/;"	P	implementation:KeyUsage
digits	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    fn digits(s: &str) -> ParseResult<(u8, u8)> {$/;"	f	function:timezone_offset_internal
dimensions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^pub(crate) fn dimensions() -> Option<(usize, usize)> {$/;"	f
dir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^pub mod dir;$/;"	n
dir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/version.rs	/^pub fn dir() -> &'static str {$/;"	f
dir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^mod dir;$/;"	n
dir_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^    pub dir_name: String,$/;"	m	struct:TransitProcess
dir_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn dir_name(&mut self, dir_name: &str) -> &mut SubjectAlternativeName {$/;"	P	implementation:SubjectAlternativeName
dir_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub dir_size: u64,$/;"	m	struct:DirContent
directories	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub directories: Vec<String>,$/;"	m	struct:DirContent
directory	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    pub directory: Vec<String>,$/;"	m	struct:Site
directory_handling	/mnt/c/Users/SamanthaC/rust/md_puppy/src/main.rs	/^mod directory_handling;$/;"	n
disable_all_links	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn disable_all_links(&mut self) {$/;"	P	implementation:LinkStack
disable_colored_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn disable_colored_help(self, yes: bool) -> Self {$/;"	P	implementation:App
disable_help_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn disable_help_flag(self, yes: bool) -> Self {$/;"	P	implementation:App
disable_help_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn disable_help_subcommand(self, yes: bool) -> Self {$/;"	P	implementation:App
disable_version_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn disable_version_flag(self, yes: bool) -> Self {$/;"	P	implementation:App
disabled_ix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    disabled_ix: usize,$/;"	m	struct:LinkStack
disallow_simple_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn disallow_simple_key(&mut self) {$/;"	P	implementation:Scanner
disk_number	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub disk_number: u16,$/;"	m	struct:CentralDirectoryEnd
disk_number	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub disk_number: u32,$/;"	m	struct:Zip64CentralDirectoryEnd
disk_with_central_directory	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub disk_with_central_directory: u16,$/;"	m	struct:CentralDirectoryEnd
disk_with_central_directory	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub disk_with_central_directory: u32,$/;"	m	struct:Zip64CentralDirectoryEnd
disk_with_central_directory	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub disk_with_central_directory: u32,$/;"	m	struct:Zip64CentralDirectoryEndLocator
disp_ord	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    disp_ord: Option<usize>,$/;"	m	struct:App
display	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^    pub(crate) unsafe fn display(this: Ref<Self>, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ErrorImpl
display	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^mod display;$/;"	n
display_arg_val	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^pub(crate) fn display_arg_val<F, T, E>(arg: &Arg, mut write: F) -> Result<(), E>$/;"	f
display_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn display_help(cmd: &Command, colorizer: Colorizer) -> Self {$/;"	P	implementation:Error
display_help_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn display_help_error(cmd: &Command, colorizer: Colorizer) -> Self {$/;"	P	implementation:Error
display_order	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn display_order(mut self, ord: usize) -> Self {$/;"	P	implementation:Arg
display_order	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn display_order(mut self, ord: usize) -> Self {$/;"	P	implementation:App
display_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn display_version(cmd: &Command, colorizer: Colorizer) -> Self {$/;"	P	implementation:Error
display_width_handles_emojis	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn display_width_handles_emojis() {$/;"	f	module:test
display_width_handles_non_ascii	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn display_width_handles_non_ascii() {$/;"	f	module:test
div	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod div;$/;"	n
div	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn div(self, rhs: i32) -> Duration {$/;"	P	implementation:Duration
div	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn div(self, oth: &'b BigNumRef) -> BigNum {$/;"	P	implementation:BigNumRef
div	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn div(self, rhs: i32) -> Duration {$/;"	P	implementation:Duration
div_floor_64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^fn div_floor_64(this: i64, other: i64) -> i64 {$/;"	f
div_floor_64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^fn div_floor_64(this: i64, other: i64) -> i64 {$/;"	f
div_mod_floor_64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^fn div_mod_floor_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
div_mod_floor_64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^fn div_mod_floor_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
div_rem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn div_rem($/;"	P	implementation:BigNumRef
div_rem_64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^fn div_rem_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
div_rem_64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^fn div_rem_64(this: i64, other: i64) -> (i64, i64) {$/;"	f
div_word	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn div_word(&mut self, w: u32) -> Result<u64, ErrorStack> {$/;"	P	implementation:BigNumRef
dmp1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn dmp1(&self) -> Option<&BigNumRef> {$/;"	f
dmq1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn dmq1(&self) -> Option<&BigNumRef> {$/;"	f
dns	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn dns(&mut self, dns: &str) -> &mut SubjectAlternativeName {$/;"	P	implementation:SubjectAlternativeName
dns_overrides	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    dns_overrides: HashMap<String, SocketAddr>,$/;"	m	struct:Config
dns_resolver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    dns_resolver: Resolver,$/;"	m	struct:DnsResolverWithOverrides
dnsname	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn dnsname(&self) -> Option<&str> {$/;"	P	implementation:GeneralNameRef
do_handshake	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn do_handshake(&mut self) -> Result<(), Error> {$/;"	P	implementation:SslStream
doc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/mod.rs	/^pub mod doc;$/;"	n
doc_stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    doc_stack: Vec<(Yaml, usize)>,$/;"	m	struct:YamlLoader
docs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    docs: Vec<Yaml>,$/;"	m	struct:YamlLoader
document_content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn document_content(&mut self) -> ParseResult {$/;"	P	implementation:Parser
document_end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn document_end(&mut self) -> ParseResult {$/;"	P	implementation:Parser
document_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn document_start(&mut self, implicit: bool) -> ParseResult {$/;"	P	implementation:Parser
domain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    pub fn domain(&self) -> Option<&str> {$/;"	P	implementation:Cookie
domains	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    domains: DomainMatcher,$/;"	m	struct:NoProxy
dont_collapse_args_in_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn dont_collapse_args_in_usage(self, yes: bool) -> Self {$/;"	P	implementation:App
dont_delimit_trailing_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn dont_delimit_trailing_values(self, yes: bool) -> Self {$/;"	P	implementation:App
downcast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub fn downcast<E>(mut self) -> Result<E, Self>$/;"	P	implementation:Error
downcast_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub fn downcast_mut<E>(&mut self) -> Option<&mut E>$/;"	P	implementation:Error
downcast_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub fn downcast_ref<E>(&self) -> Option<&E>$/;"	P	implementation:Error
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Error
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^    fn drop(&mut self) {$/;"	P	implementation:MemBio
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^    fn drop(&mut self) {$/;"	P	implementation:MemBioSlice
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Deriver
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Decrypter
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Encrypter
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Open
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Seal
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Hasher
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Signer
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Verifier
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:SslStream
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn drop(&mut self) {$/;"	P	implementation:stateless::Outgoing
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Server
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn drop(&mut self) {$/;"	P	implementation:IntoIter
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Stack
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Crypter
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^    fn drop(&mut self) {$/;"	P	implementation:CallbackState
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^            fn drop(&mut self) {$/;"	P	implementation:X509StoreContextRef::init::Cleanup
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    fn drop(&mut self) {$/;"	P	implementation:InnerClientHandle
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^        fn drop(&mut self) {$/;"	P	implementation:tests::EnvGuard
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ctxt.rs	/^    fn drop(&mut self) {$/;"	P	implementation:Ctxt
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TempDir
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn drop(&mut self) {$/;"	P	implementation:TempPath
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn drop(&mut self) {$/;"	P	implementation:inner::TzReset
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ZipFile
drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn drop(&mut self) {$/;"	P	implementation:ZipWriter
dry_run	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/main.rs	/^fn dry_run(text: &str, opts: Options) {$/;"	f
dsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod dsa;$/;"	n
dsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn dsa(&self) -> Result<Dsa<T>, ErrorStack> {$/;"	P	implementation:PKeyRef
dtls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn dtls() -> SslMethod {$/;"	P	implementation:SslMethod
dtls_mtu_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^    pub dtls_mtu_size: c_long,$/;"	m	struct:StreamState
dummy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/lib.rs	/^mod dummy;$/;"	n
dump	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    pub fn dump(&mut self, doc: &Yaml) -> EmitResult {$/;"	P	implementation:escape_str::YamlEmitter
dup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn dup() {$/;"	f	module:test
duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^mod duration;$/;"	n
duration_round	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn duration_round(self, duration: Duration) -> Result<Self, Self::Err> {$/;"	P	implementation:DateTime
duration_round	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn duration_round(self, duration: Duration) -> Result<Self, Self::Err>;$/;"	P	interface:DurationRound
duration_trunc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn duration_trunc(self, duration: Duration) -> Result<Self, Self::Err> {$/;"	P	implementation:DateTime
duration_trunc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn duration_trunc(self, duration: Duration) -> Result<Self, Self::Err>;$/;"	P	interface:DurationRound
e	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn e(&self) -> &BigNumRef {$/;"	f
earliest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn earliest(self) -> Option<T> {$/;"	P	implementation:LocalResult
east	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn east(secs: i32) -> FixedOffset {$/;"	P	implementation:FixedOffset
east_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn east_opt(secs: i32) -> Option<FixedOffset> {$/;"	P	implementation:FixedOffset
ec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod ec;$/;"	n
ec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn ec() {$/;"	f	module:test
ec_gen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn ec_gen(curve: &str) -> Result<PKey<Private>, ErrorStack> {$/;"	P	implementation:PKey
ec_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn ec_key(&self) -> Result<EcKey<T>, ErrorStack> {$/;"	P	implementation:PKeyRef
ecdsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod ecdsa;$/;"	n
eddsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn eddsa() {$/;"	f	module:test
effective_style	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn effective_style(variant: &Variant) -> Style {$/;"	f
effective_style	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn effective_style(variant: &Variant) -> Style {$/;"	f
elements	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        elements: Vec<Content>,$/;"	m	struct:content::SerializeSeq
elements	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        elements: Vec<Content>,$/;"	m	struct:content::SerializeTuple
elvish	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/mod.rs	/^mod elvish;$/;"	n
email	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn email(&mut self, email: &str) -> &mut SubjectAlternativeName {$/;"	P	implementation:SubjectAlternativeName
email	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn email(&self) -> Option<&str> {$/;"	P	implementation:GeneralNameRef
email_protection	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    email_protection: bool,$/;"	m	struct:ExtendedKeyUsage
email_protection	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn email_protection(&mut self) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
embed_youtube	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^fn embed_youtube(youtube_key: &str) -> String {$/;"	f
emit_array	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn emit_array(&mut self, v: &[Yaml]) -> EmitResult {$/;"	P	implementation:escape_str::YamlEmitter
emit_hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn emit_hash(&mut self, h: &Hash) -> EmitResult {$/;"	P	implementation:escape_str::YamlEmitter
emit_node	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn emit_node(&mut self, node: &Yaml) -> EmitResult {$/;"	P	implementation:escape_str::YamlEmitter
emit_quoted_bools	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn emit_quoted_bools() {$/;"	f	module:escape_str::test
emit_val	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn emit_val(&mut self, inline: bool, val: &Yaml) -> EmitResult {$/;"	P	implementation:escape_str::YamlEmitter
emitter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/lib.rs	/^pub mod emitter;$/;"	n
empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    pub(crate) fn empty() -> Body {$/;"	P	implementation:Body
empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    pub(crate) fn empty() -> Decoder {$/;"	P	implementation:Decoder
empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub(crate) fn empty() -> KeepCoreThreadAlive {$/;"	P	implementation:KeepCoreThreadAlive
empty_scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn empty_scalar() -> Event {$/;"	P	implementation:Event
empty_scalar_with_anchor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn empty_scalar_with_anchor(anchor: usize, tag: Option<TokenType>) -> Event {$/;"	P	implementation:Event
empty_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn empty_tm() -> Tm {$/;"	f
empty_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn empty_value(cmd: &Command, good_vals: &[&str], arg: &Arg, usage: String) -> Se/;"	P	implementation:Error
empty_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn empty_values(self, yes: bool) -> Self {$/;"	P	implementation:Arg
enable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/fips.rs	/^pub fn enable(enabled: bool) -> Result<(), ErrorStack> {$/;"	f
enabled	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        fn enabled() -> bool {$/;"	P	implementation:capture::Backtrace
enabled	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/fips.rs	/^pub fn enabled() -> bool {$/;"	f
enc_keys	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    enc_keys: Vec<Vec<u8>>,$/;"	m	struct:Seal
encipher_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    encipher_only: bool,$/;"	m	struct:KeyUsage
encipher_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn encipher_only(&mut self) -> &mut KeyUsage {$/;"	P	implementation:KeyUsage
enclosed_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn enclosed_name(&self) -> Option<&Path> {$/;"	P	implementation:ZipFile
encode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:rustc_serialize::DateTime
encode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:rustc_serialize::NaiveDate
encode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:rustc_serialize::NaiveDateTime
encode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	P	implementation:rustc_serialize::NaiveTime
encode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/utf8.rs	/^pub fn encode(c: char) -> Encode {$/;"	f
encode_basic_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^pub(crate) fn encode_basic_auth(username: &str, password: &str) -> HeaderValue {$/;"	f
encode_block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/base64.rs	/^pub fn encode_block(src: &[u8]) -> String {$/;"	f
encode_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn encode_headers(&self, name: &str, field: &PartMetadata) -> Vec<u8> {$/;"	P	implementation:PercentEncoding
encoded_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/base64.rs	/^fn encoded_len(src_len: c_int) -> Option<c_int> {$/;"	f
encrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/cms.rs	/^    pub fn encrypt($/;"	P	implementation:CmsContentInfo
encrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn encrypt(&self, from: &[u8], to: &mut [u8]) -> Result<usize, ErrorStack> {$/;"	P	implementation:Encrypter
encrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod encrypt;$/;"	n
encrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^    pub fn encrypt($/;"	P	implementation:Pkcs7
encrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^pub fn encrypt($/;"	f
encrypt_aead	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^pub fn encrypt_aead($/;"	f
encrypt_byte	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    fn encrypt_byte(&mut self, plain_byte: u8) -> u8 {$/;"	P	implementation:ZipCryptoKeys
encrypt_decrypt_test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^    fn encrypt_decrypt_test() {$/;"	f	module:tests
encrypt_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn encrypt_len(&self, from: &[u8]) -> Result<usize, ErrorStack> {$/;"	P	implementation:Encrypter
encrypted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub encrypted: bool,$/;"	m	struct:ZipFileData
encrypted_keys	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    pub fn encrypted_keys(&self) -> &[Vec<u8>] {$/;"	P	implementation:Seal
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub end: usize,$/;"	m	struct:Item
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub fn end(self) -> Result<(), E> {$/;"	f
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn end(mut self) -> Result<M::Ok, M::Error> {$/;"	f	module:content
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn end(self) -> Result<Content, E> {$/;"	f	module:content
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn end(self) -> Result<(), Self::Error> {$/;"	f
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^    fn end(self) -> Result<Ok, Error> {$/;"	f
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeMap
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeSeq
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeStruct
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeStructVariant
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTuple
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTupleStruct
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn end(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:SerializeTupleVariant
end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    macro_rules! end {$/;"	M	module:test
end_extra_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn end_extra_data(&mut self) -> ZipResult<u64> {$/;"	P	implementation:ZipWriter
end_local_start_central_extra_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn end_local_start_central_extra_data(&mut self) -> ZipResult<u64> {$/;"	P	implementation:ZipWriter
end_newline	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    end_newline: bool,$/;"	m	struct:HtmlWriter
end_of_central_directory_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub end_of_central_directory_offset: u64,$/;"	m	struct:Zip64CentralDirectoryEndLocator
end_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    fn end_tag(&mut self, tag: Tag) -> io::Result<()> {$/;"	f
ensure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^mod ensure;$/;"	n
ensure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/macros.rs	/^macro_rules! ensure {$/;"	M
enter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/wait.rs	/^fn enter() {$/;"	f
entities	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^mod entities;$/;"	n
entries	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn entries(&self) -> X509NameEntries<'_> {$/;"	P	implementation:X509NameRef
entries	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        entries: Vec<(Content, Content)>,$/;"	m	struct:content::SerializeMap
entries_by_nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn entries_by_nid(&self, nid: Nid) -> X509NameEntries<'_> {$/;"	P	implementation:X509NameRef
entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn entry(&mut self, arg: &Id) -> indexmap::map::Entry<Id, MatchedArg> {$/;"	P	implementation:ArgMatcher
enum_from_ast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^fn enum_from_ast<'a>($/;"	f
env	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn env(self, name: &'help str) -> Self {$/;"	P	implementation:Arg
env_guard	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn env_guard(name: impl Into<String>) -> EnvGuard {$/;"	f	module:tests
env_os	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn env_os(mut self, name: &'help OsStr) -> Self {$/;"	P	implementation:Arg
envelope	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod envelope;$/;"	n
eof	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn eof(&self) -> bool {$/;"	P	implementation:Scanner
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn eq(&self, other: &Date<Tz2>) -> bool {$/;"	P	implementation:Date
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn eq(&self, other: &DateTime<Tz2>) -> bool {$/;"	P	implementation:DateTime
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn eq(&self, _other: &InternalNumeric) -> bool {$/;"	P	implementation:InternalNumeric
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn eq(&self, other: &Arg<'help>) -> bool {$/;"	P	implementation:Arg
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^    fn eq(&self, other: &Flag) -> bool {$/;"	P	implementation:Flag
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    fn eq(&self, rhs: &&str) -> bool {$/;"	P	implementation:KeyType
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    fn eq(&self, rhs: &OsStr) -> bool {$/;"	P	implementation:KeyType
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    fn eq(&self, rhs: &char) -> bool {$/;"	P	implementation:KeyType
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    fn eq(&self, rhs: &usize) -> bool {$/;"	P	implementation:KeyType
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^    fn eq(&self, other: &Id) -> bool {$/;"	P	implementation:Id
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn eq(&self, other: &&'a Asn1TimeRef) -> bool {$/;"	P	implementation:Asn1Time
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn eq(&self, other: &Asn1Time) -> bool {$/;"	P	implementation:Asn1Time
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn eq(&self, other: &Asn1Time) -> bool {$/;"	P	implementation:Asn1TimeRef
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn eq(&self, other: &Asn1TimeRef) -> bool {$/;"	P	implementation:Asn1Time
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn eq(&self, other: &Asn1TimeRef) -> bool {$/;"	P	implementation:Asn1TimeRef
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn eq(&self, oth: &BigNum) -> bool {$/;"	P	implementation:BigNum
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn eq(&self, oth: &BigNum) -> bool {$/;"	P	implementation:BigNumRef
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn eq(&self, oth: &BigNumRef) -> bool {$/;"	P	implementation:BigNum
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn eq(&self, oth: &BigNumRef) -> bool {$/;"	P	implementation:BigNumRef
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn eq($/;"	P	implementation:EcPointRef
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/memcmp.rs	/^pub fn eq(a: &[u8], b: &[u8]) -> bool {$/;"	f
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn eq(&self, other: &CowStr) -> bool {$/;"	P	implementation:CowStr
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn eq(&self, other: &InlineStr) -> bool {$/;"	P	implementation:InlineStr
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/symbol.rs	/^    fn eq(&self, word: &Symbol) -> bool {$/;"	P	implementation:Ident
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/symbol.rs	/^    fn eq(&self, word: &Symbol) -> bool {$/;"	P	implementation:Path
eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn eq(&self, other: &SteadyTime) -> bool {$/;"	P	implementation:inner::unix::SteadyTime
eq_ignore_case	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/mod.rs	/^pub(crate) fn eq_ignore_case(left: &str, right: &str) -> bool {$/;"	f
equals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^fn equals(s: &str, pattern: &str) -> bool {$/;"	f
erase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    fn erase(&self) -> Ref<ErrorImpl> {$/;"	P	implementation:ErrorImpl
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^macro_rules! err {$/;"	M
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    err: ErrorImpl,$/;"	m	struct:Error
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::ContentDeserializer
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::ContentRefDeserializer
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::EnumDeserializer
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::EnumRefDeserializer
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::MapDeserializer
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::MapRefDeserializer
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::SeqDeserializer
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::SeqRefDeserializer
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::VariantDeserializer
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        err: PhantomData<E>,$/;"	m	struct:content::VariantRefDeserializer
err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/error.rs	/^    err: io::Error,$/;"	m	struct:PathError
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub error: E,$/;"	m	struct:ContextError
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub(crate) unsafe fn error(this: Ref<Self>) -> &(dyn StdError + Send + Sync + 'static) {$/;"	P	implementation:ErrorImpl
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^mod error;$/;"	n
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn error(&mut self, kind: ErrorKind, message: impl std::fmt::Display) -> Error {$/;"	P	implementation:App
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/lib.rs	/^pub mod error;$/;"	n
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    pub(crate) fn error(&mut self, msg: impl Into<String>) {$/;"	P	implementation:Colorizer
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^pub mod error;$/;"	n
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod error;$/;"	n
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^    pub error: Option<io::Error>,$/;"	m	struct:StreamState
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    error: Error,$/;"	m	struct:MidHandshakeSslStream
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn error(&self) -> &Error {$/;"	P	implementation:MidHandshakeSslStream
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^mod error;$/;"	n
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn error(&self) -> X509VerifyResult {$/;"	P	implementation:X509StoreContextRef
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    error: Option<crate::Error>,$/;"	m	struct:Config
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs	/^mod error;$/;"	n
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    pub fn error<E: Into<Box<dyn StdError + Send + Sync>>>(self, error: E) -> Action {$/;"	P	implementation:Attempt
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    error: PhantomData<E>,$/;"	m	struct:MapDeserializer
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::ContentSerializer
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeMap
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeSeq
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeStruct
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeStructVariant
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTuple
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTupleStruct
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        error: PhantomData<E>,$/;"	m	struct:content::SerializeTupleVariant
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^    error: PhantomData<Error>,$/;"	m	struct:Impossible
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub error: io::Error,$/;"	m	struct:PathPersistError
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub error: io::Error,$/;"	m	struct:PersistError
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^mod error;$/;"	n
error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    error: Option<ScanError>,$/;"	m	struct:Scanner
error_depth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn error_depth(&self) -> u32 {$/;"	P	implementation:X509StoreContextRef
error_for_status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub fn error_for_status(self) -> crate::Result<Self> {$/;"	P	implementation:Response
error_for_status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn error_for_status(self) -> crate::Result<Self> {$/;"	P	implementation:Response
error_for_status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    pub fn error_for_status(self) -> crate::Result<Self> {$/;"	P	implementation:Response
error_for_status_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub fn error_for_status_ref(&self) -> crate::Result<&Self> {$/;"	P	implementation:Response
error_for_status_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn error_for_status_ref(&self) -> crate::Result<&Self> {$/;"	P	implementation:Response
error_for_status_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    pub fn error_for_status_ref(&self) -> crate::Result<&Self> {$/;"	P	implementation:Response
error_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub(crate) unsafe fn error_mut(this: Mut<Self>) -> &mut (dyn StdError + Send + Sync + 'stati/;"	P	implementation:ErrorImpl
error_spanned_by	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ctxt.rs	/^    pub fn error_spanned_by<A: ToTokens, T: Display>(&self, obj: A, msg: T) {$/;"	P	implementation:Ctxt
error_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn error_string(&self) -> &'static str {$/;"	P	implementation:X509VerifyResult
errors	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    pub fn errors(&self) -> &[Error] {$/;"	P	implementation:ErrorStack
errors	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ctxt.rs	/^    errors: RefCell<Option<Vec<syn::Error>>>,$/;"	m	struct:Ctxt
escape	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^fn escape(s: impl AsRef<str>) -> String {$/;"	f
escape	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^pub mod escape;$/;"	n
escape_href	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^pub fn escape_href<W>(mut w: W, s: &str) -> io::Result<()>$/;"	f
escape_html	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^    pub(super) fn escape_html<W: StrWrite>(mut w: W, s: &str) -> io::Result<()> {$/;"	f	module:simd
escape_html	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^pub fn escape_html<W: StrWrite>(w: W, s: &str) -> io::Result<()> {$/;"	f
escape_html_scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^fn escape_html_scalar<W: StrWrite>(mut w: W, s: &str) -> io::Result<()> {$/;"	f
escape_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^fn escape_str(wr: &mut dyn fmt::Write, v: &str) -> Result<(), fmt::Error> {$/;"	f
escape_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/elvish.rs	/^fn escape_string(string: &str) -> String {$/;"	f
escape_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/fish.rs	/^fn escape_string(string: &str) -> String {$/;"	f
escape_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/powershell.rs	/^fn escape_string(string: &str) -> String {$/;"	f
event_loop_panicked	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^fn event_loop_panicked() -> ! {$/;"	f
ex_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod ex_data;$/;"	n
ex_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn ex_data<T>(&self, index: Index<Ssl, T>) -> Option<&T> {$/;"	P	implementation:SslRef
ex_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn ex_data<T>(&self, index: Index<SslContext, T>) -> Option<&T> {$/;"	P	implementation:SslContextRef
ex_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn ex_data<T>(&self, index: Index<X509StoreContext, T>) -> Option<&T> {$/;"	P	implementation:X509StoreContextRef
ex_data_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn ex_data_mut<T>(&mut self, index: Index<Ssl, T>) -> Option<&mut T> {$/;"	P	implementation:SslRef
example_slice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^    fn example_slice() {$/;"	f	module:test
example_vec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^    fn example_vec() {$/;"	f	module:test
exclusive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn exclusive(self, yes: bool) -> Self {$/;"	P	implementation:Arg
execute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn execute($/;"	P	implementation:Client
execute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn execute(&self, request: Request) -> crate::Result<Response> {$/;"	P	implementation:Client
execute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn execute($/;"	P	implementation:Client
execute_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub(super) fn execute_request(&self, req: Request) -> Pending {$/;"	P	implementation:Client
execute_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    fn execute_request(&self, req: Request) -> crate::Result<Response> {$/;"	P	implementation:ClientHandle
execute_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub(super) fn execute_request($/;"	P	implementation:Client
execute_request_rejects_invald_urls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    async fn execute_request_rejects_invald_urls() {$/;"	f	module:tests
exhaustive_search	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^        fn exhaustive_search() {$/;"	f	module:simd::simd_test
exit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub fn exit(&self) -> ! {$/;"	P	implementation:Error
exp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn exp($/;"	P	implementation:BigNumRef
expand_derive_deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^pub fn expand_derive_deserialize($/;"	f
expand_derive_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^pub fn expand_derive_serialize($/;"	f
expected_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/version.rs	/^    fn expected_name() -> &'static str {$/;"	f	function:test_versions
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_milliseconds::MilliSecondsTimestampVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_nanoseconds::NanoSecondsTimestampVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_seconds::SecondsTimestampVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::DateTimeVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn expecting(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:month_serde::MonthVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn expecting(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:weekday_serde::WeekdayVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::NaiveDateVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_milliseconds::NaiveDateTimeFromMilliSecondsVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_nanoseconds::NaiveDateTimeFromNanoSecondsVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::ts_seconds::NaiveDateTimeFromSecondsVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::NaiveDateTimeVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::NaiveTimeVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde_impl::CowStrVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IgnoredAny
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:range::Field::deserialize::FieldVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration::deserialize::DurationVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	function:deserialize_in_place
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f	module:range
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        pub expecting: &'static str,$/;"	m	struct:range::RangeVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    expecting: &'static str,$/;"	m	struct:FromStrVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ArrayVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BoolVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BytesVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CStringVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CharVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OsStringVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PathBufVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PathVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PhantomDataVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StrVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringInPlaceVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:UnitVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Visitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        expecting: &'static str,$/;"	m	struct:content::TaggedContentVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::ContentVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagOrContentVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn expecting(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	f	module:content
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:borrow_cow_str::CowStrVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::InternallyTaggedUnitVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagContentOtherFieldVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::TagOrContentFieldVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn expecting(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:content::UntaggedUnitVisitor
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    expecting: Option<String>,$/;"	m	struct:Container
expecting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn expecting(&self) -> Option<&str> {$/;"	P	implementation:Container
expires	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    pub fn expires(&self) -> Option<SystemTime> {$/;"	P	implementation:Cookie
explicit_name_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    explicit_name_set: bool,$/;"	m	struct:UsageParser
export_keying_material	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn export_keying_material($/;"	P	implementation:SslRef
export_keying_material_early	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn export_keying_material_early($/;"	P	implementation:SslRef
expr_is_missing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn expr_is_missing(field: &Field, cattrs: &attr::Container) -> Fragment {$/;"	f
ext	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^mod ext {$/;"	n
ext_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^        fn ext_context<C>(self, context: C) -> Error$/;"	P	implementation:ext::Error
ext_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^        fn ext_context<C>(self, context: C) -> Error$/;"	P	interface:ext::StdError
ext_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^        fn ext_context<C>(self, context: C) -> Error$/;"	f	module:ext
extend	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn extend<'b>(self) -> Mut<'b, T> {$/;"	f
extend_incoming	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        pub fn extend_incoming(&mut self, data: &[u8]) {$/;"	P	implementation:stateless::MemoryStream
extension	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^pub mod extension;$/;"	n
extensions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn extensions(&self) -> Result<Stack<X509Extension>, ErrorStack> {$/;"	P	implementation:X509ReqRef
extensions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    extensions: http::Extensions,$/;"	m	struct:Response
external_attributes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub external_attributes: u32,$/;"	m	struct:ZipFileData
extra_chain_certs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn extra_chain_certs(&self) -> &StackRef<X509> {$/;"	P	implementation:SslContextRef
extra_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn extra_data(&self) -> &[u8] {$/;"	P	implementation:ZipFile
extra_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub extra_field: Vec<u8>,$/;"	m	struct:ZipFileData
extract	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn extract<P: AsRef<Path>>(&mut self, directory: P) -> ZipResult<()> {$/;"	P	implementation:ZipArchive
extract_and_parse_heading_attribute_block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn extract_and_parse_heading_attribute_block($/;"	P	implementation:FirstPass
extract_attribute_block_content_from_header_text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^fn extract_attribute_block_content_from_header_text($/;"	f
extract_authority	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^pub(crate) fn extract_authority(url: &mut Url) -> Option<(String, Option<String>)> {$/;"	f
extract_response_cookie_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^pub(crate) fn extract_response_cookie_headers<'a>($/;"	f
extract_response_cookies	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^pub(crate) fn extract_response_cookies<'a>($/;"	f
extract_type_prefix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^fn extract_type_prefix(address: &str) -> Option<&str> {$/;"	f
fails_arg_required_unless	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn fails_arg_required_unless(&self, a: &Arg<'help>, matcher: &ArgMatcher) -> bool {$/;"	P	implementation:Validator
fast_random	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/util.rs	/^pub(crate) fn fast_random() -> u64 {$/;"	f
features	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/mod.rs	/^pub mod features;$/;"	n
fetch	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^async fn fetch(req: Request) -> crate::Result<Response> {$/;"	f
fetch_anchor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_anchor(&mut self, alias: bool) -> ScanResult {$/;"	P	implementation:Scanner
fetch_block_entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_block_entry(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
fetch_block_scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_block_scalar(&mut self, literal: bool) -> ScanResult {$/;"	P	implementation:Scanner
fetch_credentials_include	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn fetch_credentials_include(mut self) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
fetch_credentials_omit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn fetch_credentials_omit(mut self) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
fetch_credentials_same_origin	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn fetch_credentials_same_origin(mut self) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
fetch_directive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_directive(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
fetch_document_indicator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_document_indicator(&mut self, t: TokenType) -> ScanResult {$/;"	P	implementation:Scanner
fetch_flow_collection_end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_flow_collection_end(&mut self, tok: TokenType) -> ScanResult {$/;"	P	implementation:Scanner
fetch_flow_collection_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_flow_collection_start(&mut self, tok: TokenType) -> ScanResult {$/;"	P	implementation:Scanner
fetch_flow_entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_flow_entry(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
fetch_flow_scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_flow_scalar(&mut self, single: bool) -> ScanResult {$/;"	P	implementation:Scanner
fetch_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_key(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
fetch_mode_no_cors	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn fetch_mode_no_cors(self) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
fetch_mode_no_cors	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn fetch_mode_no_cors(mut self) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
fetch_more_tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn fetch_more_tokens(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
fetch_next_token	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn fetch_next_token(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
fetch_plain_scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_plain_scalar(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
fetch_stream_end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_stream_end(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
fetch_stream_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_stream_start(&mut self) {$/;"	P	implementation:Scanner
fetch_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_tag(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
fetch_token	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn fetch_token(&mut self) -> Token {$/;"	P	implementation:Parser
fetch_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fetch_value(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
fetch_with_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    fn fetch_with_request(input: &web_sys::Request) -> Promise;$/;"	f
ffi	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^mod ffi {$/;"	n
field_i	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn field_i(i: usize) -> Ident {$/;"	f
fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fields: &'static [&'static str],$/;"	m	struct:FlatStructAccess
fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStruct
fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStructVariant
fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fields: Vec<(&'static str, Content)>,$/;"	m	struct:content::SerializeStructVariantAsMapValue
fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleStruct
fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleVariant
fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fields: Vec<Content>,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fields: Vec<(&'static str, Content)>,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub fields: Vec<Field<'a>>,$/;"	m	struct:Variant
fields_from_ast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^fn fields_from_ast<'a>($/;"	f
file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^pub mod file;$/;"	n
file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    file: *const c_char,$/;"	m	struct:Error
file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    pub fn file(&self) -> &'static str {$/;"	P	implementation:Error
file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn file<T, U>(self, name: T, path: U) -> io::Result<Form>$/;"	P	implementation:Form
file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn file<T: AsRef<Path>>(path: T) -> io::Result<Part> {$/;"	P	implementation:Part
file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    file: File,$/;"	m	struct:NamedTempFile
file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub file: NamedTempFile,$/;"	m	struct:PersistError
file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^mod file;$/;"	n
file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    file: R,$/;"	m	struct:ZipCryptoReader
file_and_dir_predicates	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn file_and_dir_predicates() {$/;"	f	module:test
file_bytes_copied	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub file_bytes_copied: u64,$/;"	m	struct:TransitProcess
file_bytes_copied	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^    pub file_bytes_copied: u64,$/;"	m	struct:TransitProcess
file_comment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub file_comment: String,$/;"	m	struct:ZipFileData
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/mod.rs	/^    fn file_name(&self, name: &str) -> String;$/;"	P	interface:Generator
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/bash.rs	/^    fn file_name(&self, name: &str) -> String {$/;"	P	implementation:Bash
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/elvish.rs	/^    fn file_name(&self, name: &str) -> String {$/;"	P	implementation:Elvish
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/fish.rs	/^    fn file_name(&self, name: &str) -> String {$/;"	P	implementation:Fish
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/powershell.rs	/^    fn file_name(&self, name: &str) -> String {$/;"	P	implementation:PowerShell
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    fn file_name(&self, name: &str) -> String {$/;"	P	implementation:Shell
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/zsh.rs	/^    fn file_name(&self, name: &str) -> String {$/;"	P	implementation:Zsh
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub file_name: String,$/;"	m	struct:TransitProcess
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^    pub file_name: String,$/;"	m	struct:TransitProcess
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    file_name: Option<Cow<'static, str>>,$/;"	m	struct:PartMetadata
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn file_name<T>(self, filename: T) -> Part$/;"	P	implementation:Part
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn file_name<T>(mut self, filename: T) -> Self$/;"	P	implementation:PartMetadata
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn file_name<T>(self, filename: T) -> Part$/;"	P	implementation:Part
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    file_name: Option<Cow<'static, str>>,$/;"	m	struct:PartMetadata
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub fn file_name<T>(self, filename: T) -> Part$/;"	P	implementation:Part
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub(crate) fn file_name<T>(mut self, filename: T) -> Self$/;"	P	implementation:PartMetadata
file_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub file_name: String,$/;"	m	struct:ZipFileData
file_name_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub file_name_raw: Vec<u8>,$/;"	m	struct:ZipFileData
file_name_sanitized	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn file_name_sanitized(&self) -> ::std::path::PathBuf {$/;"	P	implementation:ZipFileData
file_names	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn file_names(&self) -> impl Iterator<Item = &str> {$/;"	P	implementation:ZipArchive
file_time_as_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn file_time_as_u64(ft: &FILETIME) -> u64 {$/;"	f
file_time_as_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn file_time_as_u64(ft: &FILETIME) -> u64 {$/;"	f	module:inner
file_time_to_nsec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn file_time_to_nsec(ft: &FILETIME) -> i32 {$/;"	f	module:inner
file_time_to_unix_seconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn file_time_to_unix_seconds(ft: &FILETIME) -> i64 {$/;"	f
file_time_to_unix_seconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn file_time_to_unix_seconds(ft: &FILETIME) -> i64 {$/;"	f	module:inner
file_total_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub file_total_bytes: u64,$/;"	m	struct:TransitProcess
file_total_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^    pub file_total_bytes: u64,$/;"	m	struct:TransitProcess
filename	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        filename: Option<BytesOrWide>,$/;"	m	struct:capture::BacktraceSymbol
filename	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub filename: String,$/;"	m	struct:Page
filepath	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub filepath: String,$/;"	m	struct:Page
files	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub files: Vec<String>,$/;"	m	struct:DirContent
files	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    files: Vec<ZipFileData>,$/;"	m	struct:ZipArchive
files	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    files: Vec<ZipFileData>,$/;"	m	struct:ZipWriter
fill_in_global_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    fn fill_in_global_values($/;"	P	implementation:ArgMatcher
finalize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    pub fn finalize(&mut self, output: &mut [u8]) -> Result<usize, ErrorStack> {$/;"	P	implementation:Open
finalize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    pub fn finalize(&mut self, output: &mut [u8]) -> Result<usize, ErrorStack> {$/;"	P	implementation:Seal
finalize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn finalize(&mut self, output: &mut [u8]) -> Result<usize, ErrorStack> {$/;"	P	implementation:Crypter
finalize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn finalize(&mut self) -> ZipResult<()> {$/;"	P	implementation:ZipWriter
find	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn find(&self, arg_id: &Id) -> Option<&Arg<'help>> {$/;"	P	implementation:App
find	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn find(&mut self, open_ix: TreeIndex, count: usize) -> Option<TreeIndex> {$/;"	P	implementation:CodeDelims
find_and_parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub fn find_and_parse<T: Read + io::Seek>($/;"	P	implementation:CentralDirectoryEnd
find_and_parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub fn find_and_parse<T: Read + io::Seek>($/;"	P	implementation:Zip64CentralDirectoryEnd
find_content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^fn find_content<'a>($/;"	f
find_duplicates	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^fn find_duplicates<T: PartialEq>(slice: &[T]) -> impl Iterator<Item = (&T, &T)> {$/;"	f
find_group	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn find_group(&self, group_id: &Id) -> Option<&ArgGroup<'help>> {$/;"	P	implementation:App
find_long_subcmd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn find_long_subcmd(&self, long: &RawOsStr) -> Option<&str> {$/;"	P	implementation:App
find_match	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn find_match($/;"	P	implementation:InlineStack
find_short_subcmd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn find_short_subcmd(&self, c: char) -> Option<&str> {$/;"	P	implementation:App
find_status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn find_status<'a>(&'a self, id: &OcspCertIdRef) -> Option<OcspStatus<'a>> {$/;"	P	implementation:OcspBasicResponseRef
find_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn find_subcommand<T>(&self, name: &T) -> Option<&App<'help>>$/;"	P	implementation:App
find_subcommand_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn find_subcommand_mut<T>(&mut self, name: &T) -> Option<&mut App<'help>>$/;"	P	implementation:App
find_subcommand_with_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^pub fn find_subcommand_with_path<'help, 'cmd>($/;"	f
fingerprint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn fingerprint(&self, hash_type: MessageDigest) -> Result<Vec<u8>, ErrorStack> {$/;"	P	implementation:X509Ref
finish	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/fnv.rs	/^    fn finish(&self) -> u64 {$/;"	P	implementation:FnvHasher
finish	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn finish(&mut self) -> Result<DigestBytes, ErrorStack> {$/;"	P	implementation:Hasher
finish	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn finish(&mut self) -> ZipResult<W> {$/;"	P	implementation:ZipWriter
finish_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn finish_file(&mut self) -> ZipResult<()> {$/;"	P	implementation:ZipWriter
finish_list	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn finish_list(&mut self, ix: usize) {$/;"	P	implementation:FirstPass
finish_list_marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    fn finish_list_marker($/;"	P	implementation:LineStart
finish_xof	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn finish_xof(&mut self, buf: &mut [u8]) -> Result<(), ErrorStack> {$/;"	P	implementation:Hasher
finished	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn finished(&self, buf: &mut [u8]) -> usize {$/;"	P	implementation:SslRef
fips	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod fips;$/;"	n
first	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn first(&self) -> Option<&OsString> {$/;"	P	implementation:MatchedArg
first_dup_tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    first_dup_tokens: TokenStream,$/;"	m	struct:VecAttr
firstpass	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^mod firstpass;$/;"	n
fish	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/mod.rs	/^mod fish;$/;"	n
fix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! fix {$/;"	M
fix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn fix(&self) -> FixedOffset {$/;"	P	implementation:FixedOffset
fix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn fix(&self) -> FixedOffset;$/;"	P	interface:Offset
fix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn fix(&self) -> FixedOffset {$/;"	P	implementation:Utc
fixed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^mod fixed;$/;"	n
flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/features/suggestions.rs	/^    fn flag() {$/;"	f	module:test
flag_display	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn flag_display() {$/;"	f	module:test
flag_display_multiple_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn flag_display_multiple_aliases() {$/;"	f	module:test
flag_display_multiple_short_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn flag_display_multiple_short_aliases() {$/;"	f	module:test
flag_display_single_alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn flag_display_single_alias() {$/;"	f	module:test
flag_display_single_short_alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn flag_display_single_short_alias() {$/;"	f	module:test
flag_subcmd_at	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    flag_subcmd_at: Option<usize>,$/;"	m	struct:Parser
flag_subcmd_skip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    flag_subcmd_skip: usize,$/;"	m	struct:Parser
flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn flags(&self) -> YearFlags {$/;"	P	implementation:Mdf
flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn flags(&self) -> YearFlags {$/;"	P	implementation:Of
flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^pub fn flags<'help>(p: &Command<'help>) -> Vec<Arg<'help>> {$/;"	f
flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/verify.rs	/^    pub fn flags(&mut self) -> X509VerifyFlags {$/;"	P	implementation:X509VerifyParamRef
flatten	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    flatten: bool,$/;"	m	struct:Field
flatten	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn flatten(&self) -> bool {$/;"	P	implementation:Field
flow_level	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    flow_level: u8,$/;"	m	struct:Scanner
flow_mapping_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn flow_mapping_key(&mut self, first: bool) -> ParseResult {$/;"	P	implementation:Parser
flow_mapping_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn flow_mapping_value(&mut self, empty: bool) -> ParseResult {$/;"	P	implementation:Parser
flow_sequence_entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn flow_sequence_entry(&mut self, first: bool) -> ParseResult {$/;"	P	implementation:Parser
flow_sequence_entry_mapping_end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn flow_sequence_entry_mapping_end(&mut self) -> ParseResult {$/;"	P	implementation:Parser
flow_sequence_entry_mapping_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn flow_sequence_entry_mapping_key(&mut self) -> ParseResult {$/;"	P	implementation:Parser
flow_sequence_entry_mapping_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn flow_sequence_entry_mapping_value(&mut self) -> ParseResult {$/;"	P	implementation:Parser
flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Hasher
flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Signer
flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:Verifier
flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:SslStream
flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:flush_panic::ExplodingStream
flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:read_panic::ExplodingStream
flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:stateless::MemoryStream
flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:write_panic::ExplodingStream
flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:NamedTempFile
flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:SpooledTempFile
flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn flush(&mut self) -> io::Result<()> {$/;"	P	implementation:ZipWriter
flush_panic	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn flush_panic() {$/;"	f
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:capture::Backtrace
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:capture::BacktraceFrame
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:capture::BacktraceSymbol
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:capture::BytesOrWide
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^mod fmt;$/;"	n
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BoxedError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Date
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::DateTime::serialize::FormatWrapped
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DateTime
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DelayedFormat
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:InternalNumeric
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseMonthError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseWeekdayError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SerdeError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Weekday
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::NaiveDate::serialize::FormatWrapped
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NaiveDate
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^                fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:serde::NaiveDateTime::serialize::FormatWrapped
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NaiveDateTime
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Mdf
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Of
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:YearFlags
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:IsoWeek
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:NaiveTime
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:FixedOffset
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Utc
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OutOfRangeError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RoundingError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result<(), fmt::Error> {$/;"	P	implementation:Arg
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:Arg
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:App
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/kind.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:ErrorKind
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn fmt(&self, _: &mut Formatter) -> fmt::Result {$/;"	P	implementation:Backtrace
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:Backtrace
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    fn fmt(&self, f: &mut Formatter) -> fmt::Result {$/;"	P	implementation:Colorizer
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/mod.rs	/^pub(crate) mod fmt;$/;"	n
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^    fn fmt(&self, f: &mut Formatter) -> Result {$/;"	P	implementation:Id
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:Shell
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Asn1GeneralizedTimeRef
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Asn1TimeRef
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Asn1ObjectRef
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Asn1StringRef
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BigNum
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:BigNumRef
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Dsa
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:EcKey
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:ErrorStack
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:DigestBytes
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PKey
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Rsa
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:HandshakeError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:Ssl
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:SslContext
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:SslRef
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	f
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:OpensslString
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:OpensslStringRef
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:X509VerifyResult
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:GeneralNameRef
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:X509
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:X509NameEntryRef
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:X509NameRef
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {$/;"	P	implementation:HeadingLevel
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CowStr
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:InlineStr
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {$/;"	f
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Body
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Client
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ClientBuilder
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Pending
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Decoder
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Form
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Part
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Request
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RequestBuilder
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Response
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:DebugLength
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Kind
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Client
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ClientBuilder
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Form
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Part
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Reader
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Request
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Response
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:verbose::Escape
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Cookie
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CookieParseError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^            fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error::fmt::ForUrl
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:TimedOut
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Custom
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Proxy
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ProxyScheme
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Policy
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:PolicyKind
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TooManyRedirects
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Certificate
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Identity
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:TlsBackend
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Body
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Client
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ClientBuilder
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Form
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Part
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Request
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:RequestBuilder
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Response
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OneOf
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Unexpected
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:a
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:str
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result;$/;"	P	interface:Expected
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BorrowedBytesDeserializer
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BorrowedStrDeserializer
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:BytesDeserializer
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:CowStrDeserializer
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ExpectedInMap
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ExpectedInSeq
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StrDeserializer
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:StringDeserializer
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:U32Deserializer
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:UnitDeserializer
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	f
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/doc.rs	/^    fn fmt(&self, _: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Error
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Unsupported
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^mod fmt;$/;"	n
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/symbol.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Symbol
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TempDir
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/error.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PathError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:NamedTempFile
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PathPersistError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:PersistError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:TempPath
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:TmFmt
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:Duration
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:OutOfRangeError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ParseError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:SteadyTime
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:inner::unix::SteadyTime
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:EmitError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn fmt(&self, formatter: &mut fmt::Formatter) -> fmt::Result {$/;"	P	implementation:ScanError
fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {$/;"	P	implementation:CompressionMethod
fmt_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn fmt_fields(&self, f: &mut fmt::DebugStruct<'_, '_>) {$/;"	P	implementation:ClientRef
fmt_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn fmt_fields(&self, f: &mut fmt::DebugStruct<'_, '_>) {$/;"	P	implementation:Config
fmt_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn fmt_fields(&self, ty_name: &'static str, f: &mut fmt::Formatter) -> fmt::Resul/;"	P	implementation:FormParts
fmt_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn fmt_fields<'f, 'fa, 'fb>($/;"	P	implementation:PartMetadata
fmt_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    fn fmt_fields(&self, f: &mut fmt::DebugStruct<'_, '_>) {$/;"	P	implementation:Config
fmt_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub(crate) fn fmt_fields(&self, ty_name: &'static str, f: &mut fmt::Formatter) -> fmt::Resul/;"	P	implementation:FormParts
fmt_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub(crate) fn fmt_fields<'f, 'fa, 'fb>($/;"	P	implementation:PartMetadata
fmt_primitives	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^macro_rules! fmt_primitives {$/;"	M
fmt_request_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^fn fmt_request_fields<'a, 'b>($/;"	f
fmt_request_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^fn fmt_request_fields<'a, 'b>($/;"	f
fmt_request_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^fn fmt_request_fields<'a, 'b>($/;"	f
fmt_rfc2822_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn fmt_rfc2822_datetime(dt: DateTime<FixedOffset>) -> String {$/;"	f	function:test_rfc2822
fmt_rfc3339_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn fmt_rfc3339_datetime(dt: DateTime<FixedOffset>) -> String {$/;"	f	function:test_rfc3339
fnv	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/mod.rs	/^mod fnv;$/;"	n
follow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    pub fn follow(self) -> Action {$/;"	P	implementation:Attempt
foo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^        fn foo<T: Send + Sync>(_: T) {}$/;"	f	function:test::arg_group_send_sync
foo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/tests.rs	/^    fn foo<T: Send + Sync>(_: T) {}$/;"	f	function:app_send_sync
foo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/tests.rs	/^    fn foo<T: Send + Sync>(_: T) {}$/;"	f	function:arg_send_sync
foo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^            foo: String,$/;"	m	struct:tests::add_query_struct::Params
foo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^            foo: String,$/;"	m	struct:tests::add_query_struct::Params
footnote_offsets	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn footnote_offsets() {$/;"	f	module:test
for_app	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn for_app(kind: ErrorKind, cmd: &Command, colorizer: Colorizer, info: Vec<String>) -> Self /;"	P	implementation:Error
forbid_empty_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn forbid_empty_values(self, yes: bool) -> Self {$/;"	P	implementation:Arg
force	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        fn force(&self) -> &Capture {$/;"	P	implementation:capture::LazilyResolvedCapture
foreach_special_simd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^    unsafe fn foreach_special_simd<F>($/;"	f	module:simd
foreign_type_and_impl_send_sync	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/macros.rs	/^macro_rules! foreign_type_and_impl_send_sync {$/;"	M
form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn form<T: Serialize + ?Sized>(mut self, form: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    form: Form,$/;"	m	struct:Reader
form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn form<T: Serialize + ?Sized>(mut self, form: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn form<T: Serialize + ?Sized>(mut self, form: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
form_empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn form_empty() {$/;"	f	module:tests
form_empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn form_empty() {$/;"	f	module:tests
format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	f
format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	f
format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub fn format<'a, I, B>($/;"	f
format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod format;$/;"	n
format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	P	implementation:NaiveDate
format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	P	implementation:NaiveDateTime
format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn format<'a>(&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>> {$/;"	P	implementation:NaiveTime
format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn format(&mut self, cmd: &Command, usage: String) {$/;"	P	implementation:Message
format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub fn format(mut self, cmd: &mut Command) -> Self {$/;"	P	implementation:Error
format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^mod format;$/;"	n
format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    format: Fmt<'a>$/;"	m	struct:TmFmt
format_err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^    pub fn format_err(args: Arguments) -> Error {$/;"	f	module:private
format_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^fn format_error<I: CommandFactory>(err: crate::Error) -> crate::Error {$/;"	f
format_filename	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn format_filename(&self, filename: &str) -> String {$/;"	P	implementation:PercentEncoding
format_group	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn format_group(&self, g: &Id) -> String {$/;"	P	implementation:App
format_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^fn format_inner<'a>($/;"	f
format_item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub fn format_item<'a>($/;"	f
format_item_localized	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub fn format_item_localized<'a>($/;"	f
format_localized	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn format_localized<'a>($/;"	f
format_localized	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn format_localized<'a>($/;"	f
format_localized	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub fn format_localized<'a, I, B>($/;"	f
format_localized_with_items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn format_localized_with_items<'a, I, B>($/;"	f
format_localized_with_items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn format_localized_with_items<'a, I, B>($/;"	f
format_parameter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn format_parameter(&self, name: &str, value: &str) -> String {$/;"	P	implementation:PercentEncoding
format_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^fn format_u8(mut n: u8, out: &mut [u8]) -> usize {$/;"	f
format_with_items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	f
format_with_items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	f
format_with_items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	P	implementation:NaiveDate
format_with_items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	P	implementation:NaiveDateTime
format_with_items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn format_with_items<'a, I, B>(&self, items: I) -> DelayedFormat<I>$/;"	P	implementation:NaiveTime
formatted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn formatted(&self) -> Cow<'_, Colorizer> {$/;"	P	implementation:Error
formatted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn formatted(&self) -> Cow<Colorizer> {$/;"	P	implementation:Message
forward	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^async fn forward<F>(fut: F, mut tx: OneshotResponse)$/;"	f
forward_to_deserialize_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/macros.rs	/^macro_rules! forward_to_deserialize_any {$/;"	M
forward_to_deserialize_any_helper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/macros.rs	/^macro_rules! forward_to_deserialize_any_helper {$/;"	M
forward_to_deserialize_any_method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/macros.rs	/^macro_rules! forward_to_deserialize_any_method {$/;"	M
forward_to_deserialize_other	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^macro_rules! forward_to_deserialize_other {$/;"	M
forwarded_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! forwarded_impl {$/;"	M
frac	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    frac: u32,$/;"	m	struct:NaiveTime
fragment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/lib.rs	/^mod fragment;$/;"	n
frame	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        frame: Frame,$/;"	m	struct:capture::BacktraceFrame
frames	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        frames: Vec<BacktraceFrame>,$/;"	m	struct:capture::Capture
free	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/srtp.rs	/^unsafe fn free(_profile: *mut ffi::SRTP_PROTECTION_PROFILE) {}$/;"	f
free	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/string.rs	/^unsafe fn free(buf: *mut c_char) {$/;"	f
free_data_box	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^unsafe extern "C" fn free_data_box<T>($/;"	f
frequency	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn frequency() -> i64 {$/;"	f	module:inner
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    fn from(error: E) -> Self {$/;"	f
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    fn from(error: Error) -> Self {$/;"	P	implementation:Box
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn from(obj: TsSeconds<Tz>) -> DateTime<Tz> {$/;"	P	implementation:rustc_serialize::DateTime
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(date: &js_sys::Date) -> DateTime<Utc> {$/;"	P	implementation:DateTime
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(date: DateTime<Utc>) -> js_sys::Date {$/;"	P	implementation:Date
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(date: js_sys::Date) -> DateTime<Utc> {$/;"	P	implementation:DateTime
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(dt: DateTime<Tz>) -> SystemTime {$/;"	P	implementation:SystemTime
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(src: DateTime<FixedOffset>) -> Self {$/;"	P	implementation:DateTime
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(src: DateTime<Local>) -> Self {$/;"	P	implementation:DateTime
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(src: DateTime<Utc>) -> Self {$/;"	P	implementation:DateTime
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(t: SystemTime) -> DateTime<Local> {$/;"	P	implementation:DateTime
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from(t: SystemTime) -> DateTime<Utc> {$/;"	P	implementation:DateTime
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from<T, D>(me: LocalResult<T>, d: &mut D) -> Result<T, D::Error>$/;"	f	module:rustc_serialize
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn from(obj: TsSeconds) -> NaiveDateTime {$/;"	P	implementation:rustc_serialize::NaiveDateTime
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn from(a: &Arg<'help>) -> Self {$/;"	P	implementation:Arg
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    fn from(g: &ArgGroup<'help>) -> Self {$/;"	P	implementation:ArgGroup
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    fn from(y: &'help Yaml) -> Self {$/;"	P	implementation:ArgGroup
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_predicate.rs	/^    fn from(other: Option<&'help std::ffi::OsStr>) -> Self {$/;"	P	implementation:ArgPredicate
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    fn from(s: &'help &'help str) -> Self {$/;"	P	implementation:PossibleValue
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    fn from(s: &'help str) -> Self {$/;"	P	implementation:PossibleValue
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    fn from(r: &'a Regex) -> Self {$/;"	P	implementation:RegexRef
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    fn from(r: &'a RegexSet) -> Self {$/;"	P	implementation:RegexRef
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    fn from(r: Regex) -> Self {$/;"	P	implementation:RegexRef
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    fn from(r: RegexSet) -> Self {$/;"	P	implementation:RegexRef
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn from(e: fmt::Error) -> Self {$/;"	P	implementation:Error
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn from(e: io::Error) -> Self {$/;"	P	implementation:Error
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn from(inner: Colorizer) -> Self {$/;"	P	implementation:Message
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn from(inner: String) -> Self {$/;"	P	implementation:Message
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn from(val: I) -> Self {$/;"	f
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^    fn from(val: T) -> Self {$/;"	P	implementation:Id
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    fn from(err: IoError) -> Error {$/;"	P	implementation:Error
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    fn from(err: OsString) -> Error {$/;"	P	implementation:Error
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    fn from(err: StripPrefixError) -> Error {$/;"	P	implementation:Error
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    fn from(_: ErrorStack) -> fmt::Error {$/;"	P	implementation:Error
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    fn from(e: ErrorStack) -> io::Error {$/;"	P	implementation:Error
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    fn from(e: ErrorStack) -> Error {$/;"	P	implementation:Error
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    fn from(e: ErrorStack) -> HandshakeError<S> {$/;"	P	implementation:HandshakeError
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn from(c: char) -> Self {$/;"	P	implementation:CowStr
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn from(c: char) -> Self {$/;"	P	implementation:InlineStr
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn from(s: &'a str) -> Self {$/;"	P	implementation:CowStr
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn from(s: Cow<'a, char>) -> Self {$/;"	P	implementation:CowStr
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn from(s: Cow<'a, str>) -> Self {$/;"	P	implementation:CowStr
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn from(s: CowStr<'a>) -> Self {$/;"	P	implementation:Cow
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn from(s: String) -> Self {$/;"	P	implementation:CowStr
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn from(body: hyper::Body) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn from(bytes: Bytes) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn from(file: File) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn from(s: &'static [u8]) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn from(s: &'static str) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn from(s: String) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn from(vec: Vec<u8>) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    fn from(r: Response) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    fn from(r: http::Response<T>) -> Response {$/;"	P	implementation:Response
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    fn from(b: Bytes) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    fn from(f: File) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    fn from(s: &'static [u8]) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    fn from(s: &'static str) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    fn from(s: String) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    fn from(v: Vec<u8>) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    fn from(builder: async_impl::ClientBuilder) -> Self {$/;"	P	implementation:ClientBuilder
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    fn from(r: http::Response<T>) -> Response {$/;"	P	implementation:Response
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    fn from(err: Error) -> js_sys::Error {$/;"	P	implementation:Error
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    fn from(err: Error) -> wasm_bindgen::JsValue {$/;"	P	implementation:JsValue
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    fn from(bytes: Bytes) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    fn from(s: &'static [u8]) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    fn from(s: &'static str) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    fn from(s: String) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    fn from(vec: Vec<u8>) -> Body {$/;"	P	implementation:Body
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn from(self) -> Self::Deserializer {$/;"	f
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn from(self) -> Self::Deserializer;$/;"	P	interface:IdentifierDeserializer
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn from(error: PathPersistError) -> TempPath {$/;"	P	implementation:TempPath
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn from(error: PathPersistError) -> io::Error {$/;"	P	implementation:Error
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn from(error: PersistError) -> NamedTempFile {$/;"	P	implementation:NamedTempFile
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn from(error: PersistError) -> io::Error {$/;"	P	implementation:Error
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn from(f: fmt::Error) -> Self {$/;"	P	implementation:EmitError
from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/result.rs	/^    fn from(err: ZipError) -> io::Error {$/;"	P	implementation:Error
from_adhoc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub(crate) fn from_adhoc<M>(message: M, backtrace: Option<Backtrace>) -> Self$/;"	P	implementation:Error
from_arg_matches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn from_arg_matches(matches: &ArgMatches) -> Result<Self, Error> {$/;"	P	implementation:Box
from_arg_matches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn from_arg_matches(matches: &ArgMatches) -> Result<Self, Error>;$/;"	P	interface:FromArgMatches
from_args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn from_args() -> Self {$/;"	P	interface:Parser
from_args_safe	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn from_args_safe() -> Result<Self, Error> {$/;"	P	interface:Parser
from_ast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub fn from_ast($/;"	P	implementation:Container
from_ast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn from_ast($/;"	P	implementation:Field
from_ast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, item: &syn::DeriveInput) -> Self {$/;"	P	implementation:Container
from_ast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn from_ast(cx: &Ctxt, variant: &syn::Variant) -> Self {$/;"	P	implementation:Variant
from_attrs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn from_attrs($/;"	P	implementation:Name
from_bn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn from_bn(bn: &BigNumRef) -> Result<Self, ErrorStack> {$/;"	P	implementation:Asn1Integer
from_bounds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/size_hint.rs	/^pub fn from_bounds<I>(iter: &I) -> Option<usize>$/;"	f
from_boxed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub(crate) fn from_boxed($/;"	P	implementation:Error
from_built_default_tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(crate) fn from_built_default_tls<T>($/;"	P	implementation:Connector
from_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn from_bytes($/;"	P	implementation:EcPoint
from_cert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn from_cert($/;"	P	implementation:OcspCertId
from_clap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn from_clap(matches: &ArgMatches) -> Self {$/;"	P	interface:Parser
from_const_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^    unsafe fn from_const_ptr<'a>(ptr: *const Self::CType) -> &'a Self {$/;"	P	interface:ForeignTypeRefExt
from_const_ptr_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^    unsafe fn from_const_ptr_opt<'a>(ptr: *const Self::CType) -> Option<&'a Self> {$/;"	P	interface:ForeignTypeRefExt
from_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub(crate) fn from_context<C, E>(context: C, error: E, backtrace: Option<Backtrace>) -> Self$/;"	P	implementation:Error
from_cp437	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^    fn from_cp437(self) -> Self::Target {$/;"	P	implementation:Vec
from_cp437	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^    fn from_cp437(self) -> Self::Target {$/;"	P	implementation:u8
from_cp437	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^    fn from_cp437(self) -> Self::Target;$/;"	P	interface:FromCp437
from_curve_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn from_curve_name(nid: Nid) -> Result<EcGroup, ErrorStack> {$/;"	P	implementation:EcGroup
from_curve_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn from_curve_name(nid: Nid) -> Result<EcKey<Params>, ErrorStack> {$/;"	P	implementation:EcKey
from_date_and_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn from_date_and_time($/;"	P	implementation:DateTime
from_dec_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn from_dec_str(s: &str) -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
from_der	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/macros.rs	/^macro_rules! from_der {$/;"	M
from_der	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    pub fn from_der(der: &[u8]) -> crate::Result<Certificate> {$/;"	P	implementation:Certificate
from_dh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn from_dh(dh: Dh<T>) -> Result<PKey<T>, ErrorStack> {$/;"	P	implementation:PKey
from_display	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub(crate) fn from_display<M>(message: M, backtrace: Option<Backtrace>) -> Self$/;"	P	implementation:Error
from_dsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn from_dsa(dsa: Dsa<T>) -> Result<PKey<T>, ErrorStack> {$/;"	P	implementation:PKey
from_ec_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn from_ec_key(ec_key: EcKey<T>) -> Result<PKey<T>, ErrorStack> {$/;"	P	implementation:PKey
from_eq_to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^    fn from_eq_to() {$/;"	f	module:test
from_file	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub fn from_file(filename: &str) -> Result<Page> {$/;"	P	implementation:Page
from_form	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    pub(crate) fn from_form(f: Form) -> Body {$/;"	P	implementation:Body
from_group	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn from_group(group: &EcGroupRef) -> Result<EcKey<Params>, ErrorStack> {$/;"	P	implementation:EcKey
from_hex_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn from_hex_str(s: &str) -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
from_hms	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms(hour: u32, min: u32, sec: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_hms_micro	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_micro(hour: u32, min: u32, sec: u32, micro: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_hms_micro_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_micro_opt(hour: u32, min: u32, sec: u32, micro: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_hms_milli	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_milli(hour: u32, min: u32, sec: u32, milli: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_hms_milli_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_milli_opt(hour: u32, min: u32, sec: u32, milli: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_hms_nano	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_nano(hour: u32, min: u32, sec: u32, nano: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_hms_nano_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_nano_opt(hour: u32, min: u32, sec: u32, nano: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_hms_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_hms_opt(hour: u32, min: u32, sec: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_i64(n: i64) -> Option<Month> {$/;"	P	implementation:Month
from_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_i64(n: i64) -> Option<Weekday> {$/;"	P	implementation:Weekday
from_isoywd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_isoywd(year: i32, week: u32, weekday: Weekday) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_isoywd_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_isoywd_opt(year: i32, week: u32, weekday: Weekday) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn from_iter<I, T>(itr: I) -> Self$/;"	P	interface:Parser
from_iter_safe	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn from_iter_safe<I, T>(itr: I) -> Result<Self, Error>$/;"	P	interface:Parser
from_local_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_local_date(&self, local: &NaiveDate) -> LocalResult<Date<Local>> {$/;"	P	implementation:Local
from_local_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_local_date(&self, local: &NaiveDate) -> LocalResult<Date<Self>> {$/;"	P	interface:TimeZone
from_local_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<DateTime<Local>> {$/;"	P	implementation:Local
from_local_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<DateTime<Self>> {$/;"	P	interface:TimeZone
from_mdf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn from_mdf(year: i32, mdf: Mdf) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_mdf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn from_mdf(Mdf(mdf): Mdf) -> Of {$/;"	P	implementation:Of
from_msdos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn from_msdos(datepart: u16, timepart: u16) -> DateTime {$/;"	P	implementation:DateTime
from_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn from_name() {$/;"	f	module:tests
from_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn from_name(name: &str) -> Option<MessageDigest> {$/;"	P	implementation:MessageDigest
from_nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn from_nid() {$/;"	f	module:tests
from_nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn from_nid(type_: Nid) -> Option<MessageDigest> {$/;"	P	implementation:MessageDigest
from_nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn from_nid(nid: Nid) -> Option<Cipher> {$/;"	P	implementation:Cipher
from_num_days_from_ce	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_num_days_from_ce(days: i32) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_num_days_from_ce_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_num_days_from_ce_opt(days: i32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_num_seconds_from_midnight	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_num_seconds_from_midnight(secs: u32, nano: u32) -> NaiveTime {$/;"	P	implementation:NaiveTime
from_num_seconds_from_midnight_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn from_num_seconds_from_midnight_opt(secs: u32, nano: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
from_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn from_of(year: i32, of: Of) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn from_of(Of(of): Of) -> Mdf {$/;"	P	implementation:Mdf
from_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn from_offset(offset: &FixedOffset) -> FixedOffset {$/;"	P	implementation:FixedOffset
from_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_offset(_offset: &FixedOffset) -> Local {$/;"	P	implementation:Local
from_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_offset(offset: &Self::Offset) -> Self;$/;"	P	interface:TimeZone
from_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn from_offset(_state: &Utc) -> Utc {$/;"	P	implementation:Utc
from_params	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn from_params(p: BigNum, g: BigNum, q: BigNum) -> Result<Dh<Params>, ErrorStack> {$/;"	P	implementation:Dh
from_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn from_path(path: impl Into<PathBuf>) -> Self {$/;"	P	implementation:TempPath
from_pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/macros.rs	/^macro_rules! from_pem {$/;"	M
from_pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    pub fn from_pem(buf: &[u8]) -> crate::Result<Identity> {$/;"	P	implementation:Identity
from_pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    pub fn from_pem(pem: &[u8]) -> crate::Result<Certificate> {$/;"	P	implementation:Certificate
from_period	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn from_period(period: c_long) -> Result<Asn1Time, ErrorStack> {$/;"	P	implementation:Asn1Time
from_pkcs12_der	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    pub fn from_pkcs12_der(der: &[u8], password: &str) -> crate::Result<Identity> {$/;"	P	implementation:Identity
from_pqg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn from_pqg($/;"	P	implementation:Dh
from_private_components	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    pub fn from_private_components($/;"	P	implementation:Dsa
from_private_components	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn from_private_components($/;"	P	implementation:EcKey
from_private_components	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ecdsa.rs	/^    pub fn from_private_components(r: BigNum, s: BigNum) -> Result<EcdsaSig, ErrorStack> {$/;"	P	implementation:EcdsaSig
from_private_components	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn from_private_components($/;"	P	implementation:Rsa
from_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^    pub unsafe fn from_ptr(bio: *mut ffi::BIO) -> MemBio {$/;"	P	implementation:MemBio
from_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/conf.rs	/^    pub unsafe fn from_ptr(ptr: *mut ffi::CONF_METHOD) -> ConfMethod {$/;"	P	implementation:ConfMethod
from_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub unsafe fn from_ptr(x: *const ffi::EVP_MD) -> Self {$/;"	P	implementation:MessageDigest
from_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub unsafe fn from_ptr(ctx: *mut ffi::SSL_CTX) -> SslContextBuilder {$/;"	P	implementation:SslContextBuilder
from_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub unsafe fn from_ptr(ptr: *const ffi::SSL_METHOD) -> SslMethod {$/;"	P	implementation:SslMethod
from_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    unsafe fn from_ptr(ptr: *mut ffi::SSL_CIPHER) -> SslCipher {$/;"	P	implementation:SslCipher
from_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    unsafe fn from_ptr(ptr: *mut T::StackType) -> Stack<T> {$/;"	P	implementation:Stack
from_ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub unsafe fn from_ptr(ptr: *const ffi::EVP_CIPHER) -> Cipher {$/;"	P	implementation:Cipher
from_ptr_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^    unsafe fn from_ptr_opt(ptr: *mut Self::CType) -> Option<Self> {$/;"	P	interface:ForeignTypeExt
from_public_components	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    pub fn from_public_components($/;"	P	implementation:Dsa
from_public_components	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn from_public_components(n: BigNum, e: BigNum) -> Result<Rsa<Public>, ErrorStack> {$/;"	P	implementation:Rsa
from_public_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn from_public_key($/;"	P	implementation:EcKey
from_public_key_affine_coordinates	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn from_public_key_affine_coordinates($/;"	P	implementation:EcKey
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn from_raw(ptr: NonNull<T>) -> Self {$/;"	f
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn from_raw(value: c_int) -> Self {$/;"	P	implementation:Asn1Type
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ex_data.rs	/^    pub unsafe fn from_raw(idx: c_int) -> Index<T, U> {$/;"	P	implementation:Index
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^    pub fn from_raw(raw: c_int) -> Nid {$/;"	P	implementation:Nid
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn from_raw(raw: c_int) -> OcspCertStatus {$/;"	P	implementation:OcspCertStatus
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn from_raw(raw: c_int) -> OcspResponseStatus {$/;"	P	implementation:OcspResponseStatus
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn from_raw(raw: c_int) -> OcspRevokedStatus {$/;"	P	implementation:OcspRevokedStatus
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn from_raw(value: c_int) -> Id {$/;"	P	implementation:Id
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn from_raw(value: c_int) -> Padding {$/;"	P	implementation:Padding
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/srtp.rs	/^    pub fn from_raw(value: c_ulong) -> SrtpProfileId {$/;"	P	implementation:SrtpProfileId
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    pub fn from_raw(raw: c_int) -> ErrorCode {$/;"	P	implementation:ErrorCode
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn from_raw(raw: c_int) -> SslFiletype {$/;"	P	implementation:SslFiletype
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn from_raw(raw: c_int) -> StatusType {$/;"	P	implementation:NameType
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn from_raw(raw: c_int) -> StatusType {$/;"	P	implementation:StatusType
from_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub unsafe fn from_raw(err: c_int) -> X509VerifyResult {$/;"	P	implementation:X509VerifyResult
from_raw_parts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub unsafe fn from_raw_parts(ssl: *mut ffi::SSL, stream: S) -> Self {$/;"	P	implementation:SslStream
from_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^    pub(crate) fn from_ref<T: Key>(val: T) -> Self {$/;"	P	implementation:Id
from_rsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn from_rsa(rsa: Rsa<T>) -> Result<PKey<T>, ErrorStack> {$/;"	P	implementation:PKey
from_rustls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    pub(crate) fn from_rustls(version: rustls::ProtocolVersion) -> Option<Self> {$/;"	P	implementation:Version
from_slice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn from_slice(n: &[u8]) -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
from_smime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^    pub fn from_smime(input: &[u8]) -> Result<(Pkcs7, Option<Vec<u8>>), ErrorStack> {$/;"	P	implementation:Pkcs7
from_std	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub(crate) fn from_std<E>(error: E, backtrace: Option<Backtrace>) -> Self$/;"	P	implementation:Error
from_std	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn from_std(duration: StdDuration) -> Result<Duration, OutOfRangeError> {$/;"	P	implementation:Duration
from_std	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn from_std(duration: StdDuration) -> Result<Duration, OutOfRangeError> {$/;"	P	implementation:Duration
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<DateTime<Local>> {$/;"	P	implementation:DateTime
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<DateTime<Utc>> {$/;"	P	implementation:DateTime
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Month
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Weekday
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn from_str(s: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:DateTime
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn from_str(s: &str) -> ParseResult<NaiveDate> {$/;"	P	implementation:NaiveDate
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn from_str(s: &str) -> ParseResult<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn from_str(s: &str) -> ParseResult<NaiveTime> {$/;"	P	implementation:NaiveTime
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	P	implementation:AppSettings
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	P	implementation:ArgSettings
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    fn from_str() {$/;"	f	module:tests
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:RegexRef
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/value_hint.rs	/^    fn from_str(s: &str) -> Result<Self, <Self as FromStr>::Err> {$/;"	P	implementation:ValueHint
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn from_str(input: &str, ignore_case: bool) -> Result<Self, String> {$/;"	P	interface:ArgEnum
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    fn from_str(s: &str) -> Result<Self, Self::Err> {$/;"	P	implementation:Shell
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn from_str(s: &str) -> Result<Asn1Time, ErrorStack> {$/;"	P	implementation:Asn1Time
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn from_str(txt: &str) -> Result<Asn1Object, ErrorStack> {$/;"	P	implementation:Asn1Object
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    pub fn from_str(rename_all_str: &str) -> Result<Self, ParseError> {$/;"	P	implementation:RenameRule
from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    pub fn from_str(v: &str) -> Yaml {$/;"	P	implementation:Yaml
from_str_x509	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn from_str_x509(s: &str) -> Result<Asn1Time, ErrorStack> {$/;"	P	implementation:Asn1Time
from_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn from_time(tm: ::time::Tm) -> Result<DateTime, ()> {$/;"	P	implementation:DateTime
from_timestamp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn from_timestamp(secs: i64, nsecs: u32) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
from_timestamp_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn from_timestamp_opt(secs: i64, nsecs: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
from_u16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^    pub fn from_u16(val: u16) -> CompressionMethod {$/;"	P	implementation:CompressionMethod
from_u32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_u32(n: u32) -> Option<Month> {$/;"	P	implementation:Month
from_u32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn from_u32(n: u32) -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
from_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_u64(n: u64) -> Option<Month> {$/;"	P	implementation:Month
from_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn from_u64(n: u64) -> Option<Weekday> {$/;"	P	implementation:Weekday
from_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn from_u8(system: u8) -> System {$/;"	P	implementation:System
from_unix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn from_unix(time: time_t) -> Result<Asn1Time, ErrorStack> {$/;"	P	implementation:Asn1Time
from_unknown_io_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    fn from_unknown_io_error() {$/;"	f	module:tests
from_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn from_usage(u: &'help str) -> Self {$/;"	P	implementation:Arg
from_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    pub(crate) fn from_usage(usage: &'help str) -> Self {$/;"	P	implementation:UsageParser
from_utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn from_utc(date: NaiveDate, offset: Tz::Offset) -> Date<Tz> {$/;"	P	implementation:Date
from_utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn from_utc(datetime: NaiveDateTime, offset: Tz::Offset) -> DateTime<Tz> {$/;"	P	implementation:DateTime
from_utc_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_utc_date(&self, utc: &NaiveDate) -> Date<Local> {$/;"	P	implementation:Local
from_utc_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_utc_date(&self, utc: &NaiveDate) -> Date<Self> {$/;"	P	interface:TimeZone
from_utc_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn from_utc_datetime(&self, utc: &NaiveDateTime) -> DateTime<Local> {$/;"	P	implementation:Local
from_utc_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn from_utc_datetime(&self, utc: &NaiveDateTime) -> DateTime<Self> {$/;"	P	interface:TimeZone
from_utf8_lossy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/mod.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> &str {$/;"	f	module:string
from_utf8_lossy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/mod.rs	/^    pub fn from_utf8_lossy(bytes: &[u8]) -> Cow<str> {$/;"	f	module:string
from_weekday_of_month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_weekday_of_month(year: i32, month: u32, weekday: Weekday, n: u8) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_weekday_of_month_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_weekday_of_month_opt($/;"	P	implementation:NaiveDate
from_yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn from_yaml(y: &'help Yaml) -> Self {$/;"	P	implementation:Arg
from_yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn from_yaml(yaml: &'help Yaml) -> Self {$/;"	P	implementation:ArgGroup
from_yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn from_yaml(y: &'help Yaml) -> Self {$/;"	P	implementation:App
from_yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/lib.rs	/^    pub fn from_yaml(yaml: &yaml_rust::Yaml) -> App {$/;"	P	implementation:SubCommand
from_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn from_year(year: i32) -> YearFlags {$/;"	P	implementation:YearFlags
from_year_mod_400	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn from_year_mod_400(year: i32) -> YearFlags {$/;"	P	implementation:YearFlags
from_ymd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_ymd(year: i32, month: u32, day: u32) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_ymd_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_ymd_opt(year: i32, month: u32, day: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
from_yo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_yo(year: i32, ordinal: u32) -> NaiveDate {$/;"	P	implementation:NaiveDate
from_yo_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn from_yo_opt(year: i32, ordinal: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
frontmatter_parsing_test	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    fn frontmatter_parsing_test() {$/;"	f	module:tests
func	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    func: *const c_char,$/;"	m	struct:Error
func	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    func: Arc<dyn Fn(&Url) -> Option<crate::Result<ProxyScheme>> + Send + Sync + 'static>,$/;"	m	struct:Custom
function	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    pub fn function(&self) -> Option<&'static str> {$/;"	P	implementation:Error
function	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^        fn function<'a>(link: BrokenLink<'a>) -> Option<(CowStr<'a>, CowStr<'a>)> {$/;"	f	function:test::common_lifetime_patterns_allowed
g	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    pub fn g(&self) -> &BigNumRef {$/;"	f
g_settings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    g_settings: AppFlags,$/;"	m	struct:App
gather_conflicts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn gather_conflicts(&mut self, cmd: &Command, matcher: &ArgMatcher, arg_id: &Id) -> Vec<Id> /;"	P	implementation:Conflicts
gather_direct_conflicts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn gather_direct_conflicts(&mut self, cmd: &Command, arg_id: &Id) -> &[Id] {$/;"	P	implementation:Conflicts
gather_requires	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn gather_requires(&mut self, matcher: &ArgMatcher) {$/;"	P	implementation:Validator
gcd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn gcd($/;"	P	implementation:BigNumRef
gen_boundary	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^fn gen_boundary() -> String {$/;"	f
generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/mod.rs	/^    fn generate(&self, cmd: &Command, buf: &mut dyn Write);$/;"	P	interface:Generator
generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/mod.rs	/^pub fn generate<G, S>(gen: G, cmd: &mut clap::Command, bin_name: S, buf: &mut dyn Write)$/;"	f
generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/bash.rs	/^    fn generate(&self, cmd: &Command, buf: &mut dyn Write) {$/;"	P	implementation:Bash
generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/elvish.rs	/^    fn generate(&self, cmd: &Command, buf: &mut dyn Write) {$/;"	P	implementation:Elvish
generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/fish.rs	/^    fn generate(&self, cmd: &Command, buf: &mut dyn Write) {$/;"	P	implementation:Fish
generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/powershell.rs	/^    fn generate(&self, cmd: &Command, buf: &mut dyn Write) {$/;"	P	implementation:PowerShell
generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    fn generate(&self, cmd: &clap::Command, buf: &mut dyn std::io::Write) {$/;"	P	implementation:Shell
generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/zsh.rs	/^    fn generate(&self, cmd: &Command, buf: &mut dyn Write) {$/;"	P	implementation:Zsh
generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    pub fn generate(bits: u32) -> Result<Dsa<Private>, ErrorStack> {$/;"	P	implementation:Dsa
generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn generate() {$/;"	f	module:test
generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn generate(group: &EcGroupRef) -> Result<EcKey<Private>, ErrorStack> {$/;"	P	implementation:EcKey
generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn generate(bits: u32) -> Result<Rsa<Private>, ErrorStack> {$/;"	P	implementation:Rsa
generate	/mnt/c/Users/SamanthaC/rust/md_puppy/src/cli.rs	/^    pub fn generate(&self) {$/;"	P	implementation:Shell
generate_ed25519	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn generate_ed25519() -> Result<PKey<Private>, ErrorStack> {$/;"	P	implementation:PKey
generate_ed448	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn generate_ed448() -> Result<PKey<Private>, ErrorStack> {$/;"	P	implementation:PKey
generate_eddsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn generate_eddsa(nid: c_int) -> Result<PKey<Private>, ErrorStack> {$/;"	P	implementation:PKey
generate_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/elvish.rs	/^fn generate_inner<'help>($/;"	f
generate_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/powershell.rs	/^fn generate_inner<'help>($/;"	f
generate_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn generate_key(self) -> Result<Dh<Private>, ErrorStack> {$/;"	P	implementation:Dh
generate_params	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn generate_params(prime_len: u32, generator: u32) -> Result<Dh<Params>, ErrorStack> {$/;"	P	implementation:Dh
generate_prime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn generate_prime($/;"	P	implementation:BigNumRef
generate_to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/mod.rs	/^pub fn generate_to<G, S, T>($/;"	f
generate_with_e	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn generate_with_e() {$/;"	f	module:test
generate_with_e	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn generate_with_e(bits: u32, e: &BigNumRef) -> Result<Rsa<Private>, ErrorStack> {$/;"	P	implementation:Rsa
generate_x25519	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn generate_x25519() -> Result<PKey<Private>, ErrorStack> {$/;"	P	implementation:PKey
generate_x448	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn generate_x448() -> Result<PKey<Private>, ErrorStack> {$/;"	P	implementation:PKey
generated	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub(crate) fn generated(mut self) -> Self {$/;"	P	implementation:Arg
generator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/lib.rs	/^pub mod generator;$/;"	n
generator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn generator(&self) -> &BigNumRef {$/;"	f
generator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn generator() {$/;"	f	module:test
generator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn generator(&self) -> &EcPointRef {$/;"	P	implementation:EcGroupRef
generic_foreign_type_and_impl_send_sync	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/macros.rs	/^macro_rules! generic_foreign_type_and_impl_send_sync {$/;"	M
generics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    generics: syn::Generics,$/;"	m	struct:Parameters
generics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub generics: &'a syn::Generics,$/;"	m	struct:Container
generics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    generics: syn::Generics,$/;"	m	struct:Parameters
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    pub(crate) fn get<K: ?Sized>(&self, key: &K) -> Option<&Arg<'help>>$/;"	P	implementation:MKeyMap
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn get(&self, arg: &Id) -> Option<&MatchedArg> {$/;"	P	implementation:ArgMatcher
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn get(&self) -> i64 {$/;"	P	implementation:Asn1IntegerRef
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    pub fn get() -> ErrorStack {$/;"	P	implementation:ErrorStack
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    pub fn get() -> Option<Error> {$/;"	P	implementation:Error
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    pub fn get(&self, idx: usize) -> Option<&T::Ref> {$/;"	P	implementation:StackRef
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn get(&'s self, key: &'b str) -> Option<&'b LinkDef<'input>> {$/;"	f
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub fn get(self) -> usize {$/;"	P	implementation:TreeIndex
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn get<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn get<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/mod.rs	/^pub fn get<T: crate::IntoUrl>(url: T) -> crate::Result<Response> {$/;"	f
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs	/^pub async fn get<T: IntoUrl>(url: T) -> crate::Result<Response> {$/;"	f
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn get<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn get(&self) -> bool {$/;"	P	implementation:BoolAttr
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn get(self) -> Option<T> {$/;"	P	implementation:Attr
get	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn get(self) -> Vec<T> {$/;"	P	implementation:VecAttr
get_1024_160	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn get_1024_160() -> Result<Dh<Params>, ErrorStack> {$/;"	P	implementation:Dh
get_2048_224	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn get_2048_224() -> Result<Dh<Params>, ErrorStack> {$/;"	P	implementation:Dh
get_2048_256	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn get_2048_256() -> Result<Dh<Params>, ErrorStack> {$/;"	P	implementation:Dh
get_about	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_about(&self) -> Option<&'help str> {$/;"	P	implementation:App
get_affine_coordinates	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn get_affine_coordinates() {$/;"	f	module:test
get_affine_coordinates_gfp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn get_affine_coordinates_gfp() {$/;"	f	module:test
get_after_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_after_help(&self) -> Option<&str> {$/;"	P	implementation:App
get_after_long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_after_long_help(&self) -> Option<&str> {$/;"	P	implementation:App
get_all_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_all_aliases(&self) -> impl Iterator<Item = &str> + '_ {$/;"	P	implementation:App
get_all_long_flag_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_all_long_flag_aliases(&self) -> impl Iterator<Item = &'help str> + '_ {$/;"	P	implementation:App
get_all_short_flag_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_all_short_flag_aliases(&self) -> impl Iterator<Item = char> + '_ {$/;"	P	implementation:App
get_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn get_arg(&self, arg: &Id) -> Option<&MatchedArg> {$/;"	P	implementation:ArgMatches
get_arg_conflicts_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_arg_conflicts_with(&self, arg: &Arg) -> Vec<&Arg<'help>> \/\/ FIXME: This could p/;"	P	implementation:App
get_args_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^    fn get_args_tag(&self, incl_reqs: bool) -> Option<String> {$/;"	P	implementation:Usage
get_arguments	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_arguments(&self) -> impl Iterator<Item = &Arg<'help>> {$/;"	P	implementation:App
get_author	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_author(&self) -> Option<&'help str> {$/;"	P	implementation:App
get_before_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_before_help(&self) -> Option<&str> {$/;"	P	implementation:App
get_before_long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_before_long_help(&self) -> Option<&str> {$/;"	P	implementation:App
get_bin_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_bin_name(&self) -> Option<&str> {$/;"	P	implementation:App
get_bio_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn get_bio_error(&mut self) -> Option<io::Error> {$/;"	P	implementation:SslStream
get_buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^    pub fn get_buf(&self) -> &[u8] {$/;"	P	implementation:MemBio
get_color	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_color(&self) -> ColorChoice {$/;"	P	implementation:App
get_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn get_context(&self, kind: ContextKind) -> Option<&ContextValue> {$/;"	P	implementation:Error
get_ctx_options	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn get_ctx_options() {$/;"	f
get_default_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_default_values(&self) -> &[&OsStr] {$/;"	P	implementation:Arg
get_details_entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub fn get_details_entry<P>($/;"	f
get_details_entry_with_meta	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^fn get_details_entry_with_meta<P>($/;"	f
get_dir_content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub fn get_dir_content<P>(path: P) -> Result<DirContent>$/;"	f
get_dir_content2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub fn get_dir_content2<P>(path: P, options: &DirOptions) -> Result<DirContent>$/;"	f
get_directory_counts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub(crate) fn get_directory_counts($/;"	P	implementation:ZipArchive
get_display_order	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub(crate) fn get_display_order(&self) -> usize {$/;"	P	implementation:Arg
get_display_order	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_display_order(&self) -> usize {$/;"	P	implementation:App
get_entity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/entities.rs	/^pub(crate) fn get_entity(bytes: &[u8]) -> Option<&'static str> {$/;"	f
get_env	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_env(&self) -> Option<&OsStr> {$/;"	P	implementation:Arg
get_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn get_error(&self, ret: c_int) -> ErrorCode {$/;"	P	implementation:SslRef
get_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn get_error(&self) -> Option<ScanError> {$/;"	P	implementation:Scanner
get_explicit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub(crate) fn get_explicit(self) -> usize {$/;"	P	implementation:DisplayOrder
get_filename_from_path	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^pub fn get_filename_from_path(path: &str) -> String {$/;"	f
get_filename_from_path_test	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    fn get_filename_from_path_test() {$/;"	f	module:tests
get_from_environment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^fn get_from_environment() -> SystemProxyMap {$/;"	f
get_from_registry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^fn get_from_registry() -> Option<RegistryProxyValues> {$/;"	f
get_from_registry_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^fn get_from_registry_impl() -> Result<RegistryProxyValues, Box<dyn Error>> {$/;"	f
get_global	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_global(&self) -> bool {$/;"	P	implementation:Arg
get_global_arg_conflicts_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    fn get_global_arg_conflicts_with(&self, arg: &Arg) -> Vec<&Arg<'help>> \/\/ FIXME: This coul/;"	P	implementation:App
get_groups	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_groups(&self) -> impl Iterator<Item = &ArgGroup<'help>> {$/;"	P	implementation:App
get_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_help(&self) -> Option<&'help str> {$/;"	P	implementation:Arg
get_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    pub fn get_help(&self) -> Option<&'help str> {$/;"	P	implementation:PossibleValue
get_help_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^fn get_help_flag(cmd: &Command) -> Option<&'static str> {$/;"	f
get_help_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_help_heading(&self) -> Option<&'help str> {$/;"	P	implementation:Arg
get_help_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_help_heading(&self) -> Option<&'help str> {$/;"	P	implementation:App
get_help_template	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_help_template(&self) -> Option<&str> {$/;"	P	implementation:App
get_html_end_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^fn get_html_end_tag(text_bytes: &[u8]) -> Option<&'static str> {$/;"	f
get_id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_id(&self) -> &'help str {$/;"	P	implementation:Arg
get_id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_id(&self) -> Id {$/;"	P	implementation:App
get_index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_index(&self) -> Option<usize> {$/;"	P	implementation:Arg
get_index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn get_index(&self, index: usize) -> Option<usize> {$/;"	P	implementation:MatchedArg
get_keymap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_keymap(&self) -> &MKeyMap<'help> {$/;"	P	implementation:App
get_lit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn get_lit_str<'a>(cx: &Ctxt, attr_name: Symbol, lit: &'a syn::Lit) -> Result<&'a syn::LitStr, (/;"	f
get_lit_str2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn get_lit_str2<'a>($/;"	f
get_long	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_long(&self) -> Option<&'help str> {$/;"	P	implementation:Arg
get_long_about	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_long_about(&self) -> Option<&'help str> {$/;"	P	implementation:App
get_long_and_visible_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_long_and_visible_aliases(&self) -> Option<Vec<&'help str>> {$/;"	P	implementation:Arg
get_long_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_long_flag(&self) -> Option<&'help str> {$/;"	P	implementation:App
get_long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_long_help(&self) -> Option<&'help str> {$/;"	P	implementation:Arg
get_long_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_long_version(&self) -> Option<&'help str> {$/;"	P	implementation:App
get_lowerbound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn get_lowerbound(&self, c: u8, count: usize, both: bool) -> usize {$/;"	P	implementation:InlineStack
get_matches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_matches(self) -> ArgMatches {$/;"	P	implementation:App
get_matches_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_matches_from<I, T>(mut self, itr: I) -> ArgMatches$/;"	P	implementation:App
get_matches_from_safe	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_matches_from_safe<I, T>(self, itr: I) -> ClapResult<ArgMatches>$/;"	P	implementation:App
get_matches_from_safe_borrow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_matches_from_safe_borrow<I, T>(&mut self, itr: I) -> ClapResult<ArgMatches>$/;"	P	implementation:App
get_matches_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_matches_mut(&mut self) -> ArgMatches {$/;"	P	implementation:App
get_matches_safe	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_matches_safe(self) -> ClapResult<ArgMatches> {$/;"	P	implementation:App
get_matches_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    pub(crate) fn get_matches_with($/;"	P	implementation:Parser
get_max_term_width	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_max_term_width(&self) -> Option<usize> {$/;"	P	implementation:App
get_member	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn get_member(params: &Parameters, field: &Field, member: &Member) -> TokenStream {$/;"	f
get_multiple_renames	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn get_multiple_renames<'a>($/;"	f
get_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn get_mut(&mut self, arg: &Id) -> Option<&mut MatchedArg> {$/;"	P	implementation:ArgMatcher
get_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^pub unsafe fn get_mut<'a, S: 'a>(bio: *mut BIO) -> &'a mut S {$/;"	f
get_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	P	implementation:MidHandshakeSslStream
get_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	P	implementation:SslStream
get_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn get_mut(&mut self) -> &mut S {$/;"	P	implementation:SslStreamBuilder
get_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    pub fn get_mut(&mut self, idx: usize) -> Option<&mut T::Ref> {$/;"	P	implementation:StackRef
get_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_name(&self) -> &'help str {$/;"	P	implementation:Arg
get_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_name(&self) -> &str {$/;"	P	implementation:App
get_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    pub fn get_name(&self) -> &'help str {$/;"	P	implementation:PossibleValue
get_name_and_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    pub fn get_name_and_aliases(&self) -> impl Iterator<Item = &'help str> + '_ {$/;"	P	implementation:PossibleValue
get_next_help_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_next_help_heading(&self) -> Option<&'help str> {$/;"	P	implementation:App
get_non_positionals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_non_positionals(&self) -> impl Iterator<Item = &Arg<'help>> {$/;"	P	implementation:App
get_non_positionals_with_no_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_non_positionals_with_no_heading(&self) -> impl Iterator<Item = &Arg<'help>/;"	P	implementation:App
get_num_vals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_num_vals(&self) -> Option<usize> {$/;"	P	implementation:Arg
get_occurrences	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn get_occurrences(&self) -> u64 {$/;"	P	implementation:MatchedArg
get_opts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_opts(&self) -> impl Iterator<Item = &Arg<'help>> {$/;"	P	implementation:App
get_output_dir	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^pub fn get_output_dir(category: &str) -> String {$/;"	f
get_output_dir_test	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    fn get_output_dir_test() {$/;"	f	module:tests
get_override_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_override_help(&self) -> Option<&str> {$/;"	P	implementation:App
get_override_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_override_usage(&self) -> Option<&str> {$/;"	P	implementation:App
get_placeholder	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^fn get_placeholder(template: &str) -> Option<&str> {$/;"	f
get_placeholder_test	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    fn get_placeholder_test() {$/;"	f	module:tests
get_plain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn get_plain(&mut self) -> &mut W {$/;"	P	implementation:GenericZipWriter
get_positionals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_positionals(&self) -> impl Iterator<Item = &Arg<'help>> {$/;"	P	implementation:App
get_positionals_with_no_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_positionals_with_no_heading(&self) -> impl Iterator<Item = &Arg<'help>> {$/;"	P	implementation:App
get_possible_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_possible_values(&self) -> Option<&[PossibleValue]> {$/;"	P	implementation:Arg
get_precise_ns	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn get_precise_ns() -> u64 {$/;"	f	module:inner::mac
get_precise_ns	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn get_precise_ns() -> u64 {$/;"	f	module:inner::unix
get_precise_ns	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn get_precise_ns() -> u64 {$/;"	f	module:inner
get_public_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ecdsa.rs	/^    fn get_public_key(group: &EcGroup, x: &EcKey<Private>) -> Result<EcKey<Public>, ErrorStack> /;"	f	module:test
get_raw_rbio	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn get_raw_rbio(&self) -> *mut ffi::BIO {$/;"	P	implementation:SslRef
get_raw_reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub(crate) fn get_raw_reader(&mut self) -> &mut dyn Read {$/;"	P	implementation:ZipFile
get_reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn get_reader(&mut self) -> &mut ZipFileReader<'a> {$/;"	P	implementation:ZipFile
get_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^pub unsafe fn get_ref<'a, S: 'a>(bio: *mut BIO) -> &'a S {$/;"	f
get_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn get_ref(&self) -> &S {$/;"	P	implementation:MidHandshakeSslStream
get_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn get_ref(&self) -> &S {$/;"	P	implementation:SslStream
get_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn get_ref(&self) -> &S {$/;"	P	implementation:SslStreamBuilder
get_renames	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn get_renames<'a>($/;"	f
get_replacement	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_replacement(&self, key: &OsStr) -> Option<&[&str]> {$/;"	P	implementation:App
get_required_usage_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^    pub(crate) fn get_required_usage_from($/;"	P	implementation:Usage
get_rfc2409_prime_1024	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn get_rfc2409_prime_1024() -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
get_rfc2409_prime_768	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn get_rfc2409_prime_768() -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
get_rfc3526_prime_1536	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn get_rfc3526_prime_1536() -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
get_rfc3526_prime_2048	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn get_rfc3526_prime_2048() -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
get_rfc3526_prime_3072	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn get_rfc3526_prime_3072() -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
get_rfc3526_prime_4096	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn get_rfc3526_prime_4096() -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
get_rfc3526_prime_6144	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn get_rfc3526_prime_6144() -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
get_rfc3526_prime_8192	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn get_rfc3526_prime_8192() -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
get_ser_and_de	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn get_ser_and_de<'a, 'b, T, F>($/;"	f
get_serde_meta_items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^pub fn get_serde_meta_items(cx: &Ctxt, attr: &syn::Attribute) -> Result<Vec<syn::NestedMeta>, ()/;"	f
get_short	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_short(&self) -> Option<char> {$/;"	P	implementation:Arg
get_short_and_visible_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_short_and_visible_aliases(&self) -> Option<Vec<char>> {$/;"	P	implementation:Arg
get_short_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_short_flag(&self) -> Option<char> {$/;"	P	implementation:App
get_shutdown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn get_shutdown(&mut self) -> ShutdownState {$/;"	P	implementation:SslStream
get_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub fn get_size<P>(path: P) -> Result<u64>$/;"	f
get_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn get_subcommand(&self, id: &Id) -> Option<&SubCommand> {$/;"	P	implementation:ArgMatches
get_subcommand_help_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_subcommand_help_heading(&self) -> Option<&str> {$/;"	P	implementation:App
get_subcommand_value_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_subcommand_value_name(&self) -> Option<&str> {$/;"	P	implementation:App
get_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_subcommands(&self) -> impl Iterator<Item = &App<'help>> {$/;"	P	implementation:App
get_subcommands_containing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    fn get_subcommands_containing(&self, arg: &Arg) -> Vec<&App<'help>> {$/;"	P	implementation:App
get_subcommands_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_subcommands_mut(&mut self) -> impl Iterator<Item = &mut App<'help>> {$/;"	P	implementation:App
get_subommand_help_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_subommand_help_heading(&self) -> Option<&str> {$/;"	P	implementation:App
get_sys_proxies	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^fn get_sys_proxies($/;"	f
get_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn get_tag(&self, tag: &mut [u8]) -> Result<(), ErrorStack> {$/;"	P	implementation:Crypter
get_term_width	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_term_width(&self) -> Option<usize> {$/;"	P	implementation:App
get_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn get_time() -> Timespec {$/;"	f
get_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn get_time() -> (i64, i32) {$/;"	f	module:inner::mac
get_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn get_time() -> (i64, i32) {$/;"	f	module:inner::unix
get_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn get_time() -> (i64, i32) {$/;"	f	module:inner
get_tooltip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/elvish.rs	/^fn get_tooltip<T: ToString>(help: Option<&str>, data: T) -> String {$/;"	f
get_tooltip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/powershell.rs	/^fn get_tooltip<T: ToString>(help: Option<&str>, data: T) -> String {$/;"	f
get_usage_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn get_usage_name(&self) -> Option<&str> {$/;"	P	implementation:App
get_used_global_args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    fn get_used_global_args(&self, matches: &ArgMatches, global_arg_vec: &mut Vec<Id>) {$/;"	P	implementation:App
get_value	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^fn get_value(key: &str, page: &Page) -> Option<String> {$/;"	f
get_value_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_value_hint(&self) -> ValueHint {$/;"	P	implementation:Arg
get_value_names	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_value_names(&self) -> Option<&[&'help str]> {$/;"	P	implementation:Arg
get_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_version(&self) -> Option<&'help str> {$/;"	P	implementation:App
get_visible_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_visible_aliases(&self) -> Option<Vec<&'help str>> {$/;"	P	implementation:Arg
get_visible_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_visible_aliases(&self) -> impl Iterator<Item = &'help str> + '_ {$/;"	P	implementation:App
get_visible_long_flag_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_visible_long_flag_aliases(&self) -> impl Iterator<Item = &'help str> + '_ {$/;"	P	implementation:App
get_visible_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    pub fn get_visible_name(&self) -> Option<&'help str> {$/;"	P	implementation:PossibleValue
get_visible_short_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn get_visible_short_aliases(&self) -> Option<Vec<char>> {$/;"	P	implementation:Arg
get_visible_short_flag_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn get_visible_short_flag_aliases(&self) -> impl Iterator<Item = char> + '_ {$/;"	P	implementation:App
get_where_predicates	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn get_where_predicates($/;"	f
get_with_tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn get_with_tokens(self) -> Option<(TokenStream, T)> {$/;"	P	implementation:Attr
getter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    getter: Option<syn::ExprPath>,$/;"	m	struct:Field
getter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn getter(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Field
global	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn global(self, yes: bool) -> Self {$/;"	P	implementation:Arg
global_setting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn global_setting(mut self, setting: AppSettings) -> Self {$/;"	P	implementation:App
global_setting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/tests.rs	/^fn global_setting() {$/;"	f
global_settings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn global_settings(mut self, settings: &[AppSettings]) -> Self {$/;"	P	implementation:App
good	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    pub(crate) fn good(&mut self, msg: impl Into<String>) {$/;"	P	implementation:Colorizer
good	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn good<T: Into<String> + AsRef<[u8]>>(&mut self, msg: T) -> io::Result<()> {$/;"	P	implementation:Help
graph	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/mod.rs	/^mod graph;$/;"	n
group	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn group<T: Key>(mut self, group_id: T) -> Self {$/;"	P	implementation:Arg
group	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn group<G: Into<ArgGroup<'help>>>(mut self, group: G) -> Self {$/;"	P	implementation:App
group	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn group(&self) -> &EcGroupRef {$/;"	f
grouped_values_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn grouped_values_of<T: Key>(&self, id: T) -> Option<GroupedValues> {$/;"	P	implementation:ArgMatches
groups	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn groups<T: Key>(mut self, group_ids: &[T]) -> Self {$/;"	P	implementation:Arg
groups	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    fn groups() {$/;"	f	module:test
groups	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    groups: Vec<ArgGroup<'help>>,$/;"	m	struct:App
groups	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn groups<I, T>(mut self, groups: I) -> Self$/;"	P	implementation:App
groups_for_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn groups_for_arg<'a>(&'a self, arg: &Id) -> impl Iterator<Item = Id> + 'a {$/;"	P	implementation:App
gzip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn gzip(mut self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
gzip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn gzip(body: Body) -> Decoder {$/;"	P	implementation:Decoder
gzip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn gzip(self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
handle	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    handle: Option<JoinHandle<()>>,$/;"	m	struct:Server
handle_emphasis	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn handle_emphasis(&mut self) {$/;"	P	implementation:Parser
handle_inline	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn handle_inline(&mut self) {$/;"	P	implementation:Parser
handle_inline_pass1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn handle_inline_pass1(&mut self) {$/;"	P	implementation:Parser
handshake	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn handshake(mut self) -> Result<SslStream<S>, HandshakeError<S>> {$/;"	f
handshake_digest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn handshake_digest(&self) -> Option<MessageDigest> {$/;"	P	implementation:SslCipherRef
has_args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn has_args(&self) -> bool {$/;"	P	implementation:App
has_flatten	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    has_flatten: bool,$/;"	m	struct:Container
has_flatten	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn has_flatten(&self) -> bool {$/;"	P	implementation:Container
has_getter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    has_getter: bool,$/;"	m	struct:Parameters
has_getter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub fn has_getter(&self) -> bool {$/;"	P	implementation:Data
has_positionals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn has_positionals(&self) -> bool {$/;"	P	implementation:App
has_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn has_subcommand(name: &str) -> bool {$/;"	P	implementation:Box
has_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn has_subcommand(name: &str) -> bool;$/;"	P	interface:Subcommand
has_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn has_subcommands(&self) -> bool {$/;"	P	implementation:App
has_val_groups	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn has_val_groups(&mut self, arg: &Id) -> bool {$/;"	P	implementation:ArgMatcher
has_val_groups	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn has_val_groups(&self) -> bool {$/;"	P	implementation:MatchedArg
has_val_groups	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn has_val_groups(&self, matcher: &mut ArgMatcher, arg: &Arg<'help>) -> bool {$/;"	P	implementation:Parser
has_visible_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn has_visible_subcommands(&self) -> bool {$/;"	P	implementation:App
hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:Date
hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:DateTime
hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:NaiveDateTime
hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn hash<H: hash::Hasher>(&self, state: &mut H) {$/;"	P	implementation:NaiveTime
hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^    fn hash<H>(&self, state: &mut H)$/;"	P	implementation:Id
hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^pub fn hash(t: MessageDigest, data: &[u8]) -> Result<DigestBytes, ErrorStack> {$/;"	f
hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod hash;$/;"	n
hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	P	implementation:CowStr
hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn hash<H: Hasher>(&self, state: &mut H) {$/;"	P	implementation:InlineStr
hash_dir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^    pub fn hash_dir() -> &'static X509LookupMethodRef<HashDir> {$/;"	P	implementation:X509Lookup
hash_recycle_test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn hash_recycle_test(h: &mut Hasher, hashtest: &(&str, &str)) {$/;"	f	module:tests
hash_test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn hash_test(hashtype: MessageDigest, hashtest: &(&str, &str)) {$/;"	f	module:tests
hash_xof	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^pub fn hash_xof(t: MessageDigest, data: &[u8], buf: &mut [u8]) -> Result<(), ErrorStack> {$/;"	f
hash_xof_test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn hash_xof_test(hashtype: MessageDigest, hashtest: &(&str, &str)) {$/;"	f	module:tests
hasher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^    hasher: Hasher,$/;"	m	struct:Crc32Reader
hasher	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    hasher: Hasher,$/;"	m	struct:ZipWriterStats
head	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn head<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
head	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn head<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
head	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn head<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn header<K, V>(self, key: K, value: V) -> RequestBuilder$/;"	P	implementation:RequestBuilder
header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn header<K, V>(self, key: K, value: V) -> RequestBuilder$/;"	P	implementation:RequestBuilder
header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn header<K, V>(mut self, key: K, value: V) -> RequestBuilder$/;"	P	implementation:RequestBuilder
header_percent_encoding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn header_percent_encoding() {$/;"	f	module:tests
header_sensitive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn header_sensitive<K, V>(mut self, key: K, value: V, sensitive: bool) -> RequestBuilder$/;"	P	implementation:RequestBuilder
header_sensitive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn header_sensitive<K, V>(mut self, key: K, value: V, sensitive: bool) -> RequestBuilder$/;"	P	implementation:RequestBuilder
header_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn header_start(&self) -> u64 {$/;"	P	implementation:ZipFile
header_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub header_start: u64,$/;"	m	struct:ZipFileData
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn headers(self: Pin<&mut Self>) -> &mut HeaderMap {$/;"	P	implementation:PendingRequest
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    headers: HeaderMap,$/;"	m	struct:ClientRef
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    headers: HeaderMap,$/;"	m	struct:Config
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    headers: HeaderMap,$/;"	m	struct:Request
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	P	implementation:Request
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn headers(mut self, headers: crate::header::HeaderMap) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    headers: HeaderMap,$/;"	m	struct:Response
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	P	implementation:Response
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	P	implementation:Request
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn headers(mut self, headers: crate::header::HeaderMap) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	P	implementation:Response
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    headers: HeaderMap,$/;"	m	struct:Config
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    headers: HeaderMap,$/;"	m	struct:Request
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	P	implementation:Request
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn headers(mut self, headers: crate::header::HeaderMap) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    pub fn headers(&self) -> &HeaderMap {$/;"	P	implementation:Response
headers_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	P	implementation:Request
headers_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	P	implementation:Response
headers_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	P	implementation:Request
headers_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	P	implementation:Response
headers_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	P	implementation:Request
headers_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    pub fn headers_mut(&mut self) -> &mut HeaderMap {$/;"	P	implementation:Response
headings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    headings: Vec<HeadingAttributes<'a>>,$/;"	m	struct:Allocations
help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn help(mut self, h: impl Into<Option<&'help str>>) -> Self {$/;"	P	implementation:Arg
help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn help<S: Into<&'help str>>(self, help: S) -> Self {$/;"	P	implementation:App
help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    help: Option<&'help str>,$/;"	m	struct:PossibleValue
help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    pub fn help(mut self, help: &'help str) -> Self {$/;"	P	implementation:PossibleValue
help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn help(&mut self, arg: &mut Arg<'help>) {$/;"	P	implementation:UsageParser
help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn help($/;"	P	implementation:Help
help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/mod.rs	/^mod help;$/;"	n
help_err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn help_err(&self, mut use_long: bool) -> ClapError {$/;"	P	implementation:Parser
help_expected	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn help_expected(self, yes: bool) -> Self {$/;"	P	implementation:App
help_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    help_flag: Option<&'static str>,$/;"	m	struct:ErrorInner
help_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn help_heading<O>(mut self, heading: O) -> Self$/;"	P	implementation:Arg
help_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn help_heading<O>(self, heading: O) -> Self$/;"	P	implementation:App
help_message	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn help_message(self, s: impl Into<&'help str>) -> Self {$/;"	P	implementation:App
help_short	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn help_short(self, c: char) -> Self {$/;"	P	implementation:App
help_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^fn help_start(b: u8) -> bool {$/;"	f
help_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    help_str: Option<&'help str>,$/;"	m	struct:App
help_template	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn help_template<S: Into<&'help str>>(mut self, s: S) -> Self {$/;"	P	implementation:App
helper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/size_hint.rs	/^fn helper(bounds: (usize, Option<usize>)) -> Option<usize> {$/;"	f
hidden	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn hidden(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hidden_long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn hidden_long_help(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hidden_short_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn hidden_short_help(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn hide(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn hide(self, yes: bool) -> Self {$/;"	P	implementation:App
hide	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    hide: bool,$/;"	m	struct:PossibleValue
hide	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    pub fn hide(mut self, yes: bool) -> Self {$/;"	P	implementation:PossibleValue
hide_default_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn hide_default_value(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide_env	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn hide_env(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide_env_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn hide_env_values(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide_long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn hide_long_help(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide_possible_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn hide_possible_values(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hide_possible_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn hide_possible_values(self, yes: bool) -> Self {$/;"	P	implementation:App
hide_short_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn hide_short_help(self, yes: bool) -> Self {$/;"	P	implementation:Arg
hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    pub(crate) fn hint(&mut self, msg: impl Into<String>) {$/;"	P	implementation:Colorizer
hmac	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn hmac(key: &[u8]) -> Result<PKey<Private>, ErrorStack> {$/;"	P	implementation:PKey
hmac_md5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn hmac_md5() {$/;"	f	module:test
hmac_sha1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn hmac_sha1() {$/;"	f	module:test
hms	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn hms(&self) -> (u32, u32, u32) {$/;"	P	implementation:NaiveTime
host	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^        fn host(&self) -> &str {$/;"	P	implementation:tests::Url
host	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn host(&self) -> &str {$/;"	P	implementation:ProxyScheme
host	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn host(&self) -> &str {$/;"	P	implementation:Uri
host	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn host(&self) -> &str;$/;"	P	interface:Dst
hostname_verification	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    hostname_verification: bool,$/;"	m	struct:Config
hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn hour(&self) -> u32 {$/;"	P	implementation:DateTime
hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn hour(&self) -> u32;$/;"	P	interface:Timelike
hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn hour(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn hour(&self) -> u32 {$/;"	P	implementation:NaiveTime
hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    hour: u8,$/;"	m	struct:DateTime
hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn hour(&self) -> u8 {$/;"	P	implementation:DateTime
hour12	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn hour12(&self) -> (bool, u32) {$/;"	P	interface:Timelike
hour_div_12	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub hour_div_12: Option<u32>,$/;"	m	struct:Parsed
hour_mod_12	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub hour_mod_12: Option<u32>,$/;"	m	struct:Parsed
hours	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn hours(hours: i64) -> Duration {$/;"	P	implementation:Duration
hours	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn hours(hours: i64) -> Duration {$/;"	P	implementation:Duration
html	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^pub mod html;$/;"	n
html_scan_guard	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    html_scan_guard: HtmlScanGuard,$/;"	m	struct:Parser
html_scan_tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^    mod html_scan_tests {$/;"	n	module:simd
http	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn http(host: &str) -> crate::Result<Self> {$/;"	P	implementation:ProxyScheme
http	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    pub fn http<U: IntoProxyScheme>(proxy_scheme: U) -> crate::Result<Proxy> {$/;"	P	implementation:Proxy
http	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    http: http::Response<web_sys::Response>,$/;"	m	struct:Response
http09_responses	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    http09_responses: bool,$/;"	m	struct:Config
http09_responses	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn http09_responses(mut self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http09_responses	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn http09_responses(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http1_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn http1_only(mut self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http1_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn http1_only(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http1_title_case_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    http1_title_case_headers: bool,$/;"	m	struct:Config
http1_title_case_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn http1_title_case_headers(mut self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http1_title_case_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn http1_title_case_headers(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http2_adaptive_window	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    http2_adaptive_window: bool,$/;"	m	struct:Config
http2_adaptive_window	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn http2_adaptive_window(mut self, enabled: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http2_adaptive_window	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn http2_adaptive_window(self, enabled: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http2_initial_connection_window_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    http2_initial_connection_window_size: Option<u32>,$/;"	m	struct:Config
http2_initial_connection_window_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn http2_initial_connection_window_size($/;"	P	implementation:ClientBuilder
http2_initial_connection_window_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn http2_initial_connection_window_size(self, sz: impl Into<Option<u32>>) -> ClientBuild/;"	P	implementation:ClientBuilder
http2_initial_stream_window_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    http2_initial_stream_window_size: Option<u32>,$/;"	m	struct:Config
http2_initial_stream_window_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn http2_initial_stream_window_size(mut self, sz: impl Into<Option<u32>>) -> ClientBuild/;"	P	implementation:ClientBuilder
http2_initial_stream_window_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn http2_initial_stream_window_size(self, sz: impl Into<Option<u32>>) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http2_max_frame_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    http2_max_frame_size: Option<u32>,$/;"	m	struct:Config
http2_max_frame_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn http2_max_frame_size(mut self, sz: impl Into<Option<u32>>) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http2_max_frame_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn http2_max_frame_size(self, sz: impl Into<Option<u32>>) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http2_prior_knowledge	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn http2_prior_knowledge(mut self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http2_prior_knowledge	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn http2_prior_knowledge(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
http_basic_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    pub(crate) fn http_basic_auth<D: Dst>(&self, uri: &D) -> Option<HeaderValue> {$/;"	P	implementation:Proxy
http_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    pub fn http_only(&self) -> bool {$/;"	P	implementation:Cookie
http_version_pref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    http_version_pref: HttpVersionPref,$/;"	m	struct:Config
https	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn https(host: &str) -> crate::Result<Self> {$/;"	P	implementation:ProxyScheme
https	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    pub fn https<U: IntoProxyScheme>(proxy_scheme: U) -> crate::Result<Proxy> {$/;"	P	implementation:Proxy
https_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    https_only: bool,$/;"	m	struct:ClientRef
https_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    https_only: bool,$/;"	m	struct:Config
https_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn https_only(mut self, enabled: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
https_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn https_only(self, enabled: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
hyper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    hyper: HyperClient,$/;"	m	struct:ClientRef
i64_to_large_integer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn i64_to_large_integer(i: i64) -> LARGE_INTEGER {$/;"	f	module:inner
ia5_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    fn ia5_string(&self, ffi_type: c_int) -> Option<&str> {$/;"	P	implementation:GeneralNameRef
id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn id<S: Into<&'help str>>(mut self, n: S) -> Self {$/;"	P	implementation:Arg
id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn id<S: Into<&'help str>>(mut self, n: S) -> Self {$/;"	P	implementation:ArgGroup
id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    id: Id,$/;"	m	struct:App
id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/graph.rs	/^    id: T,$/;"	m	struct:Child
id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^    id: u64,$/;"	m	struct:Id
id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/mod.rs	/^mod id;$/;"	n
id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn id(&self) -> Id {$/;"	P	implementation:PKeyRef
id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/srtp.rs	/^    pub fn id(&self) -> SrtpProfileId {$/;"	P	implementation:SrtpProtectionProfileRef
id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn id(&self) -> &[u8] {$/;"	P	implementation:SslSessionRef
id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub id: Option<&'a str>,$/;"	m	struct:HeadingAttributes
id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        id: u32,$/;"	m	struct:verbose::Verbose
id_exists	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn id_exists(&self, id: &Id) -> bool {$/;"	P	implementation:App
ident	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub ident: syn::Ident,$/;"	m	struct:Container
ident	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub ident: syn::Ident,$/;"	m	struct:Variant
identifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    identifier: Identifier,$/;"	m	struct:Container
identifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn identifier(&self) -> Identifier {$/;"	P	implementation:Container
identity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    identity: Option<Identity>,$/;"	m	struct:Config
identity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn identity(mut self, identity: Identity) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
identity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn identity(self, identity: Identity) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
identity_from_pem_invalid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    fn identity_from_pem_invalid() {$/;"	f	module:tests
identity_from_pem_pkcs1_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    fn identity_from_pem_pkcs1_key() {$/;"	f	module:tests
identity_from_pkcs12_der_invalid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    fn identity_from_pkcs12_der_invalid() {$/;"	f	module:tests
idle_session	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn idle_session() {$/;"	f
idxs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    idxs: Range<c_int>,$/;"	m	struct:IntoIter
idxs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    idxs: Range<c_int>,$/;"	m	struct:Iter
idxs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    idxs: Range<c_int>,$/;"	m	struct:IterMut
if_hyper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs	/^macro_rules! if_hyper {$/;"	M
if_no_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn if_no_auth(mut self, update: &Option<HeaderValue>) -> Self {$/;"	P	implementation:ProxyScheme
if_wasm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs	/^macro_rules! if_wasm {$/;"	M
ige_vector_1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/aes.rs	/^    fn ige_vector_1() {$/;"	f	module:test
ignore_case	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn ignore_case(self, yes: bool) -> Self {$/;"	P	implementation:Arg
ignore_case	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    ignore_case: bool,$/;"	m	struct:MatchedArg
ignore_errors	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn ignore_errors(self, yes: bool) -> Self {$/;"	P	implementation:App
ignored_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^mod ignored_any;$/;"	n
imp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^mod imp;$/;"	n
impl_backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^macro_rules! impl_backtrace {$/;"	M
impl_copy_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^macro_rules! impl_copy_clone {$/;"	M
impl_deserialize_num	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! impl_deserialize_num {$/;"	M
impl_http_connector	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^macro_rules! impl_http_connector {$/;"	M
impl_settings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! impl_settings {$/;"	M
impls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^mod impls;$/;"	n
impls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^mod impls;$/;"	n
impossible	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^mod impossible;$/;"	n
in_between	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn in_between(start: i32, end: i32, div: i32) -> i32 {$/;"	f	function:test_num_days_from_ce_against_alternative_impl
in_flight	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn in_flight(self: Pin<&mut Self>) -> Pin<&mut ResponseFuture> {$/;"	P	implementation:PendingRequest
in_place	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    fn in_place(self) -> InPlaceImplGenerics<'a> {$/;"	P	implementation:DeImplGenerics
in_place	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    fn in_place(self) -> InPlaceTypeGenerics<'a> {$/;"	P	implementation:DeTypeGenerics
inc_occurrence_of_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn inc_occurrence_of_arg(&mut self, arg: &Arg) {$/;"	P	implementation:ArgMatcher
inc_occurrence_of_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn inc_occurrence_of_arg(&self, matcher: &mut ArgMatcher, arg: &Arg<'help>) {$/;"	P	implementation:Parser
inc_occurrence_of_group	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn inc_occurrence_of_group(&mut self, id: &Id) {$/;"	P	implementation:ArgMatcher
inc_occurrences	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn inc_occurrences(&mut self) {$/;"	P	implementation:MatchedArg
incoming	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        incoming: io::Cursor<Vec<u8>>,$/;"	m	struct:stateless::MemoryStream
increase_flow_level	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn increase_flow_level(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
indent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    indent: isize,$/;"	m	struct:Scanner
indentless_sequence_entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn indentless_sequence_entry(&mut self) -> ParseResult {$/;"	P	implementation:Parser
indents	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    indents: Vec<isize>,$/;"	m	struct:Scanner
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn index(mut self, idx: usize) -> Self {$/;"	P	implementation:Arg
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    fn index(&self, key: &Id) -> &Self::Output {$/;"	P	implementation:App
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    fn index(&self, key: &KeyType) -> &Self::Output {$/;"	P	implementation:MKeyMap
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    index: usize,$/;"	m	struct:Key
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn index(&self, index: usize) -> &T::Ref {$/;"	P	implementation:StackRef
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn index(&self, ix: AlignmentIndex) -> &Self::Output {$/;"	P	implementation:Allocations
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn index(&self, ix: CowIndex) -> &Self::Output {$/;"	P	implementation:Allocations
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn index(&self, ix: HeadingIndex) -> &Self::Output {$/;"	P	implementation:Allocations
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn index(&self, ix: LinkIndex) -> &Self::Output {$/;"	P	implementation:Allocations
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    fn index(&self, ix: TreeIndex) -> &Self::Output {$/;"	P	implementation:Tree
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    index: usize,$/;"	m	struct:Marker
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn index(&self) -> usize {$/;"	P	implementation:Marker
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn index(&self, idx: &'a str) -> &Yaml {$/;"	P	implementation:Yaml
index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn index(&self, idx: usize) -> &Yaml {$/;"	P	implementation:Yaml
index_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn index_mut(&mut self, index: usize) -> &mut T::Ref {$/;"	P	implementation:StackRef
index_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    fn index_mut(&mut self, ix: TreeIndex) -> &mut Node<T> {$/;"	P	implementation:Tree
index_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn index_of<T: Key>(&self, id: T) -> Option<usize> {$/;"	P	implementation:ArgMatches
indices	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    indices: Vec<usize>,$/;"	m	struct:MatchedArg
indices	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn indices(&self) -> Cloned<Iter<'_, usize>> {$/;"	P	implementation:MatchedArg
indices_exact_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn indices_exact_size() {$/;"	f	module:tests
indices_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn indices_of<T: Key>(&self, id: T) -> Option<Indices<'_>> {$/;"	P	implementation:ArgMatches
infer_long_args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn infer_long_args(self, yes: bool) -> Self {$/;"	P	implementation:App
infer_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn infer_subcommands(self, yes: bool) -> Self {$/;"	P	implementation:App
info	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub info: Vec<String>,$/;"	m	struct:Error
info	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn info() -> &'static mach_timebase_info {$/;"	f	module:inner::mac
info	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    info: String,$/;"	m	struct:ScanError
init	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn init(&mut self) -> Result<(), ErrorStack> {$/;"	P	implementation:Hasher
init	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn init<F, T>($/;"	P	implementation:X509StoreContextRef
init_directories	/mnt/c/Users/SamanthaC/rust/md_puppy/src/directory_handling.rs	/^pub fn init_directories() -> Result<()> {$/;"	f
inline_stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    inline_stack: InlineStack,$/;"	m	struct:Parser
inlinestr_ascii	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn inlinestr_ascii() {$/;"	f	module:test_special_string
inlinestr_fits_twentytwo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn inlinestr_fits_twentytwo() {$/;"	f	module:test_special_string
inlinestr_not_fits_twentythree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn inlinestr_not_fits_twentythree() {$/;"	f	module:test_special_string
inlinestr_unicode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn inlinestr_unicode() {$/;"	f	module:test_special_string
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        inner: Inner,$/;"	m	struct:capture::Backtrace
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^    inner: &'a mut D,$/;"	m	struct:Indented
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^    inner: Own<ErrorImpl>,$/;"	m	struct:Error
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^                inner: &'a D,$/;"	m	struct:serde::DateTime::serialize::FormatWrapped
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^                inner: &'a D,$/;"	m	struct:serde::NaiveDate::serialize::FormatWrapped
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^                inner: &'a D,$/;"	m	struct:serde::NaiveDateTime::serialize::FormatWrapped
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^mod inner;$/;"	n
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    inner: Box<ErrorInner>,$/;"	m	struct:Error
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    inner: SslStream<S>,$/;"	m	struct:SslStreamBuilder
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    inner: HashMap<usize, VecDeque<TreeIndex>>,$/;"	m	struct:CodeDelims
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    inner: Parser<'a, 'b>,$/;"	m	struct:OffsetIter
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    inner: Vec<LinkStackEl>,$/;"	m	struct:LinkStack
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    inner: [u8; MAX_INLINE_STR_LEN],$/;"	m	struct:InlineStr
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    inner: Inner,$/;"	m	struct:Body
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn inner(self: Pin<&mut Self>) -> Pin<&mut PendingInner> {$/;"	P	implementation:Pending
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    inner: Arc<ClientRef>,$/;"	m	struct:Client
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    inner: Inner,$/;"	m	struct:Decoder
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    inner: FormParts<Part>,$/;"	m	struct:Form
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    inner: Arc<InnerClientHandle>,$/;"	m	struct:ClientHandle
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    inner: ClientHandle,$/;"	m	struct:Client
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    inner: async_impl::ClientBuilder,$/;"	m	struct:ClientBuilder
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    inner: FormParts<Part>,$/;"	m	struct:Form
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    inner: async_impl::Request,$/;"	m	struct:Request
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    inner: async_impl::Response,$/;"	m	struct:Response
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        inner: T,$/;"	m	struct:verbose::Verbose
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    inner: Inner,$/;"	m	struct:Connector
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    inner: Box<Inner>,$/;"	m	struct:Error
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    inner: ActionKind,$/;"	m	struct:Action
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    inner: PolicyKind,$/;"	m	struct:Policy
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    inner: ClientCert,$/;"	m	struct:Identity
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    inner: Inner,$/;"	m	struct:Body
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    inner: FormParts<Part>,$/;"	m	struct:Form
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    inner: SpooledData,$/;"	m	struct:SpooledTempFile
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^mod inner {$/;"	n
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^    inner: R,$/;"	m	struct:Crc32Reader
inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    inner: GenericZipWriter<W>,$/;"	m	struct:ZipWriter
insert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    pub(crate) fn insert(&mut self, insert_items: &[&str]) {$/;"	P	implementation:Input
insert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/graph.rs	/^    pub(crate) fn insert(&mut self, req: T) -> usize {$/;"	f
insert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn insert(&mut self, count: usize, ix: TreeIndex) {$/;"	P	implementation:CodeDelims
insert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn insert<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	P	implementation:VecAttr
insert_child	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/graph.rs	/^    pub(crate) fn insert_child(&mut self, parent: usize, child: T) -> usize {$/;"	f
insert_context_unchecked	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn insert_context_unchecked($/;"	P	implementation:Error
insert_from_env	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^fn insert_from_env(proxies: &mut SystemProxyMap, scheme: &str, var: &str) -> bool {$/;"	f
insert_new_node	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn insert_new_node(&mut self, node: (Yaml, usize)) {$/;"	P	implementation:YamlLoader
insert_proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^fn insert_proxy(proxies: &mut SystemProxyMap, scheme: impl Into<String>, addr: String) -> bool {$/;"	f
insert_token	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn insert_token(&mut self, pos: usize, tok: Token) {$/;"	P	implementation:Scanner
int_to_int	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! int_to_int {$/;"	M
int_to_uint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! int_to_uint {$/;"	M
integer128	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/lib.rs	/^mod integer128;$/;"	n
intercept	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    intercept: Intercept,$/;"	m	struct:Proxy
intercept	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    pub(crate) fn intercept<D: Dst>(&self, uri: &D) -> Option<ProxyScheme> {$/;"	P	implementation:Proxy
intercepted_uri	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn intercepted_uri(p: &Proxy, s: &str) -> Uri {$/;"	f	module:tests
internal_fix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! internal_fix {$/;"	M
internals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    mod internals;$/;"	n	module:naive
internals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/lib.rs	/^mod internals;$/;"	n
into_app	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn into_app<'help>() -> Command<'help> {$/;"	P	implementation:Box
into_app	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn into_app<'help>() -> Command<'help>;$/;"	P	interface:CommandFactory
into_app_for_update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn into_app_for_update<'help>() -> Command<'help> {$/;"	P	implementation:Box
into_app_for_update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn into_app_for_update<'help>() -> Command<'help>;$/;"	P	interface:CommandFactory
into_async	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    pub(crate) fn into_async(self) -> (Option<Sender>, async_impl::Body, Option<u64>) {$/;"	P	implementation:Body
into_async	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub(crate) fn into_async(self) -> (async_impl::Request, Option<body::Sender>) {$/;"	P	implementation:Request
into_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn into_context(self) -> SslContext {$/;"	P	implementation:SslAcceptor
into_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn into_context(self) -> SslContext {$/;"	P	implementation:SslConnector
into_deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn into_deserializer(self) -> Self::Deserializer;$/;"	P	interface:IntoDeserializer
into_deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn into_deserializer(self) -> BytesDeserializer<'a, E> {$/;"	f
into_deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn into_deserializer(self) -> CowStrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn into_deserializer(self) -> Self::Deserializer {$/;"	f
into_deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn into_deserializer(self) -> StrDeserializer<'a, E> {$/;"	f
into_deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn into_deserializer(self) -> StringDeserializer<E> {$/;"	f
into_deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn into_deserializer(self) -> U32Deserializer<E> {$/;"	f
into_deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn into_deserializer(self) -> UnitDeserializer<E> {$/;"	f
into_deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn into_deserializer(self) -> Self {$/;"	f	module:content
into_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn into_error(self) -> Error {$/;"	P	implementation:MidHandshakeSslStream
into_f64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    pub fn into_f64(self) -> Option<f64> {$/;"	P	implementation:Yaml
into_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn into_file(self) -> File {$/;"	P	implementation:NamedTempFile
into_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn into_inner(self) -> ArgMatches {$/;"	P	implementation:ArgMatcher
into_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    pub fn into_inner(self) -> SpooledData {$/;"	P	implementation:SpooledTempFile
into_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^    pub fn into_inner(self) -> R {$/;"	P	implementation:Crc32Reader
into_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn into_inner(self) -> R {$/;"	P	implementation:ZipArchive
into_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn into_inner(self) -> io::Take<&'a mut dyn Read> {$/;"	P	implementation:CryptoReader
into_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn into_inner(self) -> io::Take<&'a mut dyn Read> {$/;"	P	implementation:ZipFileReader
into_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    pub fn into_inner(self) -> R {$/;"	P	implementation:ZipCryptoReaderValid
into_io	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub(crate) fn into_io(self) -> io::Error {$/;"	P	implementation:Error
into_io	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub(crate) fn into_io(e: Error) -> io::Error {$/;"	f
into_io_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    pub fn into_io_error(self) -> Result<io::Error, Error> {$/;"	P	implementation:Error
into_iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn into_iter(self) -> IntoIter<T> {$/;"	P	implementation:Stack
into_iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn into_iter(self) -> Iter<'a, T> {$/;"	P	implementation:Stack
into_iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn into_iter(self) -> Iter<'a, T> {$/;"	P	implementation:StackRef
into_iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn into_iter(self) -> IterMut<'a, T> {$/;"	P	implementation:Stack
into_iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn into_iter(self) -> IterMut<'a, T> {$/;"	P	implementation:StackRef
into_iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn into_iter(self) -> Self::IntoIter {$/;"	P	implementation:Yaml
into_offset_iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn into_offset_iter(self) -> OffsetIter<'input, 'callback> {$/;"	P	implementation:Parser
into_part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    pub(crate) fn into_part(self) -> Body {$/;"	P	implementation:Body
into_parts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn into_parts(self) -> (File, TempPath) {$/;"	P	implementation:NamedTempFile
into_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^    pub fn into_path(self) -> PathBuf {$/;"	P	implementation:TempDir
into_proxy_scheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn into_proxy_scheme(self) -> crate::Result<ProxyScheme> {$/;"	P	implementation:ProxyScheme
into_proxy_scheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn into_proxy_scheme(self) -> crate::Result<ProxyScheme> {$/;"	P	implementation:S
into_proxy_scheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn into_proxy_scheme(self) -> crate::Result<ProxyScheme>;$/;"	P	interface:IntoProxyScheme
into_reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    pub(crate) fn into_reader(self) -> Reader {$/;"	P	implementation:Body
into_ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn into_ssl(mut self, domain: &str) -> Result<Ssl, ErrorStack> {$/;"	P	implementation:ConnectConfiguration
into_stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    pub(crate) fn into_stream(self) -> ImplStream {$/;"	P	implementation:Body
into_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    pub fn into_string(self) -> String {$/;"	P	implementation:CowStr
into_temp_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn into_temp_path(self) -> TempPath {$/;"	P	implementation:NamedTempFile
into_uri	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^fn into_uri(scheme: Scheme, host: Authority) -> Uri {$/;"	f
into_url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^    fn into_url(self) -> crate::Result<Url> {$/;"	P	implementation:String
into_url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^    fn into_url(self) -> crate::Result<Url> {$/;"	P	implementation:Url
into_url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^    fn into_url(self) -> crate::Result<Url> {$/;"	P	implementation:str
into_url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^    fn into_url(self) -> crate::Result<Url>;$/;"	P	interface:IntoUrlSealed
into_url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs	/^mod into_url;$/;"	n
into_url_file_scheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^    fn into_url_file_scheme() {$/;"	f	module:tests
invalid_from_smime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^    fn invalid_from_smime() {$/;"	f	module:tests
invalid_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn invalid_offset() {$/;"	f	module:test
invalid_offset2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn invalid_offset2() {$/;"	f	module:test
invalid_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn invalid_subcommand($/;"	P	implementation:Error
invalid_type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn invalid_type(self, exp: &Expected) -> E {$/;"	f	module:content
invalid_utf8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn invalid_utf8(cmd: &Command, usage: String) -> Self {$/;"	P	implementation:Error
invalid_utf8_allowed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    invalid_utf8_allowed: Option<bool>,$/;"	m	struct:MatchedArg
invalid_utf8_allowed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn invalid_utf8_allowed(&mut self, yes: bool) {$/;"	P	implementation:MatchedArg
invalid_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn invalid_value($/;"	P	implementation:Error
invert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn invert(&mut self, group: &EcGroupRef, ctx: &BigNumContextRef) -> Result<(), ErrorStac/;"	P	implementation:EcPointRef
invoke_passwd_cb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^pub unsafe extern "C" fn invoke_passwd_cb<F>($/;"	f
io_cb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    io_cb: Box<dyn FnMut(SslStream<TcpStream>) + Send>,$/;"	m	struct:Builder
io_cb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn io_cb<F>(&mut self, cb: F)$/;"	P	implementation:Builder
io_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    pub fn io_error(&self) -> Option<&io::Error> {$/;"	P	implementation:Error
ip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn ip(&mut self, ip: &str) -> &mut SubjectAlternativeName {$/;"	P	implementation:SubjectAlternativeName
ipaddress	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn ipaddress(&self) -> Option<&[u8]> {$/;"	P	implementation:GeneralNameRef
ips	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    ips: IpMatcher,$/;"	m	struct:NoProxy
iqmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn iqmp(&self) -> Option<&BigNumRef> {$/;"	f
is	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub fn is<E>(&self) -> bool$/;"	P	implementation:Error
is_a_tty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^fn is_a_tty(stderr: bool) -> bool {$/;"	f
is_allow_external_subcommands_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_allow_external_subcommands_set(&self) -> bool {$/;"	P	implementation:App
is_allow_hyphen_values_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_allow_hyphen_values_set(&self) -> bool {$/;"	P	implementation:Arg
is_allow_hyphen_values_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn is_allow_hyphen_values_set(&self) -> bool {$/;"	P	implementation:App
is_allow_invalid_utf8_for_external_subcommands_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_allow_invalid_utf8_for_external_subcommands_set(&self) -> bool {$/;"	P	implementation:App
is_allow_invalid_utf8_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_allow_invalid_utf8_set(&self) -> bool {$/;"	P	implementation:Arg
is_allow_missing_positional_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_allow_missing_positional_set(&self) -> bool {$/;"	P	implementation:App
is_allow_negative_numbers_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_allow_negative_numbers_set(&self) -> bool {$/;"	P	implementation:App
is_alpha	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^fn is_alpha(c: char) -> bool {$/;"	f
is_arg_required_else_help_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_arg_required_else_help_set(&self) -> bool {$/;"	P	implementation:App
is_args_conflicts_with_subcommands_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_args_conflicts_with_subcommands_set(&self) -> bool {$/;"	P	implementation:App
is_array	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    pub fn is_array(&self) -> bool {$/;"	P	implementation:Yaml
is_ascii_alpha	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn is_ascii_alpha(c: u8) -> bool {$/;"	f
is_ascii_alphanumeric	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn is_ascii_alphanumeric(c: u8) -> bool {$/;"	f
is_ascii_letterdigitdash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn is_ascii_letterdigitdash(c: u8) -> bool {$/;"	f
is_ascii_punctuation	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/puncttable.rs	/^pub(crate) fn is_ascii_punctuation(c: u8) -> bool {$/;"	f
is_ascii_whitespace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn is_ascii_whitespace(c: u8) -> bool {$/;"	f
is_ascii_whitespace_no_nl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn is_ascii_whitespace_no_nl(c: u8) -> bool {$/;"	f
is_at_eol	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    pub(crate) fn is_at_eol(&self) -> bool {$/;"	P	implementation:LineStart
is_badvalue	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    pub fn is_badvalue(&self) -> bool {$/;"	P	implementation:Yaml
is_bit_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn is_bit_set(&self, n: i32) -> bool {$/;"	P	implementation:BigNumRef
is_blank	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^fn is_blank(c: char) -> bool {$/;"	f
is_blankz	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^fn is_blankz(c: char) -> bool {$/;"	f
is_body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub fn is_body(&self) -> bool {$/;"	P	implementation:Error
is_break	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^fn is_break(c: char) -> bool {$/;"	f
is_breakz	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^fn is_breakz(c: char) -> bool {$/;"	f
is_brotli	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn is_brotli(&self) -> bool {$/;"	P	implementation:Accepts
is_builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub fn is_builder(&self) -> bool {$/;"	P	implementation:Error
is_ccm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn is_ccm(self) -> bool {$/;"	P	implementation:Cipher
is_cgi	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^fn is_cgi() -> bool {$/;"	f
is_closed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn is_closed(&self) -> bool {$/;"	P	implementation:GenericZipWriter
is_compact	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    pub fn is_compact(&self) -> bool {$/;"	P	implementation:escape_str::YamlEmitter
is_connect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub fn is_connect(&self) -> bool {$/;"	P	implementation:Error
is_const_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn is_const_time(&self) -> bool {$/;"	P	implementation:BigNumRef
is_cow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn is_cow(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_decode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub fn is_decode(&self) -> bool {$/;"	P	implementation:Error
is_default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    pub(crate) fn is_default(&self) -> bool {$/;"	P	implementation:Policy
is_deflate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn is_deflate(&self) -> bool {$/;"	P	implementation:Accepts
is_digit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn is_digit(c: u8) -> bool {$/;"	f
is_digit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^fn is_digit(c: char) -> bool {$/;"	f
is_dir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn is_dir(&self) -> bool {$/;"	P	implementation:ZipFile
is_disable_colored_help_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_disable_colored_help_set(&self) -> bool {$/;"	P	implementation:App
is_disable_help_flag_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_disable_help_flag_set(&self) -> bool {$/;"	P	implementation:App
is_disable_help_subcommand_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_disable_help_subcommand_set(&self) -> bool {$/;"	P	implementation:App
is_disable_version_flag_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_disable_version_flag_set(&self) -> bool {$/;"	P	implementation:App
is_dont_collapse_args_in_usage_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_dont_collapse_args_in_usage_set(&self) -> bool {$/;"	P	implementation:App
is_dont_delimit_trailing_values_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_dont_delimit_trailing_values_set(&self) -> bool {$/;"	P	implementation:App
is_empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:MKeyMap
is_empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Asn1BitStringRef
is_empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:Asn1StringRef
is_empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:StackRef
is_empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:Tree
is_empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:Body
is_empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub(crate) fn is_empty(&self) -> bool {$/;"	P	implementation:Form
is_empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn is_empty(&self) -> bool {$/;"	P	implementation:ZipArchive
is_end_stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn is_end_stream(&self) -> bool {$/;"	P	implementation:ImplStream
is_end_stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn is_end_stream(&self) -> bool {$/;"	P	implementation:WrapHyper
is_exclusive_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_exclusive_set(&self) -> bool {$/;"	P	implementation:Arg
is_fenced	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    pub fn is_fenced(&self) -> bool {$/;"	P	implementation:CodeBlockKind
is_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn is_file(&self) -> bool {$/;"	P	implementation:ZipFile
is_flow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^fn is_flow(c: char) -> bool {$/;"	f
is_forbid_empty_values_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_forbid_empty_values_set(&self) -> bool {$/;"	P	implementation:Arg
is_global_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_global_set(&self) -> bool {$/;"	P	implementation:Arg
is_gzip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn is_gzip(&self) -> bool {$/;"	P	implementation:Accepts
is_help_expected_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn is_help_expected_set(&self) -> bool {$/;"	P	implementation:App
is_hex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^fn is_hex(c: char) -> bool {$/;"	f
is_hidden	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    pub fn is_hidden(&self) -> bool {$/;"	P	implementation:PossibleValue
is_hide_default_value_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_hide_default_value_set(&self) -> bool {$/;"	P	implementation:Arg
is_hide_env_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_hide_env_set(&self) -> bool {$/;"	P	implementation:Arg
is_hide_env_values_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_hide_env_values_set(&self) -> bool {$/;"	P	implementation:Arg
is_hide_long_help_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_hide_long_help_set(&self) -> bool {$/;"	P	implementation:Arg
is_hide_possible_values_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_hide_possible_values_set(&self) -> bool {$/;"	P	implementation:Arg
is_hide_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_hide_set(&self) -> bool {$/;"	P	implementation:Arg
is_hide_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_hide_set(&self) -> bool {$/;"	P	implementation:App
is_hide_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    pub fn is_hide_set(&self) -> bool {$/;"	P	implementation:PossibleValue
is_hide_short_help_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_hide_short_help_set(&self) -> bool {$/;"	P	implementation:Arg
is_html_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn is_html_tag(tag: &[u8]) -> bool {$/;"	f
is_human_readable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	P	interface:Deserializer
is_human_readable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn is_human_readable(&self) -> bool {$/;"	P	interface:Serializer
is_ignore_case_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_ignore_case_set(&self) -> bool {$/;"	P	implementation:Arg
is_ignore_errors_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn is_ignore_errors_set(&self) -> bool {$/;"	P	implementation:App
is_implicitly_borrowed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn is_implicitly_borrowed(ty: &syn::Type) -> bool {$/;"	f
is_implicitly_borrowed_reference	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn is_implicitly_borrowed_reference(ty: &syn::Type) -> bool {$/;"	f
is_indented	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    pub fn is_indented(&self) -> bool {$/;"	P	implementation:CodeBlockKind
is_infer_long_args_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn is_infer_long_args_set(&self) -> bool {$/;"	P	implementation:App
is_infer_subcommands_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn is_infer_subcommands_set(&self) -> bool {$/;"	P	implementation:App
is_infinity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn is_infinity() {$/;"	f	module:test
is_infinity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn is_infinity(&self, group: &EcGroupRef) -> bool {$/;"	P	implementation:EcPointRef
is_init_finished	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn is_init_finished(&self) -> bool {$/;"	P	implementation:SslRef
is_inline	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn is_inline(&self) -> bool {$/;"	P	implementation:ItemBody
is_invalid_utf8_allowed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn is_invalid_utf8_allowed(&self) -> Option<bool> {$/;"	P	implementation:MatchedArg
is_last_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_last_set(&self) -> bool {$/;"	P	implementation:Arg
is_leap_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn is_leap_year(year: i32) -> bool {$/;"	f
is_match	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    pub(crate) fn is_match(&self, text: &str) -> bool {$/;"	P	implementation:RegexRef
is_match	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    pub(crate) fn is_match<D: Dst>(&self, uri: &D) -> bool {$/;"	P	implementation:Proxy
is_missing_required_ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn is_missing_required_ok(&self, a: &Arg<'help>, matcher: &ArgMatcher) -> bool {$/;"	P	implementation:Validator
is_multicall_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_multicall_set(&self) -> bool {$/;"	P	implementation:App
is_multiple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub(crate) fn is_multiple(&self) -> bool {$/;"	P	implementation:Arg
is_multiple_occurrences_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_multiple_occurrences_set(&self) -> bool {$/;"	P	implementation:Arg
is_multiple_values_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_multiple_values_set(&self) -> bool {$/;"	P	implementation:Arg
is_negative	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn is_negative(&self) -> bool {$/;"	P	implementation:BigNumRef
is_new_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn is_new_arg(&self, next: &RawOsStr, current_positional: &Arg) -> bool {$/;"	P	implementation:Parser
is_next_line_help_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_next_line_help_set(&self) -> bool {$/;"	P	implementation:Arg
is_next_line_help_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_next_line_help_set(&self) -> bool {$/;"	P	implementation:App
is_no_binary_name_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn is_no_binary_name_set(&self) -> bool {$/;"	P	implementation:App
is_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn is_none(&self) -> bool {$/;"	P	implementation:Default
is_null	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    pub fn is_null(&self) -> bool {$/;"	P	implementation:Yaml
is_ocb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    const fn is_ocb(self) -> bool {$/;"	P	implementation:Cipher
is_ocb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn is_ocb(self) -> bool {$/;"	P	implementation:Cipher
is_on_curve	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn is_on_curve() {$/;"	f	module:test
is_on_curve	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn is_on_curve($/;"	P	implementation:EcPointRef
is_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn is_option(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_packed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    is_packed: bool,$/;"	m	struct:Parameters
is_packed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    is_packed: bool,$/;"	m	struct:Container
is_packed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn is_packed(&self) -> bool {$/;"	P	implementation:Container
is_packed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    is_packed: bool,$/;"	m	struct:Parameters
is_populated	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn is_populated(&self) -> bool {$/;"	P	implementation:CodeDelims
is_position	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    pub(crate) fn is_position(&self) -> bool {$/;"	P	implementation:KeyType
is_positional	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_positional(&self) -> bool {$/;"	P	implementation:Arg
is_present	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn is_present<T: Key>(&self, id: T) -> bool {$/;"	P	implementation:ArgMatches
is_prime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn is_prime(&self, checks: i32, ctx: &mut BigNumContextRef) -> Result<bool, ErrorStack> /;"	P	implementation:BigNumRef
is_prime_fasttest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn is_prime_fasttest($/;"	P	implementation:BigNumRef
is_primitive_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn is_primitive_path(path: &syn::Path, primitive: &str) -> bool {$/;"	f
is_primitive_type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn is_primitive_type(ty: &syn::Type, primitive: &str) -> bool {$/;"	f
is_propagate_version_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_propagate_version_set(&self) -> bool {$/;"	P	implementation:App
is_punctuation	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/puncttable.rs	/^pub(crate) fn is_punctuation(c: char) -> bool {$/;"	f
is_redirect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub fn is_redirect(&self) -> bool {$/;"	P	implementation:Error
is_reference	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn is_reference(ty: &syn::Type, elem: fn(&syn::Type) -> bool) -> bool {$/;"	f
is_remote	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    is_remote: bool,$/;"	m	struct:Parameters
is_request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub fn is_request(&self) -> bool {$/;"	P	implementation:Error
is_require_equals_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_require_equals_set(&self) -> bool {$/;"	P	implementation:Arg
is_require_value_delimiter_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_require_value_delimiter_set(&self) -> bool {$/;"	P	implementation:Arg
is_required_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_required_set(&self) -> bool {$/;"	P	implementation:Arg
is_retryable_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^fn is_retryable_error(err: &(dyn std::error::Error + 'static)) -> bool {$/;"	f
is_rolled	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    pub fn is_rolled(&self) -> bool {$/;"	P	implementation:SpooledTempFile
is_secure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn is_secure(&self) -> bool {$/;"	P	implementation:BigNumRef
is_send	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    fn is_send<T: Send>() {}$/;"	f	function:_check_kinds
is_server	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn is_server(&self) -> bool {$/;"	P	implementation:SslRef
is_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_set(&self, s: ArgSettings) -> bool {$/;"	P	implementation:Arg
is_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_set(&self, s: AppSettings) -> bool {$/;"	P	implementation:App
is_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    pub(crate) fn is_set(&self, s: AS) -> bool {$/;"	P	implementation:Parser
is_slice_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn is_slice_u8(ty: &syn::Type) -> bool {$/;"	f
is_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn is_some(self) -> bool {$/;"	P	implementation:Identifier
is_status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub fn is_status(&self) -> bool {$/;"	P	implementation:Error
is_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn is_str(ty: &syn::Type) -> bool {$/;"	f
is_subcommand_negates_reqs_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_subcommand_negates_reqs_set(&self) -> bool {$/;"	P	implementation:App
is_subcommand_precedence_over_arg_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_subcommand_precedence_over_arg_set(&self) -> bool {$/;"	P	implementation:App
is_subcommand_required_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_subcommand_required_set(&self) -> bool {$/;"	P	implementation:App
is_sync	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    fn is_sync<T: Sync>() {}$/;"	f	function:_check_kinds
is_takes_value_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_takes_value_set(&self) -> bool {$/;"	P	implementation:Arg
is_timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    fn is_timeout() {$/;"	f	module:tests
is_timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub fn is_timeout(&self) -> bool {$/;"	P	implementation:Error
is_trailing_var_arg_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn is_trailing_var_arg_set(&self) -> bool {$/;"	P	implementation:App
is_use_value_delimiter_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn is_use_value_delimiter_set(&self) -> bool {$/;"	P	implementation:Arg
is_valid_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn is_valid_arg(&self, _id: impl Key) -> bool {$/;"	P	implementation:ArgMatches
is_valid_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn is_valid_subcommand(&self, _id: impl Key) -> bool {$/;"	P	implementation:ArgMatches
is_valid_unquoted_attr_value_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn is_valid_unquoted_attr_value_char(c: u8) -> bool {$/;"	f
is_write_vectored	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn is_write_vectored(&self) -> bool {$/;"	P	implementation:native_tls_conn::NativeTlsConn
is_write_vectored	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn is_write_vectored(&self) -> bool {$/;"	P	implementation:rustls_tls_conn::RustlsTlsConn
is_write_vectored	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn is_write_vectored(&self) -> bool {$/;"	P	implementation:verbose::Verbose
is_write_vectored	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn is_write_vectored(&self) -> bool {$/;"	P	implementation:Conn
is_z	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^fn is_z(c: char) -> bool {$/;"	f
is_zero	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn is_zero(&self) -> bool {$/;"	P	implementation:Duration
is_zero	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn is_zero(&self) -> bool {$/;"	P	implementation:Duration
iso_week	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	P	implementation:Date
iso_week	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	P	implementation:DateTime
iso_week	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn iso_week(&self) -> IsoWeek;$/;"	P	interface:Datelike
iso_week	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	P	implementation:NaiveDate
iso_week	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn iso_week(&self) -> IsoWeek {$/;"	P	implementation:NaiveDateTime
iso_week	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn iso_week(fmt: &mut fmt::Formatter, ch:char, tm: &Tm) -> fmt::Result {$/;"	f
iso_week_days	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn iso_week_days(yday: i32, wday: i32) -> i32 {$/;"	f
iso_week_from_yof	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^pub fn iso_week_from_yof(year: i32, of: Of) -> IsoWeek {$/;"	f
isoweek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub isoweek: Option<u32>,$/;"	m	struct:Parsed
isoweek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    mod isoweek;$/;"	n	module:naive
isoweek_delta	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn isoweek_delta(&self) -> u32 {$/;"	P	implementation:YearFlags
isoweekdate_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn isoweekdate_raw(&self) -> (u32, Weekday) {$/;"	P	implementation:Of
isoyear	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub isoyear: Option<i32>,$/;"	m	struct:Parsed
isoyear_div_100	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub isoyear_div_100: Option<i32>,$/;"	m	struct:Parsed
isoyear_mod_100	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub isoyear_mod_100: Option<i32>,$/;"	m	struct:Parsed
isoywd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn isoywd(&self, year: i32, week: u32, weekday: Weekday) -> Date<Self> {$/;"	P	interface:TimeZone
isoywd_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn isoywd_opt(&self, year: i32, week: u32, weekday: Weekday) -> LocalResult<Date<Self>> {$/;"	P	interface:TimeZone
issue_2090	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/tests.rs	/^fn issue_2090() {$/;"	f
issue_665	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn issue_665() {$/;"	f	module:test
issued	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn issued(&self, subject: &X509Ref) -> X509VerifyResult {$/;"	P	implementation:X509Ref
issued	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn issued() {$/;"	f
issuer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    issuer: Option<bool>,$/;"	m	struct:AuthorityKeyIdentifier
issuer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn issuer(&mut self, always: bool) -> &mut AuthorityKeyIdentifier {$/;"	P	implementation:AuthorityKeyIdentifier
issuer_alt_names	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn issuer_alt_names(&self) -> Option<Stack<GeneralName>> {$/;"	P	implementation:X509Ref
issuer_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn issuer_name(&self) -> &X509NameRef {$/;"	P	implementation:X509Ref
item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub item: T,$/;"	m	struct:Node
item_to_event	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^fn item_to_event<'a>(item: Item, text: &'a str, allocs: &Allocations<'a>) -> Event<'a> {$/;"	f
item_to_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^fn item_to_tag<'a>(item: &Item, allocs: &Allocations<'a>) -> Tag<'a> {$/;"	f
items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    items: I,$/;"	m	struct:DelayedFormat
items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    items: Vec<OsString>,$/;"	m	struct:Input
items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub items: Vec<HashMap<DirEntryAttr, DirEntryValue>>,$/;"	m	struct:LsResult
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn iter(&self) -> indexmap::map::Iter<Id, MatchedArg> {$/;"	P	implementation:ArgMatcher
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    iter: Cloned<Iter<'a, usize>>,$/;"	m	struct:Indices
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    iter: Map<Flatten<Iter<'a, Vec<OsString>>>, fn(&OsString) -> &OsStr>,$/;"	m	struct:OsValues
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    iter: Map<Flatten<Iter<'a, Vec<OsString>>>, for<'r> fn(&'r OsString) -> &'r str>,$/;"	m	struct:Values
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    iter: Map<Iter<'a, Vec<OsString>>, fn(&Vec<OsString>) -> Vec<&str>>,$/;"	m	struct:GroupedValues
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/graph.rs	/^    pub(crate) fn iter(&self) -> impl Iterator<Item = &T> {$/;"	f
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    iter: c_int,$/;"	m	struct:Pkcs12Builder
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    pub fn iter(&self) -> Iter<'_, T> {$/;"	P	implementation:StackRef
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    iter: I,$/;"	m	struct:HtmlWriter
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn iter(&'s self) -> impl Iterator<Item = (&'s str, &'s LinkDef<'input>)> {$/;"	f
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^    iter: LookupIpIntoIter,$/;"	m	struct:SocketAddrs
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    iter: iter::Fuse<I>,$/;"	m	struct:MapDeserializer
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    iter: iter::Fuse<I>,$/;"	m	struct:SeqDeserializer
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        iter: <&'a [(Content<'de>, Content<'de>)] as IntoIterator>::IntoIter,$/;"	m	struct:content::MapRefDeserializer
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        iter: <&'a [Content<'de>] as IntoIterator>::IntoIter,$/;"	m	struct:content::SeqRefDeserializer
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        iter: <Vec<(Content<'de>, Content<'de>)> as IntoIterator>::IntoIter,$/;"	m	struct:content::MapDeserializer
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        iter: <Vec<Content<'de>> as IntoIterator>::IntoIter,$/;"	m	struct:content::SeqDeserializer
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    iter: slice::Iter<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatMapAccess
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    iter: slice::IterMut<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatInternallyTaggedAccess
iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    iter: slice::IterMut<'a, Option<(Content<'de>, Content<'de>)>>,$/;"	m	struct:FlatStructAccess
iter_days	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn iter_days(&self) -> NaiveDateDaysIterator {$/;"	P	implementation:NaiveDate
iter_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    pub fn iter_mut(&mut self) -> IterMut<'_, T> {$/;"	P	implementation:StackRef
iter_weeks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn iter_weeks(&self) -> NaiveDateWeeksIterator {$/;"	P	implementation:NaiveDate
iterate_special_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    pub(super) fn iterate_special_bytes<F, T>($/;"	f	module:simd
iterate_special_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^fn iterate_special_bytes<F, T>($/;"	f
iterator_len_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^fn iterator_len_hint<I>(iter: &I) -> Option<usize>$/;"	f
itertools	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^pub(crate) mod itertools {$/;"	n
iv	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    iv: Option<Vec<u8>>,$/;"	m	struct:Seal
iv	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    pub fn iv(&self) -> Option<&[u8]> {$/;"	P	implementation:Seal
iv	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs5.rs	/^    pub iv: Option<Vec<u8>>,$/;"	m	struct:KeyIvPair
iv_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn iv_len(&self) -> Option<usize> {$/;"	P	implementation:Cipher
ix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    ix: usize,$/;"	m	struct:LineStart
js_fetch	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^fn js_fetch(req: &web_sys::Request) -> Promise {$/;"	f
json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn json<T: Serialize + ?Sized>(mut self, json: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub async fn json<T: DeserializeOwned>(self) -> crate::Result<T> {$/;"	P	implementation:Response
json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn json<T: Serialize + ?Sized>(mut self, json: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn json<T: DeserializeOwned>(self) -> crate::Result<T> {$/;"	P	implementation:Response
json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn json<T: Serialize + ?Sized>(mut self, json: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    pub async fn json<T: DeserializeOwned>(self) -> crate::Result<T> {$/;"	P	implementation:Response
keep	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/other.rs	/^pub fn keep(path: &Path) -> io::Result<()> {$/;"	f
keep	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/unix.rs	/^pub fn keep(_: &Path) -> io::Result<()> {$/;"	f
keep	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/windows.rs	/^pub fn keep(path: &Path) -> io::Result<()> {$/;"	f
keep	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn keep(mut self) -> Result<PathBuf, PathPersistError> {$/;"	P	implementation:TempPath
keep	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn keep(self) -> Result<(File, PathBuf), PersistError> {$/;"	P	implementation:NamedTempFile
keep_random_devices_open	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rand.rs	/^pub fn keep_random_devices_open(keep: bool) {$/;"	f
key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    key: KeyType,$/;"	m	struct:Key
key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/fnv.rs	/^    fn key(&self) -> u64 {$/;"	f
key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/fnv.rs	/^    fn key(&self) -> u64;$/;"	P	interface:Key
key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs5.rs	/^    pub key: Vec<u8>,$/;"	m	struct:KeyIvPair
key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        key: Option<Content>,$/;"	m	struct:content::SerializeMap
key_0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    key_0: Wrapping<u32>,$/;"	m	struct:ZipCryptoKeys
key_1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    key_1: Wrapping<u32>,$/;"	m	struct:ZipCryptoKeys
key_2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    key_2: Wrapping<u32>,$/;"	m	struct:ZipCryptoKeys
key_agreement	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    key_agreement: bool,$/;"	m	struct:KeyUsage
key_agreement	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn key_agreement(&mut self) -> &mut KeyUsage {$/;"	P	implementation:KeyUsage
key_algorithm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    pub fn key_algorithm(&mut self, nid: Nid) -> &mut Self {$/;"	P	implementation:Pkcs12Builder
key_cert_sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    key_cert_sign: bool,$/;"	m	struct:KeyUsage
key_cert_sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn key_cert_sign(&mut self) -> &mut KeyUsage {$/;"	P	implementation:KeyUsage
key_encipherment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    key_encipherment: bool,$/;"	m	struct:KeyUsage
key_encipherment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn key_encipherment(&mut self) -> &mut KeyUsage {$/;"	P	implementation:KeyUsage
key_from_affine_coordinates	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn key_from_affine_coordinates() {$/;"	f	module:test
key_from_private_components	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn key_from_private_components() {$/;"	f	module:test
key_from_public_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn key_from_public_key() {$/;"	f	module:test
key_iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    pub fn key_iter(&mut self, iter: u32) -> &mut Self {$/;"	P	implementation:Pkcs12Builder
key_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn key_len(&self) -> usize {$/;"	P	implementation:Cipher
key_new_by_curve_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn key_new_by_curve_name() {$/;"	f	module:test
key_stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    key_stack: Vec<Yaml>,$/;"	m	struct:YamlLoader
keyid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    keyid: Option<bool>,$/;"	m	struct:AuthorityKeyIdentifier
keyid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn keyid(&mut self, always: bool) -> &mut AuthorityKeyIdentifier {$/;"	P	implementation:AuthorityKeyIdentifier
keying_export	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn keying_export() {$/;"	f
keys	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    keys: Vec<Key>,$/;"	m	struct:MKeyMap
keys	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    pub(crate) fn keys(&self) -> impl Iterator<Item = &KeyType> {$/;"	P	implementation:MKeyMap
keys	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    keys: ZipCryptoKeys,$/;"	m	struct:ZipCryptoReader
kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^    pub mod kind {$/;"	n	module:private
kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^mod kind;$/;"	n
kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    kind: ErrorKind,$/;"	m	struct:ErrorInner
kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub fn kind(&self) -> ErrorKind {$/;"	P	implementation:Error
kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub kind: ErrorKind,$/;"	m	struct:Error
kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^mod kind;$/;"	n
kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    pub kind: ErrorKind,$/;"	m	struct:Error
kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    kind: Kind,$/;"	m	struct:Body
kind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    kind: Kind,$/;"	m	struct:Inner
large_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub large_file: bool,$/;"	m	struct:ZipFileData
large_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    large_file: bool,$/;"	m	struct:FileOptions
large_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn large_file(mut self, large: bool) -> FileOptions {$/;"	P	implementation:FileOptions
large_integer_to_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn large_integer_to_i64(l: LARGE_INTEGER) -> i64 {$/;"	f	module:inner
last	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn last(self, yes: bool) -> Self {$/;"	P	implementation:Arg
last_line_blank	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    last_line_blank: bool,$/;"	m	struct:FirstPass
last_modified	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn last_modified(&self) -> DateTime {$/;"	P	implementation:ZipFile
last_modified_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub last_modified_time: DateTime,$/;"	m	struct:ZipFileData
last_modified_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    last_modified_time: DateTime,$/;"	m	struct:FileOptions
last_modified_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn last_modified_time(mut self, mod_time: DateTime) -> FileOptions {$/;"	P	implementation:FileOptions
latest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn latest(self) -> Option<T> {$/;"	P	implementation:LocalResult
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^    fn len(&self) -> usize {$/;"	P	implementation:Chain
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    len: usize,$/;"	m	struct:GroupedValues
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    len: usize,$/;"	m	struct:Indices
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    len: usize,$/;"	m	struct:OsValues
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    len: usize,$/;"	m	struct:Values
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Asn1BitStringRef
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:Asn1StringRef
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^    pub fn len(&mut self) -> Result<usize, ErrorStack> {$/;"	P	implementation:Deriver
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn len(&self) -> Result<usize, ErrorStack> {$/;"	P	implementation:Signer
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:StackRef
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    pub(crate) fn len(&self) -> Option<u64> {$/;"	P	implementation:Body
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        len: usize,$/;"	m	struct:private::SeedTupleVariant
len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn len(&self) -> usize {$/;"	P	implementation:ZipArchive
len_intern	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn len_intern(&self) -> Result<usize, ErrorStack> {$/;"	P	implementation:Signer
level	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    level: isize,$/;"	m	struct:YamlEmitter
lib	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/lib.rs	/^mod lib {$/;"	n
library	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    pub fn library(&self) -> Option<&'static str> {$/;"	P	implementation:Error
lifetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    lifetime: PhantomData<&'a T>,$/;"	m	struct:Ref
lifetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    lifetime: PhantomData<&'a mut T>,$/;"	m	struct:Mut
lifetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    lifetime: PhantomData<&'de ()>,$/;"	m	struct:MapDeserializer
limited	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    pub fn limited(max: usize) -> Self {$/;"	P	implementation:Policy
line	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    line: c_int,$/;"	m	struct:Error
line	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    pub fn line(&self) -> u32 {$/;"	P	implementation:Error
line	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    line: usize,$/;"	m	struct:Marker
line	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn line(&self) -> usize {$/;"	P	implementation:Marker
lineno	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        lineno: Option<u32>,$/;"	m	struct:capture::BacktraceSymbol
link_def_at_eof	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn link_def_at_eof() {$/;"	f	module:test
link_stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    link_stack: LinkStack,$/;"	m	struct:Parser
link_type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub link_type: LinkType,$/;"	m	struct:BrokenLink
linklabel	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^mod linklabel;$/;"	n
links	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    links: Vec<(LinkType, CowStr<'a>, CowStr<'a>)>,$/;"	m	struct:Allocations
lit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! lit {$/;"	M
load	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    pub fn load<R: MarkedEventReceiver>($/;"	P	implementation:Parser
load_client_ca_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn load_client_ca_file<P: AsRef<Path>>(file: P) -> Result<Stack<X509Name>, ErrorStack> {$/;"	P	implementation:X509Name
load_document	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn load_document<R: MarkedEventReceiver>($/;"	P	implementation:Parser
load_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    pub fn load_from_str(source: &str) -> Result<Vec<Yaml>, ScanError> {$/;"	P	implementation:YamlLoader
load_mapping	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn load_mapping<R: MarkedEventReceiver>(&mut self, recv: &mut R) -> Result<(), ScanError> {$/;"	P	implementation:Parser
load_node	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn load_node<R: MarkedEventReceiver>($/;"	P	implementation:Parser
load_sequence	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn load_sequence<R: MarkedEventReceiver>(&mut self, recv: &mut R) -> Result<(), ScanError> {$/;"	P	implementation:Parser
load_yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! load_yaml {$/;"	M
loc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    loc: c_int,$/;"	m	struct:X509NameEntries
local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^mod local;$/;"	n
local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub fn local(self) -> Tm {$/;"	P	implementation:Timespec
local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    local: syn::Ident,$/;"	m	struct:Parameters
local_address	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    local_address: Option<IpAddr>,$/;"	m	struct:Config
local_address	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn local_address<T>(mut self, addr: T) -> ClientBuilder$/;"	P	implementation:ClientBuilder
local_address	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn local_address<T>(self, addr: T) -> ClientBuilder$/;"	P	implementation:ClientBuilder
local_minus_utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    local_minus_utc: i32,$/;"	m	struct:FixedOffset
local_minus_utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn local_minus_utc(&self) -> i32 {$/;"	P	implementation:FixedOffset
local_tm_to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^pub fn local_tm_to_time(tm: &Tm) -> i64 {$/;"	f
local_tm_to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^pub fn local_tm_to_time(rust_tm: &Tm) -> i64 {$/;"	f
local_tm_to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^pub fn local_tm_to_time(tm: &Tm) -> i64 {$/;"	f
local_tm_to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn local_tm_to_time(rust_tm: &Tm) -> i64 {$/;"	f	module:inner
local_tm_to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn local_tm_to_time(tm: &Tm) -> i64 {$/;"	f	module:inner
locale	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    locale: Option<Locale>,$/;"	m	struct:DelayedFormat
locales	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub(crate) mod locales;$/;"	n
location	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn location(&self) -> &GeneralNameRef {$/;"	P	implementation:AccessDescriptionRef
log	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^        fn log(s: String);$/;"	f	module:tests
lone_hashtag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn lone_hashtag() {$/;"	f	module:test
long	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn long(mut self, l: &'help str) -> Self {$/;"	P	implementation:Arg
long	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn long(&mut self, arg: &mut Arg<'help>) {$/;"	P	implementation:UsageParser
long	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn long(&mut self, arg: &Arg<'help>) -> io::Result<()> {$/;"	P	implementation:Help
long_about	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    long_about: Option<&'help str>,$/;"	m	struct:App
long_about	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn long_about<O: Into<Option<&'help str>>>(mut self, long_about: O) -> Self {$/;"	P	implementation:App
long_end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^fn long_end(b: u8) -> bool {$/;"	f
long_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    long_flag: Option<&'help str>,$/;"	m	struct:App
long_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn long_flag(mut self, long: &'help str) -> Self {$/;"	P	implementation:App
long_flag_alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn long_flag_alias(mut self, name: &'help str) -> Self {$/;"	P	implementation:App
long_flag_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    long_flag_aliases: Vec<(&'help str, bool)>, \/\/ (name, visible)$/;"	m	struct:App
long_flag_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn long_flag_aliases(mut self, names: &[&'help str]) -> Self {$/;"	P	implementation:App
long_flag_aliases_to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn long_flag_aliases_to<T>(&self, flag: &T) -> bool$/;"	P	implementation:App
long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn long_help(mut self, h: impl Into<Option<&'help str>>) -> Self {$/;"	P	implementation:Arg
long_match	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^        fn long_match() {$/;"	f	module:simd::simd_test
long_months	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn long_months(locale: Locale) -> &'static [&'static str] {$/;"	f
long_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^    pub fn long_name(&self) -> Result<&'static str, ErrorStack> {$/;"	P	implementation:Nid
long_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    long_version: Option<&'help str>,$/;"	m	struct:App
long_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn long_version<S: Into<&'help str>>(mut self, ver: S) -> Self {$/;"	P	implementation:App
long_weekdays	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn long_weekdays(locale: Locale) -> &'static [&'static str] {$/;"	f
longest_filter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub(crate) fn longest_filter(&self) -> bool {$/;"	P	implementation:Arg
longs_and_visible_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^pub fn longs_and_visible_aliases(p: &Command) -> Vec<String> {$/;"	f
lookahead	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn lookahead(&mut self, count: usize) {$/;"	P	implementation:Scanner
lookup_table	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    lookup_table: &'b LookupTable,$/;"	m	struct:FirstPass
lots_of_backslashes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn lots_of_backslashes() {$/;"	f	module:test
lower_bounds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    lower_bounds: [usize; 7],$/;"	m	struct:InlineStack
lshift	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn lshift(&mut self, a: &BigNumRef, n: i32) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
lshift1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn lshift1(&mut self, a: &BigNumRef) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
mac	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    mod mac {$/;"	n	module:inner
mac_iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    mac_iter: c_int,$/;"	m	struct:Pkcs12Builder
mac_iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    pub fn mac_iter(&mut self, mac_iter: u32) -> &mut Self {$/;"	P	implementation:Pkcs12Builder
macros	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^mod macros;$/;"	n
macros	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod macros;$/;"	n
macros	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/lib.rs	/^mod macros;$/;"	n
macros	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/lib.rs	/^mod macros;$/;"	n
macros	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^mod macros;$/;"	n
macros	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/lib.rs	/^mod macros;$/;"	n
main	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/main.rs	/^pub fn main() -> std::io::Result<()> {$/;"	f
main	/mnt/c/Users/SamanthaC/rust/md_puppy/src/main.rs	/^fn main() -> Result<()> {$/;"	f
make_code_span	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn make_code_span(&mut self, open: TreeIndex, close: TreeIndex, preceding_backslash: bool) {$/;"	P	implementation:Parser
make_crypto_reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^fn make_crypto_reader<'a>($/;"	f
make_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn make_error(&mut self, ret: c_int) -> Error {$/;"	P	implementation:SslStream
make_explicit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub(crate) fn make_explicit(&mut self) {$/;"	P	implementation:DisplayOrder
make_reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^fn make_reader<'a>($/;"	f
make_referer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^fn make_referer(next: &Url, previous: &Url) -> Option<HeaderValue> {$/;"	f
mangled_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn mangled_name(&self) -> ::std::path::PathBuf {$/;"	P	implementation:ZipFile
map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn map<U, F: FnMut(T) -> U>(self, mut f: F) -> LocalResult<U> {$/;"	P	implementation:LocalResult
map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        map: A,$/;"	m	struct:private::MapAsEnum
map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    map: A,$/;"	m	struct:MapAccessDeserializer
map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        map: M,$/;"	m	struct:content::SerializeStructVariantAsMapValue
map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        map: M,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    map: &'a mut M,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
map_as_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub fn map_as_enum<A>(map: A) -> MapAsEnum<A> {$/;"	f	module:private
map_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! map_impl {$/;"	M
map_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^macro_rules! map_impl {$/;"	M
map_local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^fn map_local<Tz: TimeZone, F>(d: &Date<Tz>, mut f: F) -> Option<Date<Tz>>$/;"	f
map_local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn map_local<Tz: TimeZone, F>(dt: &DateTime<Tz>, mut f: F) -> Option<DateTime<Tz>>$/;"	f
mark	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    mark: Marker,$/;"	m	struct:ScanError
mark	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    mark: Marker,$/;"	m	struct:Scanner
mark	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    mark: Marker,$/;"	m	struct:SimpleKey
mark	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn mark(&self) -> Marker {$/;"	P	implementation:Scanner
mark_has_flatten	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn mark_has_flatten(&mut self) {$/;"	P	implementation:Container
mark_transparent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn mark_transparent(&mut self) {$/;"	P	implementation:Field
markdown_compiling	/mnt/c/Users/SamanthaC/rust/md_puppy/src/main.rs	/^mod markdown_compiling;$/;"	n
markdown_to_html	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^pub fn markdown_to_html(input: &str) -> String {$/;"	f
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            marker: PhantomData<T>,$/;"	m	struct:deserialize::VecVisitor
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    marker: PhantomData<A>,$/;"	m	struct:ArrayVisitor
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    marker: PhantomData<T>,$/;"	m	struct:OptionVisitor
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    marker: PhantomData<T>,$/;"	m	struct:PhantomDataVisitor
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        marker: PhantomData<E>,$/;"	m	struct:private::UnitOnly
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedBytesDeserializer
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedStrDeserializer
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BytesDeserializer
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:CowStrDeserializer
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:NeverDeserializer
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:SeqDeserializer
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StrDeserializer
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StringDeserializer
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:U32Deserializer
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    marker: PhantomData<E>,$/;"	m	struct:UnitDeserializer
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    marker: PhantomData<E>,$/;"	m	struct:BorrowedStrDeserializer
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    marker: PhantomData<E>,$/;"	m	struct:StrDeserializer
marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn marker(&self) -> &Marker {$/;"	P	implementation:ScanError
marks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    marks: Vec<Marker>,$/;"	m	struct:Parser
mask_bits	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn mask_bits(&mut self, n: i32) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
master_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn master_key(&self, buf: &mut [u8]) -> usize {$/;"	P	implementation:SslSessionRef
master_key_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn master_key_len(&self) -> usize {$/;"	P	implementation:SslSessionRef
match_arg_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn match_arg_error($/;"	P	implementation:Parser
match_digits	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_digits(ss: &mut &str, min_digits : usize, max_digits: usize, ws: bool) -> Option<i32> {$/;"	f
match_digits_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_digits_i64(ss: &mut &str, min_digits : usize, max_digits: usize, ws: bool) -> Option<i6/;"	f
match_digits_in_range	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_digits_in_range(ss: &mut &str,$/;"	f
match_fractional_seconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_fractional_seconds(ss: &mut &str) -> i32 {$/;"	f
match_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_str(s: &mut &str, needle: &str) -> bool {$/;"	f
match_strs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn match_strs(ss: &mut &str, strs: &[(&str, i32)]) -> Option<i32> {$/;"	f
matched_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/mod.rs	/^mod matched_arg;$/;"	n
matches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    pub fn matches(&self, value: &str, ignore_case: bool) -> bool {$/;"	P	implementation:PossibleValue
matches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/mod.rs	/^pub mod matches;$/;"	n
max_age	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    pub fn max_age(&self) -> Option<std::time::Duration> {$/;"	P	implementation:Cookie
max_early_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn max_early_data(&self) -> u32 {$/;"	P	implementation:SslContextRef
max_early_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn max_early_data(&self) -> u32 {$/;"	P	implementation:SslRef
max_early_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn max_early_data(&self) -> u32 {$/;"	P	implementation:SslSessionRef
max_inline_str_len_atleast_five	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn max_inline_str_len_atleast_five() {$/;"	f	module:test_special_string
max_occurrences	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn max_occurrences(mut self, qty: usize) -> Self {$/;"	P	implementation:Arg
max_proto_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn max_proto_version(&mut self) -> Option<SslVersion> {$/;"	P	implementation:SslContextBuilder
max_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    max_size: usize,$/;"	m	struct:SpooledTempFile
max_term_width	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn max_term_width(mut self, w: usize) -> Self {$/;"	P	implementation:App
max_tls_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    max_tls_version: Option<tls::Version>,$/;"	m	struct:Config
max_tls_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn max_tls_version(mut self, version: tls::Version) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
max_tls_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn max_tls_version(self, version: tls::Version) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
max_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn max_value() -> Duration {$/;"	P	implementation:Duration
max_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn max_value() -> Duration { MAX }$/;"	P	implementation:Duration
max_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn max_values(mut self, qty: usize) -> Self {$/;"	P	implementation:Arg
max_w	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    max_w: Option<usize>,$/;"	m	struct:App
maybe_has_http_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    pub(crate) fn maybe_has_http_auth(&self) -> bool {$/;"	P	implementation:Proxy
md	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    md: *const ffi::EVP_MD,$/;"	m	struct:Hasher
md5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn md5() -> MessageDigest {$/;"	P	implementation:MessageDigest
md_ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    md_ctx: *mut ffi::EVP_MD_CTX,$/;"	m	struct:Signer
md_ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    md_ctx: *mut ffi::EVP_MD_CTX,$/;"	m	struct:Verifier
mdf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn mdf(&self) -> Mdf {$/;"	P	implementation:NaiveDate
mem_size_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    fn mem_size_of() {$/;"	f	module:tests
member	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub member: syn::Member,$/;"	m	struct:Field
member_message	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/check.rs	/^fn member_message(member: &Member) -> String {$/;"	f
memcmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod memcmp;$/;"	n
merge_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    fn merge_headers(&self, req: &mut Request) {$/;"	P	implementation:Client
message	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    message: Option<Message>,$/;"	m	struct:ErrorInner
message	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    message: String,$/;"	m	struct:Error
meta	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    meta: PartMetadata,$/;"	m	struct:Part
meta	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    meta: PartMetadata,$/;"	m	struct:Part
meta	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    meta: PartMetadata,$/;"	m	struct:Part
metadata	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn metadata(&self) -> &PartMetadata {$/;"	P	implementation:Part
metadata	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn metadata(&self) -> &PartMetadata;$/;"	P	interface:PartProps
metadata	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn metadata(&self) -> &PartMetadata {$/;"	P	implementation:Part
metadata	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    fn metadata(&self) -> &PartMetadata {$/;"	P	implementation:Part
metadata	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    fn metadata(&self) -> &PartMetadata;$/;"	P	interface:PartProps
method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    method: ManuallyDrop<BioMethod>,$/;"	m	struct:SslStream
method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn method(&self) -> &Asn1ObjectRef {$/;"	P	implementation:AccessDescriptionRef
method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    method: Method,$/;"	m	struct:Request
method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn method(&self) -> &Method {$/;"	P	implementation:Request
method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn method(&self) -> &Method {$/;"	P	implementation:Request
method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    method: Method,$/;"	m	struct:Request
method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn method(&self) -> &Method {$/;"	P	implementation:Request
method_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn method_mut(&mut self) -> &mut Method {$/;"	P	implementation:Request
method_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn method_mut(&mut self) -> &mut Method {$/;"	P	implementation:Request
method_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn method_mut(&mut self) -> &mut Method {$/;"	P	implementation:Request
methods	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^    fn methods() -> Vec<CompressionMethod> {$/;"	f	module:test
microseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn microseconds(microseconds: i64) -> Duration {$/;"	P	implementation:Duration
microseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn microseconds(microseconds: i64) -> Duration {$/;"	P	implementation:Duration
milliseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn milliseconds(milliseconds: i64) -> Duration {$/;"	P	implementation:Duration
milliseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn milliseconds(milliseconds: i64) -> Duration {$/;"	P	implementation:Duration
mime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn mime(self, mime: Mime) -> Part {$/;"	P	implementation:Part
mime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    mime: Option<Mime>,$/;"	m	struct:PartMetadata
mime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn mime(mut self, mime: Mime) -> Self {$/;"	P	implementation:PartMetadata
mime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn mime(self, mime: Mime) -> Part {$/;"	P	implementation:Part
mime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    fn mime(self, mime: Mime) -> Part {$/;"	P	implementation:Part
mime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    mime: Option<Mime>,$/;"	m	struct:PartMetadata
mime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub(crate) fn mime(mut self, mime: Mime) -> Self {$/;"	P	implementation:PartMetadata
mime_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn mime_str(self, mime: &str) -> crate::Result<Part> {$/;"	P	implementation:Part
mime_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn mime_str(self, mime: &str) -> crate::Result<Part> {$/;"	P	implementation:Part
mime_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub fn mime_str(self, mime: &str) -> crate::Result<Part> {$/;"	P	implementation:Part
min_hrule_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    min_hrule_offset: usize,$/;"	m	struct:LineStart
min_proto_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn min_proto_version(&mut self) -> Option<SslVersion> {$/;"	P	implementation:SslContextBuilder
min_tls_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    min_tls_version: Option<tls::Version>,$/;"	m	struct:Config
min_tls_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn min_tls_version(mut self, version: tls::Version) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
min_tls_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn min_tls_version(self, version: tls::Version) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
min_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn min_value() -> Duration {$/;"	P	implementation:Duration
min_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn min_value() -> Duration { MIN }$/;"	P	implementation:Duration
min_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn min_values(mut self, qty: usize) -> Self {$/;"	P	implementation:Arg
minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn minute(&self) -> u32 {$/;"	P	implementation:DateTime
minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub minute: Option<u32>,$/;"	m	struct:Parsed
minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn minute(&self) -> u32;$/;"	P	interface:Timelike
minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn minute(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn minute(&self) -> u32 {$/;"	P	implementation:NaiveTime
minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    minute: u8,$/;"	m	struct:DateTime
minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn minute(&self) -> u8 {$/;"	P	implementation:DateTime
minutes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn minutes(minutes: i64) -> Duration {$/;"	P	implementation:Duration
minutes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn minutes(minutes: i64) -> Duration {$/;"	P	implementation:Duration
missing_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^pub fn missing_field<'de, V, E>(field: &'static str) -> Result<V, E>$/;"	f
missing_required_argument	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn missing_required_argument($/;"	P	implementation:Error
missing_required_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn missing_required_error(&self, matcher: &ArgMatcher, incl: Vec<Id>) -> ClapResult<()> {$/;"	P	implementation:Validator
missing_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn missing_subcommand(cmd: &Command, name: String, usage: String) -> Self {$/;"	P	implementation:Error
mkeymap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/lib.rs	/^mod mkeymap;$/;"	n
mock_tunnel	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    macro_rules! mock_tunnel {$/;"	M	module:tests
mod_add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn mod_add($/;"	P	implementation:BigNumRef
mod_exp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn mod_exp($/;"	P	implementation:BigNumRef
mod_floor_64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^fn mod_floor_64(this: i64, other: i64) -> i64 {$/;"	f
mod_floor_64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^fn mod_floor_64(this: i64, other: i64) -> i64 {$/;"	f
mod_inverse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn mod_inverse($/;"	P	implementation:BigNumRef
mod_mul	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn mod_mul($/;"	P	implementation:BigNumRef
mod_sqr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn mod_sqr($/;"	P	implementation:BigNumRef
mod_sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn mod_sub($/;"	P	implementation:BigNumRef
mod_word	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn mod_word(&self, w: u32) -> Result<u64, ErrorStack> {$/;"	P	implementation:BigNumRef
month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn month(&self) -> u32 {$/;"	P	implementation:Date
month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn month(&self) -> u32 {$/;"	P	implementation:DateTime
month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub month: Option<u32>,$/;"	m	struct:Parsed
month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn month(&self) -> u32;$/;"	P	interface:Datelike
month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn month(&self) -> u32 {$/;"	P	implementation:NaiveDate
month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn month(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn month(&self) -> u32 {$/;"	P	implementation:Mdf
month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    month: u8,$/;"	m	struct:DateTime
month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn month(&self) -> u8 {$/;"	P	implementation:DateTime
month0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn month0(&self) -> u32 {$/;"	P	implementation:Date
month0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn month0(&self) -> u32 {$/;"	P	implementation:DateTime
month0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn month0(&self) -> u32;$/;"	P	interface:Datelike
month0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn month0(&self) -> u32 {$/;"	P	implementation:NaiveDate
month0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn month0(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
month_serde	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod month_serde {$/;"	n
move_dir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub fn move_dir<P, Q>(from: P, to: Q, options: &CopyOptions) -> Result<u64>$/;"	f
move_dir_with_progress	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub fn move_dir_with_progress<P, Q, F>($/;"	f
move_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^pub fn move_file<P, Q>(from: P, to: Q, options: &CopyOptions) -> Result<u64>$/;"	f
move_file_with_progress	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^pub fn move_file_with_progress<P, Q, F>($/;"	f
move_items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^pub fn move_items<P, Q>(from_items: &[P], to: Q, options: &dir::CopyOptions) -> Result<u64>$/;"	f
move_items_with_progress	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^pub fn move_items_with_progress<P, Q, F>($/;"	f
move_to_project_root	/mnt/c/Users/SamanthaC/rust/md_puppy/src/directory_handling.rs	/^pub fn move_to_project_root() -> Result<()> {$/;"	f
mozilla_intermediate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn mozilla_intermediate(method: SslMethod) -> Result<SslAcceptorBuilder, ErrorStack> {$/;"	P	implementation:SslAcceptor
mozilla_intermediate_v5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn mozilla_intermediate_v5(method: SslMethod) -> Result<SslAcceptorBuilder, ErrorStack> /;"	P	implementation:SslAcceptor
mozilla_modern	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn mozilla_modern(method: SslMethod) -> Result<SslAcceptorBuilder, ErrorStack> {$/;"	P	implementation:SslAcceptor
mozilla_modern_v5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn mozilla_modern_v5(method: SslMethod) -> Result<SslAcceptorBuilder, ErrorStack> {$/;"	P	implementation:SslAcceptor
ms_code_com	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    ms_code_com: bool,$/;"	m	struct:ExtendedKeyUsage
ms_code_com	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn ms_code_com(&mut self) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
ms_code_ind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    ms_code_ind: bool,$/;"	m	struct:ExtendedKeyUsage
ms_code_ind	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn ms_code_ind(&mut self) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
ms_ctl_sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    ms_ctl_sign: bool,$/;"	m	struct:ExtendedKeyUsage
ms_ctl_sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn ms_ctl_sign(&mut self) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
ms_efs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    ms_efs: bool,$/;"	m	struct:ExtendedKeyUsage
ms_efs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn ms_efs(&mut self) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
ms_sgc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    ms_sgc: bool,$/;"	m	struct:ExtendedKeyUsage
ms_sgc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn ms_sgc(&mut self) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
msg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub fn msg<M>(message: M) -> Self$/;"	P	implementation:Error
mul	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn mul(self, rhs: i32) -> Duration {$/;"	P	implementation:Duration
mul	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn mul(self, oth: &BigNumRef) -> BigNum {$/;"	P	implementation:BigNumRef
mul	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn mul($/;"	P	implementation:EcPointRef
mul	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn mul(self, rhs: i32) -> Duration {$/;"	P	implementation:Duration
mul_div_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn mul_div_i64(value: i64, numer: i64, denom: i64) -> i64 {$/;"	f	module:inner
mul_full	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn mul_full($/;"	P	implementation:EcPointRef
mul_generator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn mul_generator() {$/;"	f	module:test
mul_generator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn mul_generator($/;"	P	implementation:EcPointRef
mul_word	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn mul_word(&mut self, w: u32) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
multicall	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn multicall(self, yes: bool) -> Self {$/;"	P	implementation:App
multichunk	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^        fn multichunk() {$/;"	f	module:simd::html_scan_tests
multipart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/mod.rs	/^pub mod multipart;$/;"	n
multipart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn multipart(self, mut multipart: multipart::Form) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
multipart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/mod.rs	/^pub mod multipart;$/;"	n
multipart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn multipart(self, mut multipart: multipart::Form) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
multipart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/mod.rs	/^pub mod multipart;$/;"	n
multipart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn multipart(mut self, multipart: super::multipart::Form) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
multiple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn multiple(self, yes: bool) -> Self {$/;"	P	implementation:Arg
multiple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn multiple(mut self, yes: bool) -> Self {$/;"	P	implementation:ArgGroup
multiple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn multiple(&mut self, arg: &mut Arg) {$/;"	P	implementation:UsageParser
multiple_occurrences	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn multiple_occurrences(self, yes: bool) -> Self {$/;"	P	implementation:Arg
multiple_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub(crate) fn multiple_str(&self) -> &str {$/;"	P	implementation:Arg
multiple_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn multiple_values(self, yes: bool) -> Self {$/;"	P	implementation:Arg
mut_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn mut_arg<T, F>(mut self, arg_id: T, f: F) -> Self$/;"	P	implementation:App
mut_if	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn mut_if(is_mut: bool) -> Option<TokenStream> {$/;"	f
n	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn n(&self) -> &BigNumRef {$/;"	f
naive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod naive {$/;"	n
naive_local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn naive_local(&self) -> NaiveDate {$/;"	P	implementation:Date
naive_local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn naive_local(&self) -> NaiveDateTime {$/;"	P	implementation:DateTime
naive_utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn naive_utc(&self) -> NaiveDate {$/;"	P	implementation:Date
naive_utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn naive_utc(&self) -> NaiveDateTime {$/;"	P	implementation:DateTime
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        name: Option<Vec<u8>>,$/;"	m	struct:capture::BacktraceSymbol
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn name(&self) -> &'static str {$/;"	P	implementation:Month
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn name<S: Into<&'help str>>(self, n: S) -> Self {$/;"	P	implementation:Arg
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn name<S: Into<&'help str>>(self, n: S) -> Self {$/;"	P	implementation:ArgGroup
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    name: String,$/;"	m	struct:App
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn name<S: Into<String>>(mut self, name: S) -> Self {$/;"	P	implementation:App
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    name: &'help str,$/;"	m	struct:PossibleValue
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn name(&mut self, arg: &mut Arg<'help>) {$/;"	P	implementation:UsageParser
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^    name: String,$/;"	m	struct:Id
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/srtp.rs	/^    pub fn name(&self) -> &'static str {$/;"	P	implementation:SrtpProtectionProfileRef
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn name(&self) -> &'static str {$/;"	P	implementation:SslCipherRef
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    name: &'a X509NameRef,$/;"	m	struct:X509NameEntries
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    pub fn name(&self) -> &str {$/;"	P	implementation:Cookie
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^        name: String,$/;"	m	struct:tests::EnvGuard
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        name: &'static str,$/;"	m	struct:content::TagOrContentVisitor
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStruct
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStructVariant
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeStructVariantAsMapValue
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleStruct
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleVariant
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        name: &'static str,$/;"	m	struct:content::SerializeTupleVariantAsMapValue
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    name: &'static str,$/;"	m	struct:FlatMapSerializeStructVariantAsMapValue
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    name: Name,$/;"	m	struct:Container
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    name: Name,$/;"	m	struct:Field
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    name: Name,$/;"	m	struct:Variant
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    name: Symbol,$/;"	m	struct:Attr
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    name: Symbol,$/;"	m	struct:VecAttr
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	P	implementation:Container
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	P	implementation:Field
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn name(&self) -> &Name {$/;"	P	implementation:Variant
name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn name(&self) -> &str {$/;"	P	implementation:ZipFile
name_end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^fn name_end(b: u8) -> bool {$/;"	f
name_no_brackets	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub(crate) fn name_no_brackets(&self) -> Cow<str> {$/;"	P	implementation:Arg
name_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn name_raw(&self) -> &[u8] {$/;"	P	implementation:ZipFile
names	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    names: Vec<String>,$/;"	m	struct:SubjectAlternativeName
names	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    names: &'static [&'static str],$/;"	m	struct:OneOf
names_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    names_map: HashMap<String, usize>,$/;"	m	struct:ZipArchive
nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    nanos: i32, \/\/ Always 0 <= nanos < NANOS_PER_SEC$/;"	m	struct:Duration
nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    nanos: i32, \/\/ Always 0 <= nanos < NANOS_PER_SEC$/;"	m	struct:Duration
nanos_mod_sec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn nanos_mod_sec(&self) -> i32 {$/;"	P	implementation:Duration
nanos_mod_sec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn nanos_mod_sec(&self) -> i32 {$/;"	P	implementation:Duration
nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn nanosecond(&self) -> u32 {$/;"	P	implementation:DateTime
nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub nanosecond: Option<u32>,$/;"	m	struct:Parsed
nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn nanosecond(s: &str) -> ParseResult<(&str, i64)> {$/;"	f
nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn nanosecond(&self) -> u32;$/;"	P	interface:Timelike
nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn nanosecond(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn nanosecond(&self) -> u32 {$/;"	P	implementation:NaiveTime
nanosecond_fixed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn nanosecond_fixed(s: &str, digits: usize) -> ParseResult<(&str, i64)> {$/;"	f
nanoseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn nanoseconds(nanos: i64) -> Duration {$/;"	P	implementation:Duration
nanoseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn nanoseconds(nanos: i64) -> Duration {$/;"	P	implementation:Duration
native	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    native: native_tls_crate::Certificate,$/;"	m	struct:Certificate
native_tls_conn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^mod native_tls_conn {$/;"	n
ndays	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn ndays(&self) -> u32 {$/;"	P	implementation:YearFlags
ne_timestamp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^fn ne_timestamp<T: fmt::Display>(ts: T) -> SerdeError<T, u8> {$/;"	f
need_quotes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^fn need_quotes(string: &str) -> bool {$/;"	f	function:escape_str
need_quotes_spaces	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn need_quotes_spaces(string: &str) -> bool {$/;"	f	function:escape_str::need_quotes
needs_deserialize_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn needs_deserialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
needs_more_vals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn needs_more_vals(&self, o: &Arg) -> bool {$/;"	P	implementation:ArgMatcher
needs_options_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^    fn needs_options_tag(&self) -> bool {$/;"	P	implementation:Usage
needs_serialize_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn needs_serialize_bound(field: &attr::Field, variant: Option<&attr::Variant>) -> bool {$/;"	f
neg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn neg(self) -> Duration {$/;"	P	implementation:Duration
neg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn neg(mut self) -> BigNum {$/;"	P	implementation:BigNum
neg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn neg(self) -> BigNum {$/;"	P	implementation:BigNum
neg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn neg(self) -> BigNum {$/;"	P	implementation:BigNumRef
neg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn neg(self) -> Duration {$/;"	P	implementation:Duration
never	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    never: !,$/;"	m	struct:NeverDeserializer
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        fn new(capture: Capture) -> Self {$/;"	P	implementation:capture::LazilyResolvedCapture
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^    pub fn new(head: &'a (dyn StdError + 'static)) -> Self {$/;"	P	implementation:Chain
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^    fn new() -> Self {$/;"	P	implementation:Buf
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub fn new<E>(error: E) -> Self$/;"	P	implementation:Error
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^    pub fn new(self, error: Box<dyn StdError + Send + Sync>) -> Error {$/;"	P	implementation:Boxed
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^    pub fn new<E>(self, error: E) -> Error$/;"	P	implementation:Trait
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/kind.rs	/^    pub fn new<M>(self, message: M) -> Error$/;"	P	implementation:Adhoc
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn new(ptr: &'a T) -> Self {$/;"	f
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn new(ptr: &'a mut T) -> Self {$/;"	f
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub fn new(ptr: Box<T>) -> Self {$/;"	f
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    pub fn new(date: Option<NaiveDate>, time: Option<NaiveTime>, items: I) -> DelayedFormat<I> {$/;"	P	implementation:DelayedFormat
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn new() -> Parsed {$/;"	P	implementation:Parsed
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    pub fn new(s: &'a str) -> StrftimeItems<'a> {$/;"	P	implementation:StrftimeItems
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn new(date: NaiveDate, time: NaiveTime) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn new(month: u32, day: u32, YearFlags(flags): YearFlags) -> Mdf {$/;"	P	implementation:Mdf
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn new(ordinal: u32, YearFlags(flags): YearFlags) -> Of {$/;"	P	implementation:Of
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn new<S: Into<&'help str>>(n: S) -> Self {$/;"	P	implementation:Arg
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn new<S: Into<&'help str>>(n: S) -> Self {$/;"	P	implementation:ArgGroup
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn new<S: Into<String>>(name: S) -> Self {$/;"	P	implementation:App
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/possible_value.rs	/^    pub fn new(name: &'help str) -> Self {$/;"	P	implementation:PossibleValue
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn new(usage: &'help str) -> Self {$/;"	P	implementation:UsageParser
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn new() -> Option<Self> {$/;"	P	implementation:Backtrace
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn new(kind: ErrorKind) -> Self {$/;"	P	implementation:Error
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    pub(crate) fn new(use_stderr: bool, color_when: ColorChoice) -> Self {$/;"	P	implementation:Colorizer
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    pub(crate) fn new($/;"	P	implementation:Help
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^    pub(crate) fn new(cmd: &'cmd Command<'help>) -> Self {$/;"	P	implementation:Usage
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn new(_cmd: &Command) -> Self {$/;"	P	implementation:ArgMatcher
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:MatchedArg
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    pub(crate) fn new(cmd: &'cmd mut Command<'help>) -> Self {$/;"	P	implementation:Parser
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn new() -> Self {$/;"	P	implementation:Conflicts
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    pub(crate) fn new(p: &'parser mut Parser<'help, 'cmd>) -> Self {$/;"	P	implementation:Validator
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/fnv.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:FnvHasher
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/graph.rs	/^    fn new(id: T) -> Self {$/;"	P	implementation:Child
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub fn new() -> CopyOptions {$/;"	P	implementation:CopyOptions
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub fn new() -> DirOptions {$/;"	P	implementation:DirOptions
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/error.rs	/^    pub fn new(kind: ErrorKind, message: &str) -> Error {$/;"	P	implementation:Error
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^    pub fn new() -> CopyOptions {$/;"	P	implementation:CopyOptions
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn new() -> Result<Asn1Time, ErrorStack> {$/;"	P	implementation:Asn1Time
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^    pub fn new() -> Result<MemBio, ErrorStack> {$/;"	P	implementation:MemBio
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bio.rs	/^    pub fn new(buf: &'a [u8]) -> Result<MemBioSlice<'a>, ErrorStack> {$/;"	P	implementation:MemBioSlice
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn new() -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn new() -> Result<BigNumContext, ErrorStack> {$/;"	P	implementation:BigNumContext
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/conf.rs	/^    pub fn new(method: ConfMethod) -> Result<Conf, ErrorStack> {$/;"	P	implementation:Conf
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^    pub fn new<T>(key: &'a PKeyRef<T>) -> Result<Deriver<'a>, ErrorStack>$/;"	P	implementation:Deriver
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn new(group: &EcGroupRef) -> Result<EcPoint, ErrorStack> {$/;"	P	implementation:EcPoint
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn new<T>(pkey: &'a PKeyRef<T>) -> Result<Decrypter<'a>, ErrorStack>$/;"	P	implementation:Decrypter
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn new<T>(pkey: &'a PKeyRef<T>) -> Result<Encrypter<'a>, ErrorStack>$/;"	P	implementation:Encrypter
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    pub fn new<T>($/;"	P	implementation:Open
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    pub fn new<T>(cipher: Cipher, pub_keys: &[PKey<T>]) -> Result<Seal, ErrorStack>$/;"	P	implementation:Seal
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn new(ty: MessageDigest) -> Result<Hasher, ErrorStack> {$/;"	P	implementation:Hasher
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn new() -> Result<OcspRequest, ErrorStack> {$/;"	P	implementation:OcspRequest
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn new(n: BigNum, e: BigNum, d: BigNum) -> Result<RsaPrivateKeyBuilder, ErrorStack> {$/;"	P	implementation:RsaPrivateKeyBuilder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn new<T>(type_: MessageDigest, pkey: &'a PKeyRef<T>) -> Result<Signer<'a>, ErrorStack>$/;"	P	implementation:Signer
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn new<T>(type_: MessageDigest, pkey: &'a PKeyRef<T>) -> Result<Verifier<'a>, ErrorStack/;"	P	implementation:Verifier
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^    fn new<S: Read + Write>() -> Result<BioMethod, ErrorStack> {$/;"	P	implementation:BioMethod
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^pub fn new<S: Read + Write>(stream: S) -> Result<(*mut BIO, BioMethod), ErrorStack> {$/;"	f
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn new(ctx: &SslContextRef) -> Result<Ssl, ErrorStack> {$/;"	P	implementation:Ssl
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn new(method: SslMethod) -> Result<SslContextBuilder, ErrorStack> {$/;"	P	implementation:SslContextBuilder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn new(ssl: Ssl, stream: S) -> Result<Self, ErrorStack> {$/;"	P	implementation:SslStream
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn new(ssl: Ssl, stream: S) -> Self {$/;"	f
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        pub fn new() -> Self {$/;"	P	implementation:stateless::MemoryStream
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    pub fn new() -> Result<Stack<T>, ErrorStack> {$/;"	P	implementation:Stack
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn new($/;"	P	implementation:Crypter
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^    pub fn new(callback: F) -> Self {$/;"	P	implementation:CallbackState
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn new() -> AuthorityKeyIdentifier {$/;"	P	implementation:AuthorityKeyIdentifier
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn new() -> BasicConstraints {$/;"	P	implementation:BasicConstraints
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn new() -> ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn new() -> KeyUsage {$/;"	P	implementation:KeyUsage
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn new() -> SubjectAlternativeName {$/;"	P	implementation:SubjectAlternativeName
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn new() -> SubjectKeyIdentifier {$/;"	P	implementation:SubjectKeyIdentifier
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn new($/;"	P	implementation:X509Extension
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn new() -> Result<X509Builder, ErrorStack> {$/;"	P	implementation:X509Builder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn new() -> Result<X509NameBuilder, ErrorStack> {$/;"	P	implementation:X509NameBuilder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn new() -> Result<X509ReqBuilder, ErrorStack> {$/;"	P	implementation:X509ReqBuilder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn new() -> Result<X509StoreContext, ErrorStack> {$/;"	P	implementation:X509StoreContext
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^    pub fn new() -> Result<X509StoreBuilder, ErrorStack> {$/;"	P	implementation:X509StoreBuilder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    fn new(iter: I, writer: W) -> Self {$/;"	f
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn new() -> Self {$/;"	P	implementation:CodeDelims
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Allocations
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn new(text: &'input str) -> Self {$/;"	P	implementation:Parser
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    pub(crate) fn new(bytes: &[u8]) -> LineStart {$/;"	P	implementation:LineStart
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    fn new(i: usize) -> Self {$/;"	P	implementation:TreeIndex
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn new() -> Client {$/;"	P	implementation:Client
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn new() -> ClientBuilder {$/;"	P	implementation:ClientBuilder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn new(value: Body, body_length: Option<u64>) -> Part {$/;"	P	implementation:Part
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn new() -> Form {$/;"	P	implementation:Form
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:FormParts
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:PartMetadata
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn new(method: Method, url: Url) -> Self {$/;"	P	implementation:Request
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub(super) fn new(client: Client, request: crate::Result<Request>) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub(super) fn new($/;"	P	implementation:Response
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    pub fn new<R: Read + Send + 'static>(reader: R) -> Body {$/;"	P	implementation:Body
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    fn new(builder: ClientBuilder) -> crate::Result<ClientHandle> {$/;"	P	implementation:ClientHandle
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn new() -> Client {$/;"	P	implementation:Client
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn new() -> ClientBuilder {$/;"	P	implementation:ClientBuilder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn new(form: Form) -> Reader {$/;"	P	implementation:Reader
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn new(value: Body) -> Part {$/;"	P	implementation:Part
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn new() -> Form {$/;"	P	implementation:Form
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn new(method: Method, url: Url) -> Self {$/;"	P	implementation:Request
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub(crate) fn new(client: Client, request: crate::Result<Request>) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub(crate) fn new($/;"	P	implementation:Response
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn new(dns_resolver: Resolver, overrides: HashMap<String, SocketAddr>) -> Self {$/;"	P	implementation:DnsResolverWithOverrides
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(crate) fn new<T>($/;"	P	implementation:Connector
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^    pub(crate) fn new() -> io::Result<Self> {$/;"	P	implementation:TrustDnsResolver
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub(crate) fn new<E>(kind: Kind, source: Option<E>) -> Error$/;"	P	implementation:Error
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn new() -> Option<Self> {$/;"	P	implementation:NoProxy
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn new(intercept: Intercept) -> Proxy {$/;"	P	implementation:Proxy
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Client
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn new() -> Self {$/;"	P	implementation:ClientBuilder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    fn new(value: Body) -> Part {$/;"	P	implementation:Part
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub fn new() -> Form {$/;"	P	implementation:Form
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:FormParts
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub(crate) fn new() -> Self {$/;"	P	implementation:PartMetadata
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn new(method: Method, url: Url) -> Self {$/;"	P	implementation:Request
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub(super) fn new(client: Client, request: crate::Result<Request>) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    pub(super) fn new(res: http::Response<web_sys::Response>, url: Url) -> Response {$/;"	P	implementation:Response
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/format.rs	/^    pub fn new(bytes: &'a mut [u8]) -> Self {$/;"	P	implementation:Buf
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn new() -> Self {$/;"	P	implementation:ArrayVisitor
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn new(expecting: &'static str) -> Self {$/;"	P	implementation:FromStrVisitor
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub fn new(iter: I) -> Self {$/;"	f
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub fn new(map: A) -> Self {$/;"	P	implementation:MapAccessDeserializer
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub fn new(seq: A) -> Self {$/;"	P	implementation:SeqAccessDeserializer
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub fn new(value: &'a [u8]) -> Self {$/;"	P	implementation:BytesDeserializer
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub fn new(value: &'de [u8]) -> Self {$/;"	P	implementation:BorrowedBytesDeserializer
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub fn new(value: &'de str) -> BorrowedStrDeserializer<'de, E> {$/;"	P	implementation:BorrowedStrDeserializer
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn new() -> Self {$/;"	P	implementation:content::ContentVisitor
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn new(map: &'a [(Content<'de>, Content<'de>)]) -> Self {$/;"	f	module:content
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn new(map: Vec<(Content<'de>, Content<'de>)>) -> Self {$/;"	f	module:content
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn new(name: &'static str) -> Self {$/;"	P	implementation:content::TagOrContentVisitor
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn new(slice: &'a [Content<'de>]) -> Self {$/;"	f	module:content
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn new(vec: Vec<Content<'de>>) -> Self {$/;"	f	module:content
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub fn new(content: &'a Content<'de>) -> Self {$/;"	P	implementation:content::ContentRefDeserializer
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub fn new(content: Content<'de>) -> Self {$/;"	P	implementation:content::ContentDeserializer
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub fn new(name: &'static str, expecting: &'static str) -> Self {$/;"	P	implementation:content::TaggedContentVisitor
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	P	implementation:content::InternallyTaggedUnitVisitor
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub fn new(type_name: &'a str, variant_name: &'a str) -> Self {$/;"	P	implementation:content::UntaggedUnitVisitor
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub fn new(variant: Content<'de>, value: Option<Content<'de>>) -> EnumDeserializer<'de, /;"	f	module:content
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn new($/;"	P	implementation:FlatMapAccess
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn new($/;"	P	implementation:FlatStructAccess
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        pub fn new() -> Self {$/;"	P	implementation:content::ContentSerializer
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	P	implementation:content::SerializeStructVariantAsMapValue
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        pub fn new(map: M, name: &'static str, len: usize) -> Self {$/;"	P	implementation:content::SerializeTupleVariantAsMapValue
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn new(map: &'a mut M, name: &'static str) -> FlatMapSerializeStructVariantAsMapValue<'a, M>/;"	f
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    fn new(cont: &Container) -> Self {$/;"	P	implementation:Parameters
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ctxt.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Ctxt
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    fn new(cont: &Container) -> Self {$/;"	P	implementation:Parameters
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^    pub fn new() -> io::Result<TempDir> {$/;"	P	implementation:TempDir
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn new() -> io::Result<NamedTempFile> {$/;"	P	implementation:NamedTempFile
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    pub fn new() -> Self {$/;"	P	implementation:Builder
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    pub fn new(max_size: usize) -> SpooledTempFile {$/;"	P	implementation:SpooledTempFile
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn new(sec: i64, nsec: i32) -> Timespec {$/;"	P	implementation:Timespec
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    pub fn new(writer: &'a mut dyn fmt::Write) -> YamlEmitter {$/;"	P	implementation:escape_str::YamlEmitter
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    pub fn new(src: T) -> Parser<T> {$/;"	P	implementation:Parser
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn new(index: usize, line: usize, col: usize) -> Marker {$/;"	P	implementation:Marker
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn new(mark: Marker) -> SimpleKey {$/;"	P	implementation:SimpleKey
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn new(loc: Marker, info: &str) -> ScanError {$/;"	P	implementation:ScanError
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn new(rdr: T) -> Scanner<T> {$/;"	P	implementation:Scanner
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^    pub fn new(inner: R, checksum: u32) -> Crc32Reader<R> {$/;"	P	implementation:Crc32Reader
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn new(mut reader: R) -> ZipResult<ZipArchive<R>> {$/;"	P	implementation:ZipArchive
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn new(inner: W) -> ZipWriter<W> {$/;"	P	implementation:ZipWriter
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    fn new() -> ZipCryptoKeys {$/;"	P	implementation:ZipCryptoKeys
new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    pub fn new(file: R, password: &[u8]) -> ZipCryptoReader<R> {$/;"	P	implementation:ZipCryptoReader
new	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    fn new() -> Page {$/;"	P	implementation:Page
new	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    pub fn new() -> Result<Site> {$/;"	P	implementation:Site
new_append	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn new_append(mut readwriter: A) -> ZipResult<ZipWriter<A>> {$/;"	P	implementation:ZipWriter
new_decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/aes.rs	/^    pub fn new_decrypt(key: &[u8]) -> Result<AesKey, KeyError> {$/;"	P	implementation:AesKey
new_default_tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(crate) fn new_default_tls<T>($/;"	P	implementation:Connector
new_encrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/aes.rs	/^    pub fn new_encrypt(key: &[u8]) -> Result<AesKey, KeyError> {$/;"	P	implementation:AesKey
new_err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub(super) fn new_err(err: crate::Error) -> Pending {$/;"	P	implementation:Pending
new_ex_index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn new_ex_index<T>() -> Result<Index<Ssl, T>, ErrorStack>$/;"	P	implementation:Ssl
new_ex_index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn new_ex_index<T>() -> Result<Index<SslContext, T>, ErrorStack>$/;"	P	implementation:SslContext
new_ext	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn new_ext(text: &'input str, options: Options) -> Self {$/;"	P	implementation:Parser
new_gai	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(crate) fn new_gai() -> Self {$/;"	P	implementation:HttpConnector
new_gai_with_overrides	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(crate) fn new_gai_with_overrides(overrides: HashMap<String, SocketAddr>) -> Self {$/;"	P	implementation:HttpConnector
new_in	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^    pub fn new_in<P: AsRef<Path>>(dir: P) -> io::Result<TempDir> {$/;"	P	implementation:TempDir
new_in	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn new_in<P: AsRef<Path>>(dir: P) -> io::Result<NamedTempFile> {$/;"	P	implementation:NamedTempFile
new_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^        fn new_inner<'help>(name: String) -> App<'help> {$/;"	f	method:App::new
new_intern	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn new_intern<T>($/;"	P	implementation:Signer
new_intern	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn new_intern<T>($/;"	P	implementation:Verifier
new_nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn new_nid($/;"	P	implementation:X509Extension
new_resolver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^async fn new_resolver() -> Result<SharedResolver, BoxError> {$/;"	f
new_rustls_tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(crate) fn new_rustls_tls<T>($/;"	P	implementation:Connector
new_secure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn new_secure() -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNum
new_secure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn new_secure() -> Result<BigNumContext, ErrorStack> {$/;"	P	implementation:BigNumContext
new_session_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn new_session_callback() {$/;"	f
new_session_callback_swapped_ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn new_session_callback_swapped_ctx() {$/;"	f
new_trust_dns	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(crate) fn new_trust_dns() -> crate::Result<HttpConnector> {$/;"	P	implementation:HttpConnector
new_trust_dns_with_overrides	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(crate) fn new_trust_dns_with_overrides($/;"	P	implementation:HttpConnector
new_val_group	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn new_val_group(&mut self, arg: &Id) {$/;"	P	implementation:ArgMatcher
new_val_group	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn new_val_group(&mut self) {$/;"	P	implementation:MatchedArg
new_with_broken_link_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn new_with_broken_link_callback($/;"	P	implementation:Parser
new_with_locale	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    pub fn new_with_locale($/;"	P	implementation:DelayedFormat
new_with_locale	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    pub fn new_with_locale(s: &'a str, locale: Locale) -> StrftimeItems<'a> {$/;"	P	implementation:StrftimeItems
new_with_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    pub fn new_with_offset<Off>($/;"	P	implementation:DelayedFormat
new_with_offset_and_locale	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    pub fn new_with_offset_and_locale<Off>($/;"	P	implementation:DelayedFormat
new_without_digest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn new_without_digest<T>(pkey: &'a PKeyRef<T>) -> Result<Signer<'a>, ErrorStack>$/;"	P	implementation:Signer
new_without_digest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn new_without_digest<T>(pkey: &'a PKeyRef<T>) -> Result<Verifier<'a>, ErrorStack>$/;"	P	implementation:Verifier
newtype_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn newtype_variant<T>(self) -> Result<T, Self::Error>$/;"	P	interface:VariantAccess
newtype_variant_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, Self::Error>$/;"	P	interface:VariantAccess
newtype_variant_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        fn newtype_variant_seed<T>(mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:private
newtype_variant_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        fn newtype_variant_seed<T>(self, _seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:private
newtype_variant_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn newtype_variant_seed<T>(self, seed: T) -> Result<T::Value, E>$/;"	f	module:content
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Chain
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^                macro_rules! next {$/;"	M	method:StrftimeItems::next
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    fn next(&mut self) -> Option<Item<'a>> {$/;"	P	implementation:StrftimeItems
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:NaiveDateDaysIterator
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:NaiveDateWeeksIterator
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a OsStr> {$/;"	P	implementation:OsValues
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<&'a str> {$/;"	P	implementation:Values
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:GroupedValues
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn next(&mut self) -> Option<usize> {$/;"	P	implementation:Indices
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    pub(crate) fn next(&mut self) -> Option<(&OsStr, &[OsString])> {$/;"	P	implementation:Input
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn next(&mut self) -> Option<&'a T::Ref> {$/;"	P	implementation:Iter
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn next(&mut self) -> Option<&'a mut T::Ref> {$/;"	P	implementation:IterMut
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn next(&mut self) -> Option<T> {$/;"	P	implementation:IntoIter
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    fn next(&mut self) -> Option<&'a X509NameEntryRef> {$/;"	P	implementation:X509NameEntries
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn next(&mut self) -> Option<Event<'a>> {$/;"	P	implementation:Parser
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:OffsetIter
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub next: Option<TreeIndex>,$/;"	m	struct:Node
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn next(&mut self) -> Option<Self::Item> {$/;"	f	module:itertools
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^    fn next(&mut self) -> Option<Self::Item> {$/;"	P	implementation:SocketAddrs
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    next: &'a Url,$/;"	m	struct:Attempt
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    pub fn next(&mut self) -> ParseResult {$/;"	P	implementation:Parser
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn next(&mut self) -> Option<Token> {$/;"	P	implementation:Scanner
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    macro_rules! next {$/;"	M	module:test
next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn next(&mut self) -> Option<Yaml> {$/;"	P	implementation:YamlIter
next_back	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:Chain
next_back	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a OsStr> {$/;"	P	implementation:OsValues
next_back	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<&'a str> {$/;"	P	implementation:Values
next_back	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<Self::Item> {$/;"	P	implementation:GroupedValues
next_back	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn next_back(&mut self) -> Option<usize> {$/;"	P	implementation:Indices
next_back	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn next_back(&mut self) -> Option<&'a T::Ref> {$/;"	P	implementation:Iter
next_back	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn next_back(&mut self) -> Option<&'a mut T::Ref> {$/;"	P	implementation:IterMut
next_back	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn next_back(&mut self) -> Option<T> {$/;"	P	implementation:IntoIter
next_display_order	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn next_display_order(mut self, disp_ord: impl Into<Option<usize>>) -> Self {$/;"	P	implementation:App
next_element	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	P	interface:SeqAccess
next_element	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_element<T>(&mut self) -> Result<Option<T>, Self::Error>$/;"	f
next_element_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	P	interface:SeqAccess
next_element_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_element_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn next_element_seed<V>(&mut self, seed: V) -> Result<Option<V::Value>, Self::Error>$/;"	f
next_element_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn next_element_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f	module:content
next_entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	P	interface:MapAccess
next_entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_entry<K, V>(&mut self) -> Result<Option<(K, V)>, Self::Error>$/;"	f
next_entry_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	P	interface:MapAccess
next_entry_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_entry_seed<K, V>($/;"	f
next_entry_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn next_entry_seed<TK, TV>($/;"	f
next_help_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn next_help_heading<O>(mut self, heading: O) -> Self$/;"	P	implementation:App
next_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	P	interface:MapAccess
next_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_key<K>(&mut self) -> Result<Option<K>, Self::Error>$/;"	f
next_key_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	P	interface:MapAccess
next_key_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_key_seed<K>(&mut self, seed: K) -> Result<Option<K::Value>, Self::Error>$/;"	f
next_key_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_key_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f	module:content
next_key_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn next_key_seed<T>(&mut self, seed: T) -> Result<Option<T::Value>, Self::Error>$/;"	f
next_line_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn next_line_help(self, yes: bool) -> Self {$/;"	P	implementation:Arg
next_line_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn next_line_help(self, yes: bool) -> Self {$/;"	P	implementation:App
next_line_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    next_line_help: bool,$/;"	m	struct:Help
next_pair	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn next_pair(&mut self) -> Option<(First<I::Item>, Second<I::Item>)> {$/;"	f
next_reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn next_reader(&mut self) {$/;"	P	implementation:Reader
next_scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    macro_rules! next_scalar {$/;"	M	module:test
next_sibling	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn next_sibling(&mut self, cur_ix: TreeIndex) -> Option<TreeIndex> {$/;"	P	implementation:Tree
next_token	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn next_token(&mut self) -> Result<Option<Token>, ScanError> {$/;"	P	implementation:Scanner
next_update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub next_update: &'a Asn1GeneralizedTimeRef,$/;"	m	struct:OcspStatus
next_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	P	interface:MapAccess
next_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_value<V>(&mut self) -> Result<V, Self::Error>$/;"	f
next_value_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	P	interface:MapAccess
next_value_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn next_value_seed<V>(&mut self, seed: V) -> Result<V::Value, Self::Error>$/;"	f
next_value_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
next_value_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f	module:content
next_value_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn next_value_seed<T>(&mut self, seed: T) -> Result<T::Value, Self::Error>$/;"	f
nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn nid(&self) -> Nid {$/;"	P	implementation:Asn1ObjectRef
nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod nid;$/;"	n
nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn nid(&self) -> Nid {$/;"	P	implementation:Cipher
nid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    nid: Option<Nid>,$/;"	m	struct:X509NameEntries
nid_cert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    nid_cert: Nid,$/;"	m	struct:Pkcs12Builder
nid_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    nid_key: Nid,$/;"	m	struct:Pkcs12Builder
nisoweeks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn nisoweeks(&self) -> u32 {$/;"	P	implementation:YearFlags
nnmod	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn nnmod($/;"	P	implementation:BigNumRef
no_backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^fn no_backtrace(e: Ref<ErrorImpl>) -> Option<&Backtrace> {$/;"	f
no_binary_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn no_binary_name(self, yes: bool) -> Self {$/;"	P	implementation:App
no_brotli	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn no_brotli(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
no_brotli	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn no_brotli(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
no_deflate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn no_deflate(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
no_deflate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn no_deflate(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
no_dest_refdef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn no_dest_refdef() {$/;"	f	module:test
no_digits	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^    fn no_digits() {$/;"	f	module:tests
no_equals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn no_equals(cmd: &Command, arg: String, usage: String) -> Self {$/;"	P	implementation:Error
no_footnote_refs_without_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn no_footnote_refs_without_option() {$/;"	f	module:test
no_gzip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn no_gzip(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
no_gzip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn no_gzip(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
no_proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn no_proxy(mut self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
no_proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn no_proxy(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
no_proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    no_proxy: Option<NoProxy>,$/;"	m	struct:Proxy
no_trust_dns	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn no_trust_dns(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
no_trust_dns	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn no_trust_dns(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
no_version_overlap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn no_version_overlap() {$/;"	f
node	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    node: TreeIndex,$/;"	m	struct:LinkStackEl
node_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn node_size() {$/;"	f	module:test
nodelay	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    nodelay: bool,$/;"	m	struct:Config
nodelay	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    nodelay: bool,$/;"	m	struct:Connector
nodes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    nodes: Vec<Node<T>>,$/;"	m	struct:Tree
non_repudiation	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    non_repudiation: bool,$/;"	m	struct:KeyUsage
non_repudiation	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn non_repudiation(&mut self) -> &mut KeyUsage {$/;"	P	implementation:KeyUsage
nonascii	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn nonascii() {$/;"	f	module:test
none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    pub(crate) fn none(&mut self, msg: impl Into<String>) {$/;"	P	implementation:Colorizer
none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn none<T: Into<String> + AsRef<[u8]>>(&mut self, msg: T) -> io::Result<()> {$/;"	P	implementation:Help
none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    pub(super) fn none() -> Self {$/;"	P	implementation:Accepts
none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    pub fn none() -> Self {$/;"	P	implementation:Policy
none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: Symbol) -> Self {$/;"	P	implementation:Attr
none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: Symbol) -> Self {$/;"	P	implementation:BoolAttr
none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn none(cx: &'c Ctxt, name: Symbol) -> Self {$/;"	P	implementation:VecAttr
nonzero_integers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^macro_rules! nonzero_integers {$/;"	M
nop_reserve	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^fn nop_reserve<T>(_seq: T, _n: usize) {}$/;"	f
norm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn norm<Tz: TimeZone>(dt: &Option<DateTime<Tz>>) -> Option<(&DateTime<Tz>, &Tz::Offset)> {$/;"	f	function:test_decodable_json
norm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn norm<Tz: TimeZone>(dt: &Option<DateTime<Tz>>) -> Option<(&DateTime<Tz>, &Tz::Offset)> {$/;"	f	function:test_decodable_json_timestamps
normalize_empty_query	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn normalize_empty_query() {$/;"	f	module:tests
normalize_empty_query	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn normalize_empty_query() {$/;"	f	module:tests
not_after	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn not_after(&self) -> &Asn1TimeRef {$/;"	P	implementation:X509Ref
not_before	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn not_before(&self) -> &Asn1TimeRef {$/;"	P	implementation:X509Ref
not_supported	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/other.rs	/^fn not_supported<T>() -> io::Result<T> {$/;"	f
now	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    pub fn now() -> DateTime<Local> {$/;"	P	implementation:Local
now	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    pub fn now() -> DateTime<Utc> {$/;"	P	implementation:Utc
now	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub fn now() -> Timespec {$/;"	P	implementation:Timespec
now	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn now() -> PreciseTime {$/;"	P	implementation:PreciseTime
now	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn now() -> SteadyTime {$/;"	P	implementation:SteadyTime
now	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn now() -> Tm {$/;"	f
now	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            pub fn now() -> SteadyTime {$/;"	P	implementation:inner::mac::SteadyTime
now	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            pub fn now() -> SteadyTime {$/;"	P	implementation:inner::unix::SteadyTime
now	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub fn now() -> SteadyTime {$/;"	P	implementation:inner::SteadyTime
now_utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn now_utc() -> Tm {$/;"	f
ns_sgc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    ns_sgc: bool,$/;"	m	struct:ExtendedKeyUsage
ns_sgc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn ns_sgc(&mut self) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
nsec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub nsec: i32,$/;"	m	struct:Timespec
nsec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct Timespec { pub sec: i64, pub nsec: i32 }$/;"	m	struct:Timespec
nsec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^                type nsec = i64;$/;"	t	method:inner::unix::SteadyTime::add
nsec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^                type nsec = libc::c_long;$/;"	t	method:inner::unix::SteadyTime::add
null	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn null() -> MessageDigest {$/;"	P	implementation:MessageDigest
num	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! num {$/;"	M
num0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! num0 {$/;"	M
num_as_self	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! num_as_self {$/;"	M
num_bits	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn num_bits(&self) -> i32 {$/;"	P	implementation:BigNumRef
num_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn num_bytes(&self) -> i32 {$/;"	P	implementation:BigNumRef
num_days	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_days(&self) -> i64 {$/;"	P	implementation:Duration
num_days	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_days(&self) -> i64 {$/;"	P	implementation:Duration
num_days_from_ce	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn num_days_from_ce(&self) -> i32 {$/;"	P	interface:Datelike
num_days_from_ce	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn num_days_from_ce<Date: Datelike>(date: &Date) -> i32 {$/;"	f	function:test_num_days_from_ce_against_alternative_impl
num_days_from_monday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn num_days_from_monday(&self) -> u32 {$/;"	P	implementation:Weekday
num_days_from_sunday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn num_days_from_sunday(&self) -> u32 {$/;"	P	implementation:Weekday
num_hours	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_hours(&self) -> i64 {$/;"	P	implementation:Duration
num_hours	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_hours(&self) -> i64 {$/;"	P	implementation:Duration
num_microseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_microseconds(&self) -> Option<i64> {$/;"	P	implementation:Duration
num_microseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_microseconds(&self) -> Option<i64> {$/;"	P	implementation:Duration
num_milliseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_milliseconds(&self) -> i64 {$/;"	P	implementation:Duration
num_milliseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_milliseconds(&self) -> i64 {$/;"	P	implementation:Duration
num_minutes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_minutes(&self) -> i64 {$/;"	P	implementation:Duration
num_minutes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_minutes(&self) -> i64 {$/;"	P	implementation:Duration
num_nanoseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_nanoseconds(&self) -> Option<i64> {$/;"	P	implementation:Duration
num_nanoseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_nanoseconds(&self) -> Option<i64> {$/;"	P	implementation:Duration
num_seconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_seconds(&self) -> i64 {$/;"	P	implementation:Duration
num_seconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_seconds(&self) -> i64 {$/;"	P	implementation:Duration
num_seconds_from_midnight	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn num_seconds_from_midnight(&self) -> u32 {$/;"	P	interface:Timelike
num_seconds_from_midnight	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn num_seconds_from_midnight(&self) -> u32 {$/;"	P	implementation:NaiveTime
num_self	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! num_self {$/;"	M
num_vals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn num_vals(&self) -> usize {$/;"	P	implementation:MatchedArg
num_vals_last_group	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn num_vals_last_group(&self) -> usize {$/;"	P	implementation:MatchedArg
num_weeks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn num_weeks(&self) -> i64 {$/;"	P	implementation:Duration
num_weeks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn num_weeks(&self) -> i64 {$/;"	P	implementation:Duration
number	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^    number: Option<usize>,$/;"	m	struct:Indented
number	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn number(s: &str, min: usize, max: usize) -> ParseResult<(&str, i64)> {$/;"	f
number	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/version.rs	/^pub fn number() -> i64 {$/;"	f
number_from_monday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn number_from_monday(&self) -> u32 {$/;"	P	implementation:Weekday
number_from_month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn number_from_month(&self) -> u32 {$/;"	P	implementation:Month
number_from_sunday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn number_from_sunday(&self) -> u32 {$/;"	P	implementation:Weekday
number_of_disks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub number_of_disks: u32,$/;"	m	struct:Zip64CentralDirectoryEndLocator
number_of_files	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub number_of_files: u16,$/;"	m	struct:CentralDirectoryEnd
number_of_files	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub number_of_files: u64,$/;"	m	struct:Zip64CentralDirectoryEnd
number_of_files_on_this_disk	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub number_of_files_on_this_disk: u16,$/;"	m	struct:CentralDirectoryEnd
number_of_files_on_this_disk	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub number_of_files_on_this_disk: u64,$/;"	m	struct:Zip64CentralDirectoryEnd
number_of_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn number_of_values(mut self, qty: usize) -> Self {$/;"	P	implementation:Arg
numbers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    numbers: HashMap<CowStr<'a>, usize>,$/;"	m	struct:HtmlWriter
nums	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! nums {$/;"	M
object	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn object(&self) -> &Asn1ObjectRef {$/;"	P	implementation:X509AlgorithmRef
object	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn object(&self) -> &Asn1ObjectRef {$/;"	P	implementation:X509NameEntryRef
object_backtrace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    object_backtrace: unsafe fn(Ref<ErrorImpl>) -> Option<&Backtrace>,$/;"	m	struct:ErrorVTable
object_boxed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    object_boxed: unsafe fn(Own<ErrorImpl>) -> Box<dyn StdError + Send + Sync + 'static>,$/;"	m	struct:ErrorVTable
object_boxed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn object_boxed<E>(e: Own<ErrorImpl>) -> Box<dyn StdError + Send + Sync + 'static>$/;"	f
object_downcast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    object_downcast: unsafe fn(Ref<ErrorImpl>, TypeId) -> Option<Ref<()>>,$/;"	m	struct:ErrorVTable
object_downcast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn object_downcast<E>(e: Ref<ErrorImpl>, target: TypeId) -> Option<Ref<()>>$/;"	f
object_downcast_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    object_downcast_mut: unsafe fn(Mut<ErrorImpl>, TypeId) -> Option<Mut<()>>,$/;"	m	struct:ErrorVTable
object_downcast_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn object_downcast_mut<E>(e: Mut<ErrorImpl>, target: TypeId) -> Option<Mut<()>>$/;"	f
object_drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    object_drop: unsafe fn(Own<ErrorImpl>),$/;"	m	struct:ErrorVTable
object_drop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn object_drop<E>(e: Own<ErrorImpl>) {$/;"	f
object_drop_front	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn object_drop_front<E>(e: Own<ErrorImpl>, target: TypeId) {$/;"	f
object_drop_rest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    object_drop_rest: unsafe fn(Own<ErrorImpl>, TypeId),$/;"	m	struct:ErrorVTable
object_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn object_from_str() {$/;"	f	module:tests
object_from_str_with_invalid_input	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn object_from_str_with_invalid_input() {$/;"	f	module:tests
object_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    object_mut: unsafe fn(Mut<ErrorImpl>) -> &mut (dyn StdError + Send + Sync + 'static),$/;"	m	struct:ErrorVTable
object_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn object_mut<E>(e: Mut<ErrorImpl>) -> &mut (dyn StdError + Send + Sync + 'static)$/;"	f
object_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    object_ref: unsafe fn(Ref<ErrorImpl>) -> Ref<dyn StdError + Send + Sync + 'static>,$/;"	m	struct:ErrorVTable
object_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn object_ref<E>(e: Ref<ErrorImpl>) -> Ref<dyn StdError + Send + Sync + 'static>$/;"	f
object_to_slice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn object_to_slice() {$/;"	f	module:tests
objects	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^    pub fn objects(&self) -> &StackRef<X509Object> {$/;"	P	implementation:X509StoreRef
occurrences_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn occurrences_of<T: Key>(&self, id: T) -> u64 {$/;"	P	implementation:ArgMatches
occurs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    occurs: u64,$/;"	m	struct:MatchedArg
ocsp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod ocsp;$/;"	n
ocsp_responders	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn ocsp_responders(&self) -> Result<Stack<OpensslString>, ErrorStack> {$/;"	P	implementation:X509Ref
ocsp_status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn ocsp_status(&self) -> Option<&[u8]> {$/;"	P	implementation:SslRef
of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn of(&self) -> Of {$/;"	P	implementation:NaiveDate
off	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    off: Option<(String, FixedOffset)>,$/;"	m	struct:DelayedFormat
offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    offset: Tz::Offset,$/;"	m	struct:Date
offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn offset(&self) -> &Tz::Offset {$/;"	P	implementation:Date
offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    offset: Tz::Offset,$/;"	m	struct:DateTime
offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn offset(&self) -> &Tz::Offset {$/;"	P	implementation:DateTime
offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub offset: Option<i32>,$/;"	m	struct:Parsed
offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod offset;$/;"	n
offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/format.rs	/^    offset: usize,$/;"	m	struct:Buf
offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    offset: u64,$/;"	m	struct:ZipArchive
offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn offset(&self) -> u64 {$/;"	P	implementation:ZipArchive
offset_from_local_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn offset_from_local_date(&self, _local: &NaiveDate) -> LocalResult<FixedOffset> {$/;"	P	implementation:FixedOffset
offset_from_local_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn offset_from_local_date(&self, local: &NaiveDate) -> LocalResult<FixedOffset> {$/;"	P	implementation:Local
offset_from_local_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn offset_from_local_date(&self, local: &NaiveDate) -> LocalResult<Self::Offset>;$/;"	P	interface:TimeZone
offset_from_local_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn offset_from_local_date(&self, _local: &NaiveDate) -> LocalResult<Utc> {$/;"	P	implementation:Utc
offset_from_local_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn offset_from_local_datetime(&self, _local: &NaiveDateTime) -> LocalResult<FixedOffset> {$/;"	P	implementation:FixedOffset
offset_from_local_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn offset_from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<FixedOffset> {$/;"	P	implementation:Local
offset_from_local_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn offset_from_local_datetime(&self, local: &NaiveDateTime) -> LocalResult<Self::Offset>;$/;"	P	interface:TimeZone
offset_from_local_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn offset_from_local_datetime(&self, _local: &NaiveDateTime) -> LocalResult<Utc> {$/;"	P	implementation:Utc
offset_from_utc_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn offset_from_utc_date(&self, _utc: &NaiveDate) -> FixedOffset {$/;"	P	implementation:FixedOffset
offset_from_utc_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn offset_from_utc_date(&self, utc: &NaiveDate) -> FixedOffset {$/;"	P	implementation:Local
offset_from_utc_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn offset_from_utc_date(&self, utc: &NaiveDate) -> Self::Offset;$/;"	P	interface:TimeZone
offset_from_utc_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn offset_from_utc_date(&self, _utc: &NaiveDate) -> Utc {$/;"	P	implementation:Utc
offset_from_utc_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn offset_from_utc_datetime(&self, _utc: &NaiveDateTime) -> FixedOffset {$/;"	P	implementation:FixedOffset
offset_from_utc_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn offset_from_utc_datetime(&self, utc: &NaiveDateTime) -> FixedOffset {$/;"	P	implementation:Local
offset_from_utc_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn offset_from_utc_datetime(&self, utc: &NaiveDateTime) -> Self::Offset;$/;"	P	interface:TimeZone
offset_from_utc_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    fn offset_from_utc_datetime(&self, _utc: &NaiveDateTime) -> Utc {$/;"	P	implementation:Utc
offset_iter_issue_378	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn offset_iter_issue_378() {$/;"	f	module:test
offset_iter_issue_404	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn offset_iter_issue_404() {$/;"	f	module:test
ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^    ok: PhantomData<Ok>,$/;"	m	struct:Impossible
old	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        old: TIME_ZONE_INFORMATION,$/;"	m	struct:inner::TzReset
oldtime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod oldtime;$/;"	n
on_event	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn on_event(&mut self, ev: Event);$/;"	P	interface:EventReceiver
on_event	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn on_event(&mut self, ev: Event, _mark: Marker) {$/;"	P	implementation:R
on_event	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn on_event(&mut self, ev: Event, _mark: Marker);$/;"	P	interface:MarkedEventReceiver
on_event	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn on_event(&mut self, ev: Event, _: Marker) {$/;"	P	implementation:YamlLoader
one	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            one: Option<i64>,$/;"	m	struct:serde::test_serde_bincode_optional::Test
one_digit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^    fn one_digit() {$/;"	f	module:tests
only_right_bytes_matched	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^        fn only_right_bytes_matched() {$/;"	f	module:simd::html_scan_tests
openssl_cipher_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn openssl_cipher_name() {$/;"	f
option_details_for_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/bash.rs	/^fn option_details_for_path(cmd: &Command, path: &str) -> String {$/;"	f
option_display2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn option_display2() {$/;"	f	module:test
option_display3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn option_display3() {$/;"	f	module:test
option_display_multiple_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn option_display_multiple_aliases() {$/;"	f	module:test
option_display_multiple_occurrences	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn option_display_multiple_occurrences() {$/;"	f	module:test
option_display_multiple_short_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn option_display_multiple_short_aliases() {$/;"	f	module:test
option_display_multiple_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn option_display_multiple_values() {$/;"	f	module:test
option_display_single_alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn option_display_single_alias() {$/;"	f	module:test
option_display_single_short_alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn option_display_single_short_alias() {$/;"	f	module:test
options	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn options(&self) -> SslOptions {$/;"	P	implementation:SslContextBuilder
options	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    options: Options,$/;"	m	struct:FirstPass
options	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    options: Options,$/;"	m	struct:Parser
order	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn order($/;"	P	implementation:EcGroupRef
order_bits	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn order_bits(&self) -> u32 {$/;"	P	implementation:EcGroupRef
ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn ordinal(&self) -> u32 {$/;"	P	implementation:Date
ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn ordinal(&self) -> u32 {$/;"	P	implementation:DateTime
ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub ordinal: Option<u32>,$/;"	m	struct:Parsed
ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn ordinal(&self) -> u32;$/;"	P	interface:Datelike
ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn ordinal(&self) -> u32 {$/;"	P	implementation:NaiveDate
ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn ordinal(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn ordinal(&self) -> u32 {$/;"	P	implementation:Of
ordinal0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn ordinal0(&self) -> u32 {$/;"	P	implementation:Date
ordinal0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn ordinal0(&self) -> u32 {$/;"	P	implementation:DateTime
ordinal0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn ordinal0(&self) -> u32;$/;"	P	interface:Datelike
ordinal0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn ordinal0(&self) -> u32 {$/;"	P	implementation:NaiveDate
ordinal0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn ordinal0(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
orig_val	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^        orig_val: Option<String>,$/;"	m	struct:tests::EnvGuard
original	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    original: Cert,$/;"	m	struct:Certificate
original	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub original: &'a syn::DeriveInput,$/;"	m	struct:Container
original	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub original: &'a syn::Field,$/;"	m	struct:Field
original	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub original: &'a syn::Variant,$/;"	m	struct:Variant
os_values_exact_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn os_values_exact_size() {$/;"	f	module:tests
other	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    other: Vec<String>,$/;"	m	struct:ExtendedKeyUsage
other	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn other(&mut self, other: &str) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
other	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    other: bool,$/;"	m	struct:Variant
other	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn other(&self) -> bool {$/;"	P	implementation:Variant
other_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn other_name(&mut self, other_name: &str) -> &mut SubjectAlternativeName {$/;"	P	implementation:SubjectAlternativeName
outgoing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        outgoing: Vec<u8>,$/;"	m	struct:stateless::MemoryStream
output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/lib.rs	/^mod output;$/;"	n
output_filename	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^    fn output_filename($/;"	f	module:capture
output_path	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub output_path: String,$/;"	m	struct:Page
overflow_by_addition	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    fn overflow_by_addition() {$/;"	f	module:test
overflow_list	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    fn overflow_list() {$/;"	f	module:test
overflowing_add_signed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn overflowing_add_signed(&self, mut rhs: OldDuration) -> (NaiveTime, i64) {$/;"	P	implementation:NaiveTime
overflowing_sub_signed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn overflowing_sub_signed(&self, rhs: OldDuration) -> (NaiveTime, i64) {$/;"	P	implementation:NaiveTime
override_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn override_help<S: Into<&'help str>>(mut self, help: S) -> Self {$/;"	P	implementation:App
override_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn override_usage<S: Into<&'help str>>(mut self, usage: S) -> Self {$/;"	P	implementation:App
overrides	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    overrides: Arc<HashMap<String, SocketAddr>>,$/;"	m	struct:DnsResolverWithOverrides
overrides_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn overrides_with<T: Key>(mut self, arg_id: T) -> Self {$/;"	P	implementation:Arg
overrides_with_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn overrides_with_all<T: Key>(mut self, names: &[T]) -> Self {$/;"	P	implementation:Arg
overwrite	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub overwrite: bool,$/;"	m	struct:CopyOptions
overwrite	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^    pub overwrite: bool,$/;"	m	struct:CopyOptions
p	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    p: &'parser mut Parser<'help, 'cmd>,$/;"	m	struct:Validator
p	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    pub fn p(&self) -> &BigNumRef {$/;"	f
p	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn p(&self) -> Option<&BigNumRef> {$/;"	f
pad	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn pad(&mut self, padding: bool) {$/;"	P	implementation:Crypter
page_creation	/mnt/c/Users/SamanthaC/rust/md_puppy/src/main.rs	/^mod page_creation;$/;"	n
pages	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    pub pages: Vec<Page>,$/;"	m	struct:Site
panic	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^    pub panic: Option<Box<dyn Any + Send>>,$/;"	m	struct:StreamState
panic	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/util.rs	/^    panic: Option<Box<dyn Any + Send + 'static>>,$/;"	m	struct:CallbackState
param_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn param_mut(&mut self) -> &mut X509VerifyParamRef {$/;"	P	implementation:SslRef
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^mod parse;$/;"	n
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^pub fn parse<'a, I, B>(parsed: &mut Parsed, s: &str, items: I) -> ParseResult<()>$/;"	f
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_datetime
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_datetime_with_timezone
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_naive_date
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_naive_datetime_with_offset
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        macro_rules! parse {$/;"	M	function:tests::test_parsed_to_naive_time
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    pub(crate) fn parse(mut self) -> Arg<'help> {$/;"	P	implementation:UsageParser
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn parse() -> Self {$/;"	P	implementation:Box
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn parse() -> Self {$/;"	P	interface:Parser
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/lib.rs	/^mod parse;$/;"	n
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    fn parse() {$/;"	f	module:test
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    pub fn parse(&self, pass: &str) -> Result<ParsedPkcs12, ErrorStack> {$/;"	P	implementation:Pkcs12Ref
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^mod parse;$/;"	n
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    fn parse(value: &'a HeaderValue) -> Result<Cookie<'a>, CookieParseError> {$/;"	P	implementation:Cookie
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn parse(url: Url) -> crate::Result<Self> {$/;"	P	implementation:ProxyScheme
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^        fn parse(input: ParseStream) -> parse::Result<Self> {$/;"	P	implementation:parse_lit_into_lifetimes::BorrowedLifetimes
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^mod parse;$/;"	n
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn parse(&mut self) -> ParseResult {$/;"	P	implementation:Parser
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub fn parse<T: Read>(reader: &mut T) -> ZipResult<CentralDirectoryEnd> {$/;"	P	implementation:CentralDirectoryEnd
parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub fn parse<T: Read>(reader: &mut T) -> ZipResult<Zip64CentralDirectoryEndLocator> {$/;"	P	implementation:Zip64CentralDirectoryEndLocator
parse_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn parse_all(s: &str, items: &[Item]) -> ParseResult<Parsed> {$/;"	f	function:test_parse
parse_and_collect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    fn parse_and_collect<'a>(s: &'a str) -> Vec<Item<'a>> {$/;"	f	function:test_strftime_items
parse_atx_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_atx_heading(&mut self, start: usize, atx_level: HeadingLevel) -> usize {$/;"	P	implementation:FirstPass
parse_block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_block(&mut self, mut start_ix: usize) -> usize {$/;"	P	implementation:FirstPass
parse_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn parse_char(s: &mut &str, c: char) -> Result<(), ParseError> {$/;"	f
parse_config	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    fn parse_config(&mut self) -> Result<()> {$/;"	P	implementation:Site
parse_decimal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn parse_decimal(bytes: &[u8]) -> (usize, usize) {$/;"	f
parse_empty_chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    fn parse_empty_chain() {$/;"	f	module:test
parse_extra_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^fn parse_extra_field(file: &mut ZipFileData) -> ZipResult<()> {$/;"	f
parse_f64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^fn parse_f64(v: &str) -> Option<f64> {$/;"	f
parse_fenced_code_block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_fenced_code_block($/;"	P	implementation:FirstPass
parse_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn parse_flag(&self, flag: &Arg<'help>, matcher: &mut ArgMatcher) -> ParseResult {$/;"	P	implementation:Parser
parse_footnote	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_footnote(&mut self, start: usize) -> Option<usize> {$/;"	P	implementation:FirstPass
parse_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn parse_from<I, It>(itr: I) -> Self$/;"	P	implementation:Box
parse_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn parse_from<I, T>(itr: I) -> Self$/;"	P	interface:Parser
parse_from_rfc2822	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn parse_from_rfc2822(s: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:DateTime
parse_from_rfc3339	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn parse_from_rfc3339(s: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:DateTime
parse_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:DateTime
parse_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<NaiveDate> {$/;"	P	implementation:NaiveDate
parse_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
parse_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn parse_from_str(s: &str, fmt: &str) -> ParseResult<NaiveTime> {$/;"	P	implementation:NaiveTime
parse_frontmatter	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub fn parse_frontmatter(&mut self, frontmatter: &str) -> Result<()> {$/;"	P	implementation:Page
parse_help_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn parse_help_subcommand(&self, cmds: &[OsString]) -> ClapResult<ParseResult> {$/;"	P	implementation:Parser
parse_hex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn parse_hex(bytes: &[u8]) -> (usize, usize) {$/;"	f
parse_hrule	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_hrule(&mut self, hrule_size: usize, ix: usize) -> usize {$/;"	P	implementation:FirstPass
parse_html_block_type_1_to_5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_html_block_type_1_to_5($/;"	P	implementation:FirstPass
parse_html_block_type_6_or_7	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_html_block_type_6_or_7($/;"	P	implementation:FirstPass
parse_indented_code_block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_indented_code_block(&mut self, start_ix: usize, mut remaining_space: usize) -> usiz/;"	P	implementation:FirstPass
parse_inside_attribute_block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^fn parse_inside_attribute_block(inside_attr_block: &str) -> Option<HeadingAttributes> {$/;"	f
parse_internal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn parse_internal<'a, 'b, I, B>($/;"	f
parse_ip_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! parse_ip_impl {$/;"	M
parse_line	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_line($/;"	P	implementation:FirstPass
parse_lit_into_expr_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn parse_lit_into_expr_path($/;"	f
parse_lit_into_lifetimes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn parse_lit_into_lifetimes($/;"	f
parse_lit_into_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn parse_lit_into_path(cx: &Ctxt, attr_name: Symbol, lit: &syn::Lit) -> Result<syn::Path, ()> {$/;"	f
parse_lit_into_ty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn parse_lit_into_ty(cx: &Ctxt, attr_name: Symbol, lit: &syn::Lit) -> Result<syn::Type, ()> {$/;"	f
parse_lit_into_where	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn parse_lit_into_where($/;"	f
parse_lit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn parse_lit_str<T>(s: &syn::LitStr) -> parse::Result<T>$/;"	f
parse_long_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn parse_long_arg($/;"	P	implementation:Parser
parse_node	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn parse_node(&mut self, block: bool, indentless_sequence: bool) -> ParseResult {$/;"	P	implementation:Parser
parse_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn parse_opt($/;"	P	implementation:Parser
parse_paragraph	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_paragraph(&mut self, start_ix: usize) -> usize {$/;"	P	implementation:FirstPass
parse_refdef_label	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_refdef_label(&self, start: usize) -> Option<(usize, CowStr<'a>)> {$/;"	P	implementation:FirstPass
parse_refdef_total	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_refdef_total(&mut self, start: usize) -> Option<(usize, LinkLabel<'a>, LinkDef<'a>)/;"	P	implementation:FirstPass
parse_registry_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^fn parse_registry_values(registry_values: RegistryProxyValues) -> SystemProxyMap {$/;"	f
parse_registry_values_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^fn parse_registry_values_impl($/;"	f
parse_rfc2822	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn parse_rfc2822<'a>(parsed: &mut Parsed, mut s: &'a str) -> ParseResult<(&'a str, ())> {$/;"	f
parse_rfc3339	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn parse_rfc3339<'a>(parsed: &mut Parsed, mut s: &'a str) -> ParseResult<(&'a str, ())> {$/;"	f
parse_rfc850	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn parse_rfc850() {$/;"	f
parse_setext_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_setext_heading($/;"	P	implementation:FirstPass
parse_short_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn parse_short_arg($/;"	P	implementation:Parser
parse_socket_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! parse_socket_impl {$/;"	M
parse_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn parse_subcommand($/;"	P	implementation:Parser
parse_table	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_table(&mut self, table_cols: usize, head_start: usize, body_start: usize) -> usize /;"	P	implementation:FirstPass
parse_table_row	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_table_row(&mut self, mut ix: usize, row_cells: usize) -> Option<(usize, TreeIndex)>/;"	P	implementation:FirstPass
parse_table_row_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn parse_table_row_inner(&mut self, mut ix: usize, row_cells: usize) -> (usize, TreeIndex) {$/;"	P	implementation:FirstPass
parse_type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/display.rs	/^fn parse_type(fmt: &mut fmt::Formatter, ch: char, tm: &Tm) -> fmt::Result {$/;"	f
parse_type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^fn parse_type(s: &mut &str, ch: char, tm: &mut Tm) -> Result<(), ParseError> {$/;"	f
parsed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^mod parsed;$/;"	n
parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/mod.rs	/^mod parser;$/;"	n
parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/lib.rs	/^pub mod parser;$/;"	n
parser_process_directives	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn parser_process_directives(&mut self) -> Result<(), ScanError> {$/;"	P	implementation:Parser
parser_with_extensions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn parser_with_extensions(text: &str) -> Parser<'_, 'static> {$/;"	f	module:test
part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn part<T>(self, name: T, part: Part) -> Form$/;"	P	implementation:Form
part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn part<T>(mut self, name: T, part: P) -> Self$/;"	P	implementation:FormParts
part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn part<T>(self, name: T, part: Part) -> Form$/;"	P	implementation:Form
part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub fn part<T>(self, name: T, part: Part) -> Form$/;"	P	implementation:Form
part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub(crate) fn part<T>(mut self, name: T, part: P) -> Self$/;"	P	implementation:FormParts
part_stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn part_stream<T>($/;"	P	implementation:Form
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn partial_cmp(&self, other: &Date<Tz>) -> Option<Ordering> {$/;"	P	implementation:Date
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn partial_cmp(&self, other: &DateTime<Tz2>) -> Option<Ordering> {$/;"	P	implementation:DateTime
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {$/;"	P	implementation:Arg
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/debug_asserts.rs	/^    fn partial_cmp(&self, other: &Flag) -> Option<Ordering> {$/;"	P	implementation:Flag
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn partial_cmp(&self, other: &&'a Asn1TimeRef) -> Option<Ordering> {$/;"	P	implementation:Asn1Time
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn partial_cmp(&self, other: &Asn1Time) -> Option<Ordering> {$/;"	P	implementation:Asn1Time
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn partial_cmp(&self, other: &Asn1Time) -> Option<Ordering> {$/;"	P	implementation:Asn1TimeRef
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn partial_cmp(&self, other: &Asn1TimeRef) -> Option<Ordering> {$/;"	P	implementation:Asn1Time
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn partial_cmp(&self, other: &Asn1TimeRef) -> Option<Ordering> {$/;"	P	implementation:Asn1TimeRef
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn partial_cmp(&self, oth: &BigNum) -> Option<Ordering> {$/;"	P	implementation:BigNum
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn partial_cmp(&self, oth: &BigNum) -> Option<Ordering> {$/;"	P	implementation:BigNumRef
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn partial_cmp(&self, oth: &BigNumRef) -> Option<Ordering> {$/;"	P	implementation:BigNum
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn partial_cmp(&self, oth: &BigNumRef) -> Option<Ordering> {$/;"	P	implementation:BigNumRef
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn partial_cmp(&self, other: &Tm) -> Option<Ordering> {$/;"	P	implementation:Tm
partial_cmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn partial_cmp(&self, other: &SteadyTime) -> Option<Ordering> {$/;"	P	implementation:inner::unix::SteadyTime
patch	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn patch<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
patch	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn patch<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
patch	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn patch<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    pub fn path(&self) -> Option<&str> {$/;"	P	implementation:Cookie
path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^    path: Box<Path>,$/;"	m	struct:TempDir
path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^    pub fn path(&self) -> &path::Path {$/;"	P	implementation:TempDir
path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/error.rs	/^    path: PathBuf,$/;"	m	struct:PathError
path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    path: Box<Path>,$/;"	m	struct:TempPath
path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    path: TempPath,$/;"	m	struct:NamedTempFile
path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn path(&self) -> &Path {$/;"	P	implementation:NamedTempFile
path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub path: TempPath,$/;"	m	struct:PathPersistError
path_to_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn path_to_string() {$/;"	f	module:test
path_to_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^fn path_to_string(path: &std::path::Path) -> String {$/;"	f
pathlen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pathlen: Option<u32>,$/;"	m	struct:BasicConstraints
pathlen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn pathlen(&mut self, pathlen: u32) -> &mut BasicConstraints {$/;"	P	implementation:BasicConstraints
pbkdf2_hmac	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs5.rs	/^pub fn pbkdf2_hmac($/;"	f
pbkdf2_hmac_sha256	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs5.rs	/^    fn pbkdf2_hmac_sha256() {$/;"	f	module:tests
pbkdf2_hmac_sha512	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs5.rs	/^    fn pbkdf2_hmac_sha512() {$/;"	f	module:tests
pctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pctx: *mut ffi::EVP_PKEY_CTX,$/;"	m	struct:Decrypter
pctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pctx: *mut ffi::EVP_PKEY_CTX,$/;"	m	struct:Encrypter
pctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pctx: *mut ffi::EVP_PKEY_CTX,$/;"	m	struct:Signer
pctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pctx: *mut ffi::EVP_PKEY_CTX,$/;"	m	struct:Verifier
peek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn peek(&mut self, buf: &mut [u8]) -> c_int {$/;"	P	implementation:SslRef
peek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    pub fn peek(&mut self) -> Result<&(Event, Marker), ScanError> {$/;"	P	implementation:Parser
peek_grandparent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn peek_grandparent(&self) -> Option<TreeIndex> {$/;"	P	implementation:Tree
peek_token	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn peek_token(&mut self) -> Result<&Token, ScanError> {$/;"	P	implementation:Parser
peek_up	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn peek_up(&self) -> Option<TreeIndex> {$/;"	P	implementation:Tree
peer_cert_chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn peer_cert_chain(&self) -> Option<&StackRef<X509>> {$/;"	P	implementation:SslRef
peer_certificate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn peer_certificate(&self) -> Option<X509> {$/;"	P	implementation:SslRef
peer_certificate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn peer_certificate() {$/;"	f
peer_finished	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn peer_finished(&self, buf: &mut [u8]) -> usize {$/;"	P	implementation:SslRef
pending	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn pending(&self) -> usize {$/;"	P	implementation:SslRef
pending	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn pending() {$/;"	f
pending	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pending: Option<&'a Content<'de>>,$/;"	m	struct:FlatInternallyTaggedAccess
pending_content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pending_content: Option<&'a Content<'de>>,$/;"	m	struct:FlatMapAccess
pending_content	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    pending_content: Option<Content<'de>>,$/;"	m	struct:FlatStructAccess
percent_encode_attr_chars	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn percent_encode_attr_chars(self) -> Form {$/;"	P	implementation:Form
percent_encode_attr_chars	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn percent_encode_attr_chars(mut self) -> Self {$/;"	P	implementation:FormParts
percent_encode_attr_chars	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn percent_encode_attr_chars(self) -> Form {$/;"	P	implementation:Form
percent_encode_noop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn percent_encode_noop(self) -> Form {$/;"	P	implementation:Form
percent_encode_noop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn percent_encode_noop(mut self) -> Self {$/;"	P	implementation:FormParts
percent_encode_noop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn percent_encode_noop(self) -> Form {$/;"	P	implementation:Form
percent_encode_path_segment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn percent_encode_path_segment(self) -> Form {$/;"	P	implementation:Form
percent_encode_path_segment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn percent_encode_path_segment(mut self) -> Self {$/;"	P	implementation:FormParts
percent_encode_path_segment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn percent_encode_path_segment(self) -> Form {$/;"	P	implementation:Form
permissions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    permissions: Option<u32>,$/;"	m	struct:FileOptions
persist	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/other.rs	/^pub fn persist(_old_path: &Path, _new_path: &Path, _overwrite: bool) -> io::Result<()> {$/;"	f
persist	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/unix.rs	/^pub fn persist(old_path: &Path, new_path: &Path, overwrite: bool) -> io::Result<()> {$/;"	f
persist	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/windows.rs	/^pub fn persist(old_path: &Path, new_path: &Path, overwrite: bool) -> io::Result<()> {$/;"	f
persist	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn persist<P: AsRef<Path>>(mut self, new_path: P) -> Result<(), PathPersistError> {$/;"	P	implementation:TempPath
persist	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn persist<P: AsRef<Path>>(self, new_path: P) -> Result<File, PersistError> {$/;"	P	implementation:NamedTempFile
persist_noclobber	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn persist_noclobber<P: AsRef<Path>>($/;"	P	implementation:TempPath
persist_noclobber	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn persist_noclobber<P: AsRef<Path>>(self, new_path: P) -> Result<File, PersistError> {$/;"	P	implementation:NamedTempFile
phantom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        pub phantom: PhantomData<Idx>,$/;"	m	struct:range::RangeVisitor
pieces	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    pieces: Vec<(String, Style)>,$/;"	m	struct:Colorizer
pieces	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub(super) fn pieces($/;"	P	implementation:Request
pkcs12	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod pkcs12;$/;"	n
pkcs5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod pkcs5;$/;"	n
pkcs7	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod pkcs7;$/;"	n
pkey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod pkey;$/;"	n
pkey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^    pub pkey: Nid,$/;"	m	struct:SignatureAlgorithms
pkey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^    pub pkey: PKey<Private>,$/;"	m	struct:ParsedPkcs12
pkey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn pkey() -> PKey<Private> {$/;"	f
pkey_pd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pkey_pd: PhantomData<&'a ()>,$/;"	m	struct:Verifier
place_lifetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn place_lifetime() -> syn::LifetimeDef {$/;"	f
plain_text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn plain_text(body: Body) -> Decoder {$/;"	P	implementation:Decoder
platform	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/version.rs	/^pub fn platform() -> &'static str {$/;"	f
point_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn point_bytes() {$/;"	f	module:test
point_new	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn point_new() {$/;"	f	module:test
point_owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn point_owned() {$/;"	f	module:test
poll	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:PendingRequest
poll	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Pending
poll	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn poll(mut self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	P	implementation:Pending
poll	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn poll(self: Pin<&mut Self>, cx: &mut Context<'_>) -> Poll<Self::Output> {$/;"	f
poll_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn poll_data($/;"	P	implementation:ImplStream
poll_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn poll_data($/;"	P	implementation:WrapHyper
poll_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn poll_data($/;"	f
poll_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn poll_data($/;"	P	implementation:Decoder
poll_flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_flush($/;"	P	implementation:native_tls_conn::NativeTlsConn
poll_flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_flush($/;"	P	implementation:rustls_tls_conn::RustlsTlsConn
poll_flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_flush($/;"	P	implementation:verbose::Verbose
poll_flush	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn poll_flush(self: Pin<&mut Self>, cx: &mut Context) -> Poll<Result<(), io::Error>> {$/;"	P	implementation:Conn
poll_next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn poll_next(self: Pin<&mut Self>, cx: &mut Context) -> Poll<Option<Self::Item>> {$/;"	P	implementation:ImplStream
poll_next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context) -> Poll<Option<Self::Item>> {$/;"	P	implementation:Decoder
poll_next	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn poll_next(mut self: Pin<&mut Self>, cx: &mut Context) -> Poll<Option<Self::Item>> {$/;"	P	implementation:IoStream
poll_read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_read($/;"	P	implementation:native_tls_conn::NativeTlsConn
poll_read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_read($/;"	P	implementation:rustls_tls_conn::RustlsTlsConn
poll_read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_read($/;"	P	implementation:verbose::Verbose
poll_read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn poll_read($/;"	P	implementation:Conn
poll_ready	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn poll_ready(&mut self, _cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	P	implementation:Connector
poll_ready	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	P	implementation:HttpConnector
poll_ready	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	f
poll_ready	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^    fn poll_ready(&mut self, _: &mut task::Context<'_>) -> Poll<Result<(), Self::Error>> {$/;"	P	implementation:TrustDnsResolver
poll_shutdown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_shutdown($/;"	P	implementation:native_tls_conn::NativeTlsConn
poll_shutdown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_shutdown($/;"	P	implementation:rustls_tls_conn::RustlsTlsConn
poll_shutdown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_shutdown($/;"	P	implementation:verbose::Verbose
poll_shutdown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn poll_shutdown(self: Pin<&mut Self>, cx: &mut Context) -> Poll<Result<(), io::Error>> {$/;"	P	implementation:Conn
poll_trailers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn poll_trailers($/;"	P	implementation:ImplStream
poll_trailers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn poll_trailers($/;"	P	implementation:WrapHyper
poll_trailers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn poll_trailers($/;"	f
poll_trailers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn poll_trailers($/;"	P	implementation:Decoder
poll_write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_write($/;"	P	implementation:native_tls_conn::NativeTlsConn
poll_write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_write($/;"	P	implementation:rustls_tls_conn::RustlsTlsConn
poll_write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_write($/;"	P	implementation:verbose::Verbose
poll_write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn poll_write($/;"	P	implementation:Conn
poll_write_vectored	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_write_vectored($/;"	P	implementation:native_tls_conn::NativeTlsConn
poll_write_vectored	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_write_vectored($/;"	P	implementation:rustls_tls_conn::RustlsTlsConn
poll_write_vectored	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        fn poll_write_vectored($/;"	P	implementation:verbose::Verbose
poll_write_vectored	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn poll_write_vectored($/;"	P	implementation:Conn
pool_idle_timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pool_idle_timeout: Option<Duration>,$/;"	m	struct:Config
pool_idle_timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn pool_idle_timeout<D>(mut self, val: D) -> ClientBuilder$/;"	P	implementation:ClientBuilder
pool_idle_timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn pool_idle_timeout<D>(self, val: D) -> ClientBuilder$/;"	P	implementation:ClientBuilder
pool_max_idle_per_host	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pool_max_idle_per_host: usize,$/;"	m	struct:Config
pool_max_idle_per_host	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn pool_max_idle_per_host(mut self, max: usize) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
pool_max_idle_per_host	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn pool_max_idle_per_host(self, max: usize) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
pop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    pub fn pop(&mut self) -> Option<T> {$/;"	P	implementation:StackRef
pop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn pop(&mut self, ix: usize) {$/;"	P	implementation:FirstPass
pop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn pop(&mut self) -> Option<LinkStackEl> {$/;"	P	implementation:LinkStack
pop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn pop(&mut self) -> Option<TreeIndex> {$/;"	P	implementation:Tree
pop_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn pop_all(&mut self, tree: &mut Tree<Item>) {$/;"	P	implementation:InlineStack
pop_state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn pop_state(&mut self) {$/;"	P	implementation:Parser
port	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^        fn port(&self) -> Option<u16> {$/;"	P	implementation:tests::Url
port	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn port(&self) -> Option<u16> {$/;"	P	implementation:Uri
port	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn port(&self) -> Option<u16>;$/;"	P	interface:Dst
pos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    pos: usize,$/;"	m	struct:UsageParser
pos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/utf8.rs	/^    pos: usize,$/;"	m	struct:Encode
pos_help_double_lit_single_quote	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn pos_help_double_lit_single_quote() {$/;"	f	module:test
pos_help_lit_single_quote	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn pos_help_lit_single_quote() {$/;"	f	module:test
pos_help_newline	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn pos_help_newline() {$/;"	f	module:test
pos_help_newline_lit_sq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn pos_help_newline_lit_sq() {$/;"	f	module:test
pos_mult	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn pos_mult() {$/;"	f	module:test
pos_mult_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn pos_mult_help() {$/;"	f	module:test
pos_req	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn pos_req() {$/;"	f	module:test
pos_req_mult_def_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn pos_req_mult_def_help() {$/;"	f	module:test
pos_req_mult_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn pos_req_mult_help() {$/;"	f	module:test
positional_display_multiple_occurrences	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn positional_display_multiple_occurrences() {$/;"	f	module:test
positional_display_multiple_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn positional_display_multiple_values() {$/;"	f	module:test
positional_display_required	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn positional_display_required() {$/;"	f	module:test
positional_display_val_names	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn positional_display_val_names() {$/;"	f	module:test
positional_display_val_names_req	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    fn positional_display_val_names_req() {$/;"	f	module:test
possible	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    possible: bool,$/;"	m	struct:SimpleKey
possible_long_flag_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn possible_long_flag_subcommand(&self, arg_os: &RawOsStr) -> Option<&str> {$/;"	P	implementation:Parser
possible_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn possible_subcommand(&self, arg_os: &RawOsStr, valid_arg_found: bool) -> Option<&str> {$/;"	P	implementation:Parser
possible_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn possible_value<T>(mut self, value: T) -> Self$/;"	P	implementation:Arg
possible_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod possible_value;$/;"	n
possible_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn possible_values<I, T>(mut self, values: I) -> Self$/;"	P	implementation:Arg
possible_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    pub fn possible_values() -> impl Iterator<Item = PossibleValue<'static>> {$/;"	P	implementation:Shell
possible_values_match	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/features/suggestions.rs	/^    fn possible_values_match() {$/;"	f	module:test
possible_values_nomatch	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/features/suggestions.rs	/^    fn possible_values_nomatch() {$/;"	f	module:test
post	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn post<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
post	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn post<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
post	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn post<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
potential	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    potential: std::collections::HashMap<Id, Vec<Id>>,$/;"	m	struct:Conflicts
powershell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/mod.rs	/^mod powershell;$/;"	n
precise_time_ns	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn precise_time_ns() -> u64 {$/;"	f
precise_time_s	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn precise_time_s() -> f64 {$/;"	f
precomputed_hashes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/id.rs	/^macro_rules! precomputed_hashes {$/;"	M
precondition	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn precondition(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_no_de_lifetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn precondition_no_de_lifetime(cx: &Ctxt, cont: &Container) {$/;"	f
precondition_sized	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn precondition_sized(cx: &Ctxt, cont: &Container) {$/;"	f
pred	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn pred(&self) -> Date<Tz> {$/;"	P	implementation:Date
pred	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn pred(&self) -> Month {$/;"	P	implementation:Month
pred	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn pred(&self) -> Weekday {$/;"	P	implementation:Weekday
pred	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn pred(&self) -> NaiveDate {$/;"	P	implementation:NaiveDate
pred	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn pred(&self) -> Of {$/;"	P	implementation:Of
pred_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn pred_opt(&self) -> Option<Date<Tz>> {$/;"	P	implementation:Date
pred_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn pred_opt(&self) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
prefix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    prefix: &'a OsStr,$/;"	m	struct:Builder
prefix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    pub fn prefix<S: AsRef<OsStr> + ?Sized>(&mut self, prefix: &'a S) -> &mut Self {$/;"	P	implementation:Builder
prelude	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod prelude {$/;"	n
prepare_enum_variant_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn prepare_enum_variant_enum($/;"	f
pretend	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/lib.rs	/^mod pretend;$/;"	n
pretend_fields_used	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/pretend.rs	/^fn pretend_fields_used(cont: &Container, is_packed: bool) -> TokenStream {$/;"	f
pretend_fields_used_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/pretend.rs	/^fn pretend_fields_used_enum(cont: &Container, variants: &[Variant]) -> TokenStream {$/;"	f
pretend_fields_used_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/pretend.rs	/^fn pretend_fields_used_struct(cont: &Container, fields: &[Field]) -> TokenStream {$/;"	f
pretend_fields_used_struct_packed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/pretend.rs	/^fn pretend_fields_used_struct_packed(cont: &Container, fields: &[Field]) -> TokenStream {$/;"	f
pretend_used	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/pretend.rs	/^pub fn pretend_used(cont: &Container, is_packed: bool) -> TokenStream {$/;"	f
pretend_variants_used	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/pretend.rs	/^fn pretend_variants_used(cont: &Container) -> TokenStream {$/;"	f
prev	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    prev: UsageToken,$/;"	m	struct:UsageParser
previous	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    previous: &'a [Url],$/;"	m	struct:Attempt
previous	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    pub fn previous(&self) -> &[Url] {$/;"	P	implementation:Attempt
prime_p	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn prime_p(&self) -> &BigNumRef {$/;"	f
prime_q	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn prime_q(&self) -> Option<&BigNumRef> {$/;"	f
primitive_deserializer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^macro_rules! primitive_deserializer {$/;"	M
primitive_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^macro_rules! primitive_impl {$/;"	M
print	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub fn print(&self) -> io::Result<()> {$/;"	P	implementation:Error
print	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    pub(crate) fn print(&self) -> io::Result<()> {$/;"	P	implementation:Colorizer
print_events	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/main.rs	/^fn print_events(text: &str, opts: Options) {$/;"	f
print_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn print_help(&mut self) -> io::Result<()> {$/;"	P	implementation:App
print_long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn print_long_help(&mut self) -> io::Result<()> {$/;"	P	implementation:App
priv_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    pub fn priv_key(&self) -> &BigNumRef {$/;"	f
private	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^pub(crate) mod private {$/;"	n
private	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^pub mod private {$/;"	n
private	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^mod private {$/;"	n
private_decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn private_decrypt($/;"	f
private_encrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn private_encrypt($/;"	f
private_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn private_key(&self) -> &BigNumRef {$/;"	f
private_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn private_key(&self) -> &BigNumRef {$/;"	f
private_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn private_key(&self) -> Option<&PKeyRef<Private>> {$/;"	P	implementation:SslContextRef
private_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn private_key(&self) -> Option<&PKeyRef<Private>> {$/;"	P	implementation:SslRef
private_key_from_pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/macros.rs	/^macro_rules! private_key_from_pem {$/;"	M
private_key_from_pkcs8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn private_key_from_pkcs8(der: &[u8]) -> Result<PKey<Private>, ErrorStack> {$/;"	P	implementation:PKey
private_key_from_pkcs8_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn private_key_from_pkcs8_callback<F>($/;"	P	implementation:PKey
private_key_from_pkcs8_passphrase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn private_key_from_pkcs8_passphrase($/;"	P	implementation:PKey
private_key_from_raw_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn private_key_from_raw_bytes($/;"	P	implementation:PKey
private_key_to_pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/macros.rs	/^macro_rules! private_key_to_pem {$/;"	M
private_key_to_pkcs8_passphrase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn private_key_to_pkcs8_passphrase($/;"	f
process_content	/mnt/c/Users/SamanthaC/rust/md_puppy/src/directory_handling.rs	/^pub fn process_content() -> Result<()> {$/;"	f
process_default_vals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^        fn process_default_vals(arg: &Arg<'_>, default_vals: &[&OsStr]) -> Vec<OsString> {$/;"	f	method:Parser::add_value
process_mask	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    unsafe fn process_mask<F, T>($/;"	f	module:simd
processing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub processing: usize,$/;"	m	struct:HtmlScanGuard
promise	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/mod.rs	/^async fn promise<T>(promise: js_sys::Promise) -> Result<T, crate::error::BoxError>$/;"	f
propagate_globals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn propagate_globals(&mut self, global_arg_vec: &[Id]) {$/;"	P	implementation:ArgMatcher
propagate_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn propagate_version(self, yes: bool) -> Self {$/;"	P	implementation:App
propagate_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/tests.rs	/^fn propagate_version() {$/;"	f
protocol_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn protocol_version(&self) -> SslVersion {$/;"	P	implementation:SslSessionRef
prox	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn prox<T: IntoProxyScheme>(_t: T) {}$/;"	f	function:_implied_bounds
proxies	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    proxies: Arc<Vec<Proxy>>,$/;"	m	struct:ClientRef
proxies	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    proxies: Vec<Proxy>,$/;"	m	struct:Config
proxies	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    proxies: Arc<Vec<Proxy>>,$/;"	m	struct:Connector
proxies_maybe_http_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    proxies_maybe_http_auth: bool,$/;"	m	struct:ClientRef
proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn proxy(mut self, proxy: Proxy) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn proxy(self, proxy: Proxy) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
proxy_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn proxy_auth(&self, dst: &Uri, headers: &mut HeaderMap) {$/;"	P	implementation:Client
pseudo_rand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn pseudo_rand(&mut self, bits: i32, msb: MsbOption, odd: bool) -> Result<(), ErrorStack/;"	P	implementation:BigNumRef
pseudo_rand_range	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn pseudo_rand_range(&self, rnd: &mut BigNumRef) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
psk_ciphers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn psk_ciphers() {$/;"	f
ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^mod ptr;$/;"	n
ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub ptr: NonNull<T>,$/;"	m	struct:Mut
ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub ptr: NonNull<T>,$/;"	m	struct:Own
ptr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub ptr: NonNull<T>,$/;"	m	struct:Ref
pub_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    pub fn pub_key(&self) -> &BigNumRef {$/;"	f
public_decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn public_decrypt($/;"	f
public_encrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn public_encrypt($/;"	f
public_encrypt_private_decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    fn public_encrypt_private_decrypt() {$/;"	f	module:test
public_eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn public_eq<U>(&self, other: &PKeyRef<U>) -> bool$/;"	f
public_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn public_key(&self) -> &BigNumRef {$/;"	f
public_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn public_key(&self) -> &EcPointRef {$/;"	f
public_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn public_key(&self) -> Result<PKey<Public>, ErrorStack> {$/;"	P	implementation:X509Ref
public_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn public_key(&self) -> Result<PKey<Public>, ErrorStack> {$/;"	P	implementation:X509ReqRef
public_key_from_raw_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn public_key_from_raw_bytes($/;"	P	implementation:PKey
puncttable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^mod puncttable;$/;"	n
push	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    pub(crate) fn push(&mut self, new_arg: Arg<'help>) {$/;"	P	implementation:MKeyMap
push	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    pub fn push(&mut self, data: T) -> Result<(), ErrorStack> {$/;"	P	implementation:StackRef
push	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn push(&mut self, el: InlineEl) {$/;"	P	implementation:InlineStack
push	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn push(&mut self, el: LinkStackEl) {$/;"	P	implementation:LinkStack
push	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn push(&mut self) -> TreeIndex {$/;"	P	implementation:Tree
push_html	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^pub fn push_html<'a, I>(s: &mut String, iter: I)$/;"	f
push_index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn push_index(&mut self, index: usize) {$/;"	P	implementation:MatchedArg
push_state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn push_state(&mut self, state: State) {$/;"	P	implementation:Parser
push_val	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn push_val(&mut self, val: OsString) {$/;"	P	implementation:MatchedArg
push_val_to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    fn push_val_to(&mut self, arg: &Id, val: OsString, ty: ValueSource) {$/;"	P	implementation:ArgMatcher
put	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    pub fn put(&self) {$/;"	P	implementation:Error
put	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    pub fn put(&self) {$/;"	P	implementation:ErrorStack
put	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn put<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
put	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn put<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
put	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn put<U: IntoUrl>(&self, url: U) -> RequestBuilder {$/;"	P	implementation:Client
put_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    fn put_error(&self) {$/;"	P	implementation:Error
put_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^fn put_usage(c: &mut Colorizer, usage: impl Into<String>) {$/;"	f
q	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    pub fn q(&self) -> &BigNumRef {$/;"	f
q	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn q(&self) -> Option<&BigNumRef> {$/;"	f
query	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn query<T: Serialize + ?Sized>(mut self, query: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
query	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn query<T: Serialize + ?Sized>(mut self, query: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
query	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn query<T: Serialize + ?Sized>(mut self, query: &T) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
quote	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^fn quote(s: impl AsRef<str>) -> String {$/;"	f
quote_block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^macro_rules! quote_block {$/;"	M
quote_expr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^macro_rules! quote_expr {$/;"	M
qux	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^            qux: i32,$/;"	m	struct:tests::add_query_struct::Params
qux	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^            qux: i32,$/;"	m	struct:tests::add_query_struct::Params
r	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ecdsa.rs	/^    pub fn r(&self) -> &BigNumRef {$/;"	P	implementation:EcdsaSigRef
rand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn rand(&mut self, bits: i32, msb: MsbOption, odd: bool) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
rand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod rand;$/;"	n
rand_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rand.rs	/^pub fn rand_bytes(buf: &mut [u8]) -> Result<(), ErrorStack> {$/;"	f
rand_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    pub fn rand_bytes(&mut self, rand: usize) -> &mut Self {$/;"	P	implementation:Builder
rand_range	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn rand_range(&self, rnd: &mut BigNumRef) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
random_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    random_len: usize,$/;"	m	struct:Builder
range	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^mod range {$/;"	n
raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn raw(self, yes: bool) -> Self {$/;"	P	implementation:Arg
raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub fn raw(kind: ErrorKind, message: impl std::fmt::Display) -> Self {$/;"	P	implementation:Error
raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub(crate) fn raw(&self) -> (i64, i32) {$/;"	P	implementation:Duration
raw_alpn_select	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub extern "C" fn raw_alpn_select<F>($/;"	f
raw_client_hello	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub unsafe extern "C" fn raw_client_hello<F>($/;"	f
raw_client_psk	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub extern "C" fn raw_client_psk<F>($/;"	f
raw_cookie_generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub extern "C" fn raw_cookie_generate<F>($/;"	f
raw_cookie_verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub extern "C" fn raw_cookie_verify<F>($/;"	f
raw_copy_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn raw_copy_file(&mut self, file: ZipFile) -> ZipResult<()> {$/;"	P	implementation:ZipWriter
raw_copy_file_rename	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn raw_copy_file_rename<S>(&mut self, mut file: ZipFile, name: S) -> ZipResult<()>$/;"	P	implementation:ZipWriter
raw_custom_ext_add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub extern "C" fn raw_custom_ext_add<F, T>($/;"	f
raw_custom_ext_free	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub extern "C" fn raw_custom_ext_free<T>($/;"	f
raw_custom_ext_parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub extern "C" fn raw_custom_ext_parse<F>($/;"	f
raw_get_session	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub unsafe extern "C" fn raw_get_session<F>($/;"	f
raw_keylog	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub unsafe extern "C" fn raw_keylog<F>(ssl: *const ffi::SSL, line: *const c_char)$/;"	f
raw_new_session	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub unsafe extern "C" fn raw_new_session<F>($/;"	f
raw_private_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn raw_private_key(&self) -> Result<Vec<u8>, ErrorStack> {$/;"	f
raw_public_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn raw_public_key(&self) -> Result<Vec<u8>, ErrorStack> {$/;"	f
raw_remove_session	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub unsafe extern "C" fn raw_remove_session<F>($/;"	f
raw_server_psk	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub extern "C" fn raw_server_psk<F>($/;"	f
raw_sni	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub extern "C" fn raw_sni<F>(ssl: *mut ffi::SSL, al: *mut c_int, arg: *mut c_void) -> c_int$/;"	f
raw_stateless_cookie_generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub unsafe extern "C" fn raw_stateless_cookie_generate<F>($/;"	f
raw_stateless_cookie_verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub unsafe extern "C" fn raw_stateless_cookie_verify<F>($/;"	f
raw_text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    fn raw_text(&mut self) -> io::Result<()> {$/;"	f
raw_tlsext_status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub unsafe extern "C" fn raw_tlsext_status<F>(ssl: *mut ffi::SSL, _: *mut c_void) -> c_int$/;"	f
raw_tmp_dh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub unsafe extern "C" fn raw_tmp_dh<F>($/;"	f
raw_tmp_dh_ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub unsafe extern "C" fn raw_tmp_dh_ssl<F>($/;"	f
raw_tmp_ecdh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub unsafe extern "C" fn raw_tmp_ecdh<F>($/;"	f
raw_tmp_ecdh_ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub unsafe extern "C" fn raw_tmp_ecdh_ssl<F>($/;"	f
raw_verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub extern "C" fn raw_verify<F>(preverify_ok: c_int, x509_ctx: *mut ffi::X509_STORE_CTX) -> c_in/;"	f
rc4	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn rc4() -> Cipher {$/;"	P	implementation:Cipher
rdr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    rdr: T,$/;"	m	struct:Scanner
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ptr.rs	/^    pub unsafe fn read(self) -> T {$/;"	P	implementation:Mut
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn read(&mut self, buf: &mut [u8]) -> c_int {$/;"	P	implementation:SslRef
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:SslStream
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn read(&mut self, _: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:read_panic::ExplodingStream
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:flush_panic::ExplodingStream
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:stateless::MemoryStream
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:write_panic::ExplodingStream
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Reader
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Reader
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Response
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:NamedTempFile
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:SpooledTempFile
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:Crc32Reader
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/lib.rs	/^pub mod read;$/;"	n
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:CryptoReader
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:ZipFile
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {$/;"	P	implementation:ZipFileReader
read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    fn read(&mut self, mut buf: &mut [u8]) -> std::io::Result<usize> {$/;"	P	implementation:ZipCryptoReaderValid
read_break	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn read_break(&mut self, s: &mut String) {$/;"	P	implementation:Scanner
read_early_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn read_early_data(&mut self, buf: &mut [u8]) -> Result<usize, Error> {$/;"	P	implementation:SslStream
read_early_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn read_early_data(&mut self, buf: &mut [u8]) -> Result<usize, Error> {$/;"	f
read_panic	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn read_panic() {$/;"	f
read_to_end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn read_to_end() {$/;"	f	module:tests
read_to_end_with_header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn read_to_end_with_header() {$/;"	f	module:tests
read_to_end_with_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn read_to_end_with_length() {$/;"	f	module:tests
read_to_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^pub fn read_to_string<P>(path: P) -> Result<String>$/;"	f
read_to_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^pub(crate) fn read_to_string(mut body: Body) -> io::Result<String> {$/;"	f
read_zipfile_from_stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^pub fn read_zipfile_from_stream<'a, R: io::Read>($/;"	f
reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn reader<T: Read + Send + 'static>(value: T) -> Part {$/;"	P	implementation:Part
reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub(crate) fn reader(self) -> Reader {$/;"	P	implementation:Form
reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    reader: R,$/;"	m	struct:ZipArchive
reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    reader: ZipFileReader<'a>,$/;"	m	struct:ZipFile
reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    reader: ZipCryptoReader<R>,$/;"	m	struct:ZipCryptoReaderValid
reader_with_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn reader_with_length<T: Read + Send + 'static>(value: T, length: u64) -> Part {$/;"	P	implementation:Part
reason	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/error.rs	/^    pub fn reason(&self) -> Option<&'static str> {$/;"	P	implementation:Error
reason	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub reason: OcspRevokedStatus,$/;"	m	struct:OcspStatus
receiver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/mod.rs	/^mod receiver;$/;"	n
recons	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^                macro_rules! recons {$/;"	M	method:StrftimeItems::next
recons	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    recons: Fmt<'a>,$/;"	m	struct:StrftimeItems
recons_from_slice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^                macro_rules! recons_from_slice {$/;"	M	method:StrftimeItems::next
redirect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn redirect(mut self, policy: redirect::Policy) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
redirect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn redirect(self, policy: redirect::Policy) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
redirect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub(crate) fn redirect<E: Into<BoxError>>(e: E, url: Url) -> Error {$/;"	f
redirect	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    pub fn redirect(&self, attempt: Attempt) -> Action {$/;"	P	implementation:Policy
redirect_policy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    redirect_policy: redirect::Policy,$/;"	m	struct:ClientRef
redirect_policy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    redirect_policy: redirect::Policy,$/;"	m	struct:Config
ref_def_at_eof	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn ref_def_at_eof() {$/;"	f	module:test
ref_defs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn ref_defs() {$/;"	f	module:test
ref_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn ref_mut(&mut self) -> Option<&mut dyn Write> {$/;"	P	implementation:GenericZipWriter
refcount_ssl_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn refcount_ssl_context() {$/;"	f
refdefs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub refdefs: RefDefs<'a>,$/;"	m	struct:Allocations
reference	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub reference: CowStr<'a>,$/;"	m	struct:BrokenLink
reference_definitions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn reference_definitions(&self) -> &RefDefs {$/;"	P	implementation:OffsetIter
reference_definitions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub fn reference_definitions(&self) -> &RefDefs {$/;"	P	implementation:Parser
referer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn referer(mut self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
referer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    referer: bool,$/;"	m	struct:ClientRef
referer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    referer: bool,$/;"	m	struct:Config
referer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn referer(self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
regex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod regex;$/;"	n
register_anchor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn register_anchor(&mut self, name: String, _: &Marker) -> Result<usize, ScanError> {$/;"	P	implementation:Parser
relevant_type_params	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^        relevant_type_params: HashSet<syn::Ident>,$/;"	m	struct:with_bound::FindTyParams
rem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn rem(self, oth: &'b BigNumRef) -> BigNum {$/;"	P	implementation:BigNumRef
remainder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    remainder: &'a str,$/;"	m	struct:StrftimeItems
remaining_space	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    pub(crate) fn remaining_space(&self) -> usize {$/;"	P	implementation:LineStart
remote	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn remote(&self) -> Option<&syn::Path> {$/;"	P	implementation:Container
remote	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    remote: Option<syn::Path>,$/;"	m	struct:Container
remote_addr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub fn remote_addr(&self) -> Option<SocketAddr> {$/;"	P	implementation:Response
remote_addr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn remote_addr(&self) -> Option<SocketAddr> {$/;"	P	implementation:Response
remove	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    pub(crate) fn remove(&mut self, index: usize) -> Arg<'help> {$/;"	P	implementation:MKeyMap
remove	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn remove(&mut self, arg: &Id) {$/;"	P	implementation:ArgMatcher
remove	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^pub fn remove<P: AsRef<Path>>(path: P) -> Result<()> {$/;"	f
remove	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^pub fn remove<P>(path: P) -> Result<()>$/;"	f
remove_by_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    pub(crate) fn remove_by_name(&mut self, name: &Id) -> Option<Arg<'help>> {$/;"	P	implementation:MKeyMap
remove_items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^pub fn remove_items<P>(from_items: &[P]) -> Result<()>$/;"	f
remove_overrides	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn remove_overrides(&self, arg: &Arg<'help>, matcher: &mut ArgMatcher) {$/;"	P	implementation:Parser
remove_sensitive_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^pub(crate) fn remove_sensitive_headers(headers: &mut HeaderMap, next: &Url, previous: &[Url]) {$/;"	f
remove_session	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub unsafe fn remove_session(&self, session: &SslSessionRef) -> bool {$/;"	P	implementation:SslContextRef
remove_simple_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn remove_simple_key(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
remove_vals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn remove_vals(&mut self, len: usize) {$/;"	P	implementation:MatchedArg
rename_all_rules	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn rename_all_rules(&self) -> &RenameAllRules {$/;"	P	implementation:Container
rename_all_rules	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn rename_all_rules(&self) -> &RenameAllRules {$/;"	P	implementation:Variant
rename_all_rules	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    rename_all_rules: RenameAllRules,$/;"	m	struct:Container
rename_all_rules	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    rename_all_rules: RenameAllRules,$/;"	m	struct:Variant
rename_by_rules	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn rename_by_rules(&mut self, rules: &RenameAllRules) {$/;"	P	implementation:Field
rename_by_rules	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn rename_by_rules(&mut self, rules: &RenameAllRules) {$/;"	P	implementation:Variant
rename_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^fn rename_fields() {$/;"	f
rename_variants	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^fn rename_variants() {$/;"	f
render	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^fn render(msg: &'static str, lhs: &dyn Debug, rhs: &dyn Debug) -> Error {$/;"	f
render_long_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn render_long_version(&self) -> String {$/;"	P	implementation:App
render_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn render_usage(&mut self) -> String {$/;"	P	implementation:App
render_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn render_version(&self) -> String {$/;"	P	implementation:App
reopen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/other.rs	/^pub fn reopen(_file: &File, _path: &Path) -> io::Result<File> {$/;"	f
reopen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/unix.rs	/^pub fn reopen(_file: &File, _path: &Path) -> io::Result<File> {$/;"	f
reopen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/unix.rs	/^pub fn reopen(file: &File, path: &Path) -> io::Result<File> {$/;"	f
reopen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/windows.rs	/^pub fn reopen(file: &File, _path: &Path) -> io::Result<File> {$/;"	f
reopen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    pub fn reopen(&self) -> io::Result<File> {$/;"	P	implementation:NamedTempFile
replace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn replace(mut self, name: &'help str, target: &'help [&'help str]) -> Self {$/;"	P	implementation:App
replace_base_url	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub fn replace_base_url(&mut self, base_url: &str) {$/;"	P	implementation:Page
replace_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/util.rs	/^pub(crate) fn replace_headers(dst: &mut HeaderMap, src: HeaderMap) {$/;"	f
replace_index	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub fn replace_index(&mut self, site: &mut Site) {$/;"	P	implementation:Page
replace_navbar	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub fn replace_navbar(&mut self, navbar: &str) {$/;"	P	implementation:Page
replace_placeholder	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^fn replace_placeholder(input_text: &str, page: &Page) -> Result<String> {$/;"	f
replace_receiver	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^pub fn replace_receiver(input: &mut DeriveInput) {$/;"	f
replace_site_name	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub fn replace_site_name(&mut self, site_name: &str) {$/;"	P	implementation:Page
replacement	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/try.rs	/^pub fn replacement() -> TokenStream {$/;"	f
replacers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    replacers: HashMap<&'help OsStr, &'help [&'help str]>,$/;"	m	struct:App
request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn request<U: IntoUrl>(&self, method: Method, url: U) -> RequestBuilder {$/;"	P	implementation:Client
request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/mod.rs	/^pub(crate) mod request;$/;"	n
request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    request: crate::Result<Request>,$/;"	m	struct:RequestBuilder
request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn request<U: IntoUrl>(&self, method: Method, url: U) -> RequestBuilder {$/;"	P	implementation:Client
request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/mod.rs	/^mod request;$/;"	n
request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    request: crate::Result<Request>,$/;"	m	struct:RequestBuilder
request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub(crate) fn request<E: Into<BoxError>>(e: E) -> Error {$/;"	f
request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^    pub fn request<U: IntoUrl>(&self, method: Method, url: U) -> RequestBuilder {$/;"	P	implementation:Client
request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/mod.rs	/^mod request;$/;"	n
request	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    request: crate::Result<Request>,$/;"	m	struct:RequestBuilder
request_timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    request_timeout: Option<Duration>,$/;"	m	struct:ClientRef
require_delimiter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn require_delimiter(self, yes: bool) -> Self {$/;"	P	implementation:Arg
require_equals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn require_equals(self, yes: bool) -> Self {$/;"	P	implementation:Arg
require_value_delimiter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn require_value_delimiter(self, yes: bool) -> Self {$/;"	P	implementation:Arg
required	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn required(self, yes: bool) -> Self {$/;"	P	implementation:Arg
required	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn required(mut self, yes: bool) -> Self {$/;"	P	implementation:ArgGroup
required	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^    pub(crate) fn required(mut self, required: &'cmd ChildGraph<Id>) -> Self {$/;"	P	implementation:Usage
required	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/usage.rs	/^    required: Option<&'cmd ChildGraph<Id>>,$/;"	m	struct:Usage
required	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    required: ChildGraph<Id>,$/;"	m	struct:Validator
required	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    required: bool,$/;"	m	struct:SimpleKey
required_graph	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn required_graph(&self) -> ChildGraph<Id> {$/;"	P	implementation:App
required_if	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn required_if<T: Key>(self, arg_id: T, val: &'help str) -> Self {$/;"	P	implementation:Arg
required_if_eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn required_if_eq<T: Key>(mut self, arg_id: T, val: &'help str) -> Self {$/;"	P	implementation:Arg
required_if_eq_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn required_if_eq_all<T: Key>(mut self, ifs: &[(T, &'help str)]) -> Self {$/;"	P	implementation:Arg
required_if_eq_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn required_if_eq_any<T: Key>(mut self, ifs: &[(T, &'help str)]) -> Self {$/;"	P	implementation:Arg
required_ifs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn required_ifs<T: Key>(self, ifs: &[(T, &'help str)]) -> Self {$/;"	P	implementation:Arg
required_unless	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn required_unless<T: Key>(self, arg_id: T) -> Self {$/;"	P	implementation:Arg
required_unless_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn required_unless_all<T, I>(self, names: I) -> Self$/;"	P	implementation:Arg
required_unless_one	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn required_unless_one<T, I>(self, names: I) -> Self$/;"	P	implementation:Arg
required_unless_present	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn required_unless_present<T: Key>(mut self, arg_id: T) -> Self {$/;"	P	implementation:Arg
required_unless_present_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn required_unless_present_all<T, I>(mut self, names: I) -> Self$/;"	P	implementation:Arg
required_unless_present_any	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn required_unless_present_any<T, I>(mut self, names: I) -> Self$/;"	P	implementation:Arg
requires	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn requires<T: Key>(mut self, arg_id: T) -> Self {$/;"	P	implementation:Arg
requires	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn requires<T: Key>(mut self, id: T) -> Self {$/;"	P	implementation:ArgGroup
requires_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn requires_all<T: Key>(mut self, names: &[T]) -> Self {$/;"	P	implementation:Arg
requires_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn requires_all(mut self, ns: &[&'help str]) -> Self {$/;"	P	implementation:ArgGroup
requires_default	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn requires_default(field: &attr::Field, _variant: Option<&attr::Variant>) -> bool {$/;"	f
requires_if	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn requires_if<T: Key>(mut self, val: &'help str, arg_id: T) -> Self {$/;"	P	implementation:Arg
requires_ifs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn requires_ifs<T: Key>(mut self, ifs: &[(&'help str, T)]) -> Self {$/;"	P	implementation:Arg
reserve	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/mkeymap.rs	/^    pub(crate) fn reserve(&mut self, additional: usize) {$/;"	P	implementation:MKeyMap
reset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn reset(&mut self) {$/;"	P	implementation:Tree
resolve	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        fn resolve(&mut self) {$/;"	P	implementation:capture::Capture
resolve	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn resolve(mut self, domain: &str, addr: SocketAddr) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
resolve	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn resolve(self, domain: &str, addr: SocketAddr) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
resolve_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^        fn resolve_year($/;"	f	method:Parsed::to_naive_date
resolved	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        resolved: bool,$/;"	m	struct:capture::Capture
respan	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/mod.rs	/^mod respan;$/;"	n
respan	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/respan.rs	/^pub(crate) fn respan(stream: TokenStream, span: Span) -> TokenStream {$/;"	f
respan_token	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/respan.rs	/^fn respan_token(mut token: TokenTree, span: Span) -> TokenTree {$/;"	f
response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    pub(crate) fn response(body: hyper::Body, timeout: Option<Pin<Box<Sleep>>>) -> Body {$/;"	P	implementation:Body
response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/mod.rs	/^mod response;$/;"	n
response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/mod.rs	/^mod response;$/;"	n
response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/lib.rs	/^mod response;$/;"	n
response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/mod.rs	/^mod response;$/;"	n
result	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/lib.rs	/^pub mod result;$/;"	n
retriable_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^fn retriable_error(err: &io::Error) -> bool {$/;"	f
retry_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn retry_error(mut self: Pin<&mut Self>, err: &(dyn std::error::Error + 'static)) -> bool {$/;"	P	implementation:PendingRequest
return_carriage_linefeed_ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/linklabel.rs	/^    fn return_carriage_linefeed_ok() {$/;"	f	module:test
reusable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    pub(crate) fn reusable(chunk: Bytes) -> Body {$/;"	P	implementation:Body
revocation_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub revocation_time: Option<&'a Asn1GeneralizedTimeRef>,$/;"	m	struct:OcspStatus
rfc2822_to_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn rfc2822_to_datetime(date: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	f	function:test_rfc2822
rfc3339	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn rfc3339<'a>(&'a self) -> TmFmt {$/;"	P	implementation:Tm
rfc3339_to_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    fn rfc3339_to_datetime(date: &str) -> ParseResult<DateTime<FixedOffset>> {$/;"	f	function:test_rfc3339
rfc822	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn rfc822(&self) -> TmFmt {$/;"	P	implementation:Tm
rfc822z	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn rfc822z(&self) -> TmFmt {$/;"	P	implementation:Tm
rid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn rid(&mut self, rid: &str) -> &mut SubjectAlternativeName {$/;"	P	implementation:SubjectAlternativeName
ripemd160	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn ripemd160() -> MessageDigest {$/;"	P	implementation:MessageDigest
roll	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    pub fn roll(&mut self) -> io::Result<()> {$/;"	P	implementation:SpooledTempFile
roll_indent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn roll_indent(&mut self, col: usize, number: Option<usize>, tok: TokenType, mark: Marker) {$/;"	P	implementation:Scanner
root_cause	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    pub fn root_cause(&self) -> &(dyn StdError + 'static) {$/;"	P	implementation:Error
root_certs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    root_certs: Vec<Certificate>,$/;"	m	struct:Config
round	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod round;$/;"	n
round_subsecs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn round_subsecs(self, digits: u16) -> Self;$/;"	P	interface:SubsecRound
round_subsecs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn round_subsecs(self, digits: u16) -> T {$/;"	f
roundtrip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^        fn roundtrip(bn: BigNum) {$/;"	f	function:tests::bn_cvt
roundtrip_io_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    fn roundtrip_io_error() {$/;"	f	module:tests
rsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod rsa;$/;"	n
rsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn rsa(&self) -> Result<Rsa<T>, ErrorStack> {$/;"	P	implementation:PKeyRef
rsa	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    rsa: Rsa<Private>,$/;"	m	struct:RsaPrivateKeyBuilder
rsa_encrypt_decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    fn rsa_encrypt_decrypt() {$/;"	f	module:test
rsa_encrypt_decrypt_with_sha256	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    fn rsa_encrypt_decrypt_with_sha256() {$/;"	f	module:test
rsa_padding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn rsa_padding(&self) -> Result<Padding, ErrorStack> {$/;"	P	implementation:Decrypter
rsa_padding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn rsa_padding(&self) -> Result<Padding, ErrorStack> {$/;"	P	implementation:Encrypter
rsa_padding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn rsa_padding(&self) -> Result<Padding, ErrorStack> {$/;"	P	implementation:Signer
rsa_padding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn rsa_padding(&self) -> Result<Padding, ErrorStack> {$/;"	P	implementation:Verifier
rsa_sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn rsa_sign() {$/;"	f	module:test
rsa_sign_verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn rsa_sign_verify() {$/;"	f	module:test
rsa_verify_invalid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn rsa_verify_invalid() {$/;"	f	module:test
rsa_verify_ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn rsa_verify_ok() {$/;"	f	module:test
rshift	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn rshift(&mut self, a: &BigNumRef, n: i32) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
rshift1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn rshift1(&mut self, a: &BigNumRef) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
run	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn run(mut self) -> (Tree<Item>, Allocations<'a>) {$/;"	P	implementation:FirstPass
run	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    fn run(mut self) -> io::Result<()> {$/;"	f
run_first_pass	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^pub(crate) fn run_first_pass(text: &str, options: Options) -> (Tree<Item>, Allocations) {$/;"	f
rust_tm_to_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^fn rust_tm_to_tm(rust_tm: &Tm, tm: &mut libc::tm) {$/;"	f
rust_tm_to_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn rust_tm_to_tm(rust_tm: &Tm, tm: &mut libc::tm) {$/;"	f	module:inner
rustc_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub mod rustc_serialize {$/;"	n
rustc_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^mod rustc_serialize {$/;"	n
rustc_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^pub mod rustc_serialize {$/;"	n
rustc_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^mod rustc_serialize {$/;"	n
rustls_tls_conn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^mod rustls_tls_conn {$/;"	n
s	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ecdsa.rs	/^    pub fn s(&self) -> &BigNumRef {$/;"	P	implementation:EcdsaSigRef
safe_exit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/mod.rs	/^pub(crate) fn safe_exit(code: i32) -> ! {$/;"	f
same_site_lax	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    pub fn same_site_lax(&self) -> bool {$/;"	P	implementation:Cookie
same_site_strict	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    pub fn same_site_strict(&self) -> bool {$/;"	P	implementation:Cookie
sanitize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    fn sanitize() {$/;"	f	module:test
sanitized_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn sanitized_name(&self) -> ::std::path::PathBuf {$/;"	P	implementation:ZipFile
save_simple_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn save_simple_key(&mut self) -> Result<(), ScanError> {$/;"	P	implementation:Scanner
sc_spec_vals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn sc_spec_vals(&self, a: &Command) -> String {$/;"	P	implementation:Help
scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    scalar: [bool; 256],$/;"	m	struct:LookupTable
scan	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^mod scan;$/;"	n
scan_all_space	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    pub(crate) fn scan_all_space(&mut self) {$/;"	P	implementation:LineStart
scan_anchor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_anchor(&mut self, alias: bool) -> Result<Token, ScanError> {$/;"	P	implementation:Scanner
scan_attr_value_chars	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn scan_attr_value_chars(data: &[u8]) -> usize {$/;"	f
scan_attribute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn scan_attribute($/;"	f
scan_attribute_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn scan_attribute_name(data: &[u8]) -> Option<usize> {$/;"	f
scan_attribute_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn scan_attribute_value($/;"	f
scan_atx_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_atx_heading(data: &[u8]) -> Option<HeadingLevel> {$/;"	f
scan_autolink	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_autolink(text: &str, start_ix: usize) -> Option<(usize, CowStr<'_>, LinkType)/;"	f
scan_blank_line	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_blank_line(bytes: &[u8]) -> Option<usize> {$/;"	f
scan_block_scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_block_scalar(&mut self, literal: bool) -> Result<Token, ScanError> {$/;"	P	implementation:Scanner
scan_blockquote_marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    pub(crate) fn scan_blockquote_marker(&mut self) -> bool {$/;"	P	implementation:LineStart
scan_blockquote_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_blockquote_start(data: &[u8]) -> Option<usize> {$/;"	f
scan_ch	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    fn scan_ch(&mut self, c: u8) -> bool {$/;"	P	implementation:LineStart
scan_ch	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_ch(data: &[u8], c: u8) -> usize {$/;"	f
scan_ch_repeat	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_ch_repeat(data: &[u8], c: u8) -> usize {$/;"	f
scan_closing_code_fence	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_closing_code_fence($/;"	f
scan_code_fence	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_code_fence(data: &[u8]) -> Option<(usize, u8)> {$/;"	f
scan_containers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^pub(crate) fn scan_containers(tree: &Tree<Item>, line_start: &mut LineStart) -> usize {$/;"	f
scan_directive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_directive(&mut self) -> Result<Token, ScanError> {$/;"	P	implementation:Scanner
scan_directive_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_directive_name(&mut self) -> Result<String, ScanError> {$/;"	P	implementation:Scanner
scan_email	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn scan_email(text: &str, start_ix: usize) -> Option<(usize, CowStr<'_>)> {$/;"	f
scan_empty_list	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_empty_list(data: &[u8]) -> bool {$/;"	f
scan_entity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_entity(bytes: &[u8]) -> (usize, Option<CowStr<'static>>) {$/;"	f
scan_eol	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_eol(bytes: &[u8]) -> Option<usize> {$/;"	f
scan_flow_scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_flow_scalar(&mut self, single: bool) -> Result<Token, ScanError> {$/;"	P	implementation:Scanner
scan_hrule	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_hrule(bytes: &[u8]) -> Result<usize, usize> {$/;"	f
scan_html_block_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_html_block_inner($/;"	f
scan_html_block_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_html_block_tag(data: &[u8]) -> (usize, &[u8]) {$/;"	f
scan_html_type_7	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_html_type_7(data: &[u8]) -> Option<usize> {$/;"	f
scan_inline_html	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn scan_inline_html(&mut self, bytes: &[u8], ix: usize) -> Option<(Vec<u8>, usize)> {$/;"	P	implementation:Parser
scan_inline_html_comment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_inline_html_comment($/;"	f
scan_inline_html_processing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_inline_html_processing($/;"	f
scan_inline_link	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn scan_inline_link($/;"	P	implementation:Parser
scan_link_dest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_link_dest($/;"	f
scan_link_label	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^fn scan_link_label<'text, 'tree>($/;"	f
scan_link_label_rest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/linklabel.rs	/^pub(crate) fn scan_link_label_rest<'t>($/;"	f
scan_link_title	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn scan_link_title($/;"	P	implementation:Parser
scan_list_marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    pub(crate) fn scan_list_marker(&mut self) -> Option<(u8, u64, usize)> {$/;"	P	implementation:LineStart
scan_listitem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_listitem(bytes: &[u8]) -> Option<(usize, u8, usize, usize)> {$/;"	f
scan_next_token	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn scan_next_token(&mut self) -> Result<Token, ScanError> {$/;"	P	implementation:Parser
scan_nextline	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_nextline(bytes: &[u8]) -> usize {$/;"	f
scan_nodes_to_ix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^fn scan_nodes_to_ix($/;"	f
scan_paragraph_interrupt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^fn scan_paragraph_interrupt(bytes: &[u8], current_container: bool) -> bool {$/;"	f
scan_plain_scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_plain_scalar(&mut self) -> Result<Token, ScanError> {$/;"	P	implementation:Scanner
scan_refdef	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn scan_refdef(&self, span_start: usize, start: usize) -> Option<(usize, LinkDef<'a>)> {$/;"	P	implementation:FirstPass
scan_refdef_space	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    fn scan_refdef_space(&self, bytes: &[u8], mut i: usize) -> Option<(usize, usize)> {$/;"	P	implementation:FirstPass
scan_refdef_title	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_refdef_title(text: &str) -> Option<(usize, &str)> {$/;"	f
scan_reference	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^fn scan_reference<'a, 'b>($/;"	f
scan_rev_while	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_rev_while<F>(data: &[u8], mut f: F) -> usize$/;"	f
scan_setext_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_setext_heading(data: &[u8]) -> Option<(usize, HeadingLevel)> {$/;"	f
scan_space	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    pub(crate) fn scan_space(&mut self, n_space: usize) -> bool {$/;"	P	implementation:LineStart
scan_space_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    fn scan_space_inner(&mut self, mut n_space: usize) -> usize {$/;"	P	implementation:LineStart
scan_space_upto	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    pub(crate) fn scan_space_upto(&mut self, n_space: usize) -> usize {$/;"	P	implementation:LineStart
scan_table_head	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_table_head(data: &[u8]) -> (usize, Vec<Alignment>) {$/;"	f
scan_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_tag(&mut self) -> Result<Token, ScanError> {$/;"	P	implementation:Scanner
scan_tag_directive_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_tag_directive_value(&mut self, mark: &Marker) -> Result<Token, ScanError> {$/;"	P	implementation:Scanner
scan_tag_handle	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_tag_handle(&mut self, directive: bool, mark: &Marker) -> Result<String, ScanError> {$/;"	P	implementation:Scanner
scan_tag_uri	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_tag_uri($/;"	P	implementation:Scanner
scan_task_list_marker	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    pub(crate) fn scan_task_list_marker(&mut self) -> Option<bool> {$/;"	P	implementation:LineStart
scan_uri	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn scan_uri(text: &str, start_ix: usize) -> Option<(usize, CowStr<'_>)> {$/;"	f
scan_uri_escapes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_uri_escapes(&mut self, _directive: bool, mark: &Marker) -> Result<char, ScanError> {$/;"	P	implementation:Scanner
scan_version_directive_number	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_version_directive_number(&mut self, mark: &Marker) -> Result<u32, ScanError> {$/;"	P	implementation:Scanner
scan_version_directive_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn scan_version_directive_value(&mut self, mark: &Marker) -> Result<Token, ScanError> {$/;"	P	implementation:Scanner
scan_while	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_while<F>(data: &[u8], mut f: F) -> usize$/;"	f
scan_whitespace_no_nl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn scan_whitespace_no_nl(data: &[u8]) -> usize {$/;"	f
scan_whitespace_with_newline_handler	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^fn scan_whitespace_with_newline_handler($/;"	f
scanner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/lib.rs	/^pub mod scanner;$/;"	n
scanner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    scanner: Scanner<T>,$/;"	m	struct:Parser
scanners	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^mod scanners;$/;"	n
scheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^        fn scheme(&self) -> &str {$/;"	P	implementation:tests::Url
scheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn scheme(&self) -> &str {$/;"	P	implementation:ProxyScheme
scheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn scheme(&self) -> &str {$/;"	P	implementation:Uri
scheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn scheme(&self) -> &str;$/;"	P	interface:Dst
scrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs5.rs	/^    fn scrypt() {$/;"	f	module:tests
scrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs5.rs	/^pub fn scrypt($/;"	f
sec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub sec: i64,$/;"	m	struct:Timespec
sec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub struct Timespec { pub sec: i64, pub nsec: i32 }$/;"	m	struct:Timespec
second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn second(&self) -> u32 {$/;"	P	implementation:DateTime
second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub second: Option<u32>,$/;"	m	struct:Parsed
second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn second(&self) -> u32;$/;"	P	interface:Timelike
second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn second(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn second(&self) -> u32 {$/;"	P	implementation:NaiveTime
second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn second(&self) -> u8 {$/;"	P	implementation:DateTime
second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    second: u8,$/;"	m	struct:DateTime
seconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn seconds(seconds: i64) -> Duration {$/;"	P	implementation:Duration
seconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn seconds(seconds: i64) -> Duration {$/;"	P	implementation:Duration
secret	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub secret: i32,$/;"	m	struct:CipherBits
secs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    secs: u32,$/;"	m	struct:NaiveTime
secs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    secs: i64,$/;"	m	struct:Duration
secs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub secs: c_int,$/;"	m	struct:TimeDiff
secs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    secs: i64,$/;"	m	struct:Duration
secure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    pub fn secure(&self) -> bool {$/;"	P	implementation:Cookie
seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/util.rs	/^    fn seed() -> u64 {$/;"	f	function:fast_random
seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/lib.rs	/^mod seed;$/;"	n
seed_cbc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn seed_cbc() -> Cipher {$/;"	P	implementation:Cipher
seed_cfb128	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn seed_cfb128() -> Cipher {$/;"	P	implementation:Cipher
seed_ecb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn seed_ecb() -> Cipher {$/;"	P	implementation:Cipher
seed_ofb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn seed_ofb() -> Cipher {$/;"	P	implementation:Cipher
seek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn seek(&mut self, pos: SeekFrom) -> io::Result<u64> {$/;"	P	implementation:NamedTempFile
seek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    fn seek(&mut self, pos: SeekFrom) -> io::Result<u64> {$/;"	P	implementation:SpooledTempFile
seen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    seen: Vec<Id>,$/;"	m	struct:Parser
seen_first	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    seen_first: bool,$/;"	m	struct:CodeDelims
select_next_proto	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^pub fn select_next_proto<'a>(server: &[u8], client: &'a [u8]) -> Option<&'a [u8]> {$/;"	f
selected_alpn_protocol	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn selected_alpn_protocol(&self) -> Option<&[u8]> {$/;"	P	implementation:SslRef
selected_srtp_profile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn selected_srtp_profile(&self) -> Option<&SrtpProtectionProfileRef> {$/;"	P	implementation:SslRef
self_to_expr_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn self_to_expr_path(&self, path: &mut Path) {$/;"	P	implementation:ReplaceReceiver
self_to_qself	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn self_to_qself(&self, qself: &mut Option<QSelf>, path: &mut Path) {$/;"	P	implementation:ReplaceReceiver
self_ty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn self_ty(&self, span: Span) -> TypePath {$/;"	P	implementation:ReplaceReceiver
self_var	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    self_var: Ident,$/;"	m	struct:Parameters
send	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^    fn send(from: &mut MemoryStream, to: &mut MemoryStream) {$/;"	f	function:stateless
send	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn send(self) -> impl Future<Output = Result<Response, crate::Error>> {$/;"	P	implementation:RequestBuilder
send	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    pub(crate) fn send(self) -> impl Future<Output = Result<(), crate::Error>> {$/;"	P	implementation:Sender
send	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn send(self) -> crate::Result<super::Response> {$/;"	P	implementation:RequestBuilder
send	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub async fn send(self) -> crate::Result<Response> {$/;"	P	implementation:RequestBuilder
send_future	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^async fn send_future(sender: Sender) -> Result<(), crate::Error> {$/;"	f
seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    seq: A,$/;"	m	struct:SeqAccessDeserializer
seq_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! seq_impl {$/;"	M
seq_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^macro_rules! seq_impl {$/;"	M
ser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/lib.rs	/^pub mod ser;$/;"	n
ser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/mod.rs	/^pub mod ser;$/;"	n
ser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/lib.rs	/^mod ser;$/;"	n
ser_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Container
ser_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Field
ser_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn ser_bound(&self) -> Option<&[syn::WherePredicate]> {$/;"	P	implementation:Variant
ser_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    ser_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Container
ser_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    ser_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Field
ser_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    ser_bound: Option<Vec<syn::WherePredicate>>,$/;"	m	struct:Variant
serde	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^pub mod serde {$/;"	n
serde	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub mod serde {$/;"	n	module:naive
serde	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^pub mod serde {$/;"	n
serde	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^mod serde {$/;"	n
serde	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^pub mod serde {$/;"	n
serde	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^mod serde {$/;"	n
serde_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn serde_from<T, E, V>(me: LocalResult<T>, ts: &V) -> Result<T, E>$/;"	f	module:serde
serde_if_integer128	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/integer128.rs	/^macro_rules! serde_if_integer128 {$/;"	M
serde_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^mod serde_impl {$/;"	n
serde_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn serde_path(&self) -> Cow<syn::Path> {$/;"	P	implementation:Container
serde_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    serde_path: Option<syn::Path>,$/;"	m	struct:Container
serial_number	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn serial_number(&self) -> &Asn1IntegerRef {$/;"	P	implementation:X509Ref
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde::DateTime
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_milliseconds
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_nanoseconds
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(dt: &DateTime<Utc>, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_seconds
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Erro/;"	f	module:serde::ts_milliseconds_option
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Erro/;"	f	module:serde::ts_nanoseconds_option
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        pub fn serialize<S>(opt: &Option<DateTime<Utc>>, serializer: S) -> Result<S::Ok, S::Erro/;"	f	module:serde::ts_seconds_option
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:month_serde::Month
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:weekday_serde::Weekday
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde::NaiveDate
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde::NaiveDateTime
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn serialize<S>(dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_milliseconds
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn serialize<S>(dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_nanoseconds
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        pub fn serialize<S>(dt: &NaiveDateTime, serializer: S) -> Result<S::Ok, S::Error>$/;"	f	module:serde::ts_seconds
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde::NaiveTime
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:serde_impl::CowStr
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^            fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:tests::add_json_fail::MyStruct
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:content::Content
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, _serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Serialize
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Arguments
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:CStr
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:CString
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Duration
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:IpAddr
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Ipv4Addr
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Ipv6Addr
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:OsStr
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:OsString
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Path
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:PathBuf
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:PhantomData
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:Serialize
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddr
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddrV4
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SocketAddrV6
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:String
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:SystemTime
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:T
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	implementation:str
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	f
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>$/;"	P	interface:Serialize
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    serialize: RenameRule,$/;"	m	struct:RenameAllRules
serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    serialize: String,$/;"	m	struct:Name
serialize_adjacently_tagged_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_adjacently_tagged_variant($/;"	f
serialize_body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_body(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_bool(self, v: bool) -> Result<Content, E> {$/;"	f	module:content
serialize_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_bool(self, _: bool) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_bool(self, v: bool) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_bytes(self, value: &[u8]) -> Result<Content, E> {$/;"	f	module:content
serialize_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_bytes(self, _: &[u8]) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_bytes(self, _v: &[u8]) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_bytes(self, v: &[u8]) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_char(self, v: char) -> Result<Content, E> {$/;"	f	module:content
serialize_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_char(self, _: char) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_char(self, v: char) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ecdsa.rs	/^    fn serialize_deserialize() {$/;"	f	module:test
serialize_display_bounded_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^macro_rules! serialize_display_bounded_length {$/;"	M
serialize_element	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_element	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_element	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeSeq
serialize_element	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_element<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTuple
serialize_element	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    fn serialize_element(&self, span: Span) -> TokenStream {$/;"	P	implementation:TupleTrait
serialize_entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_entry<K: ?Sized, V: ?Sized>(&mut self, key: &K, value: &V) -> Result<(), E>$/;"	f	module:content
serialize_entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	f
serialize_entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_entry<K: ?Sized, V: ?Sized>($/;"	P	interface:SerializeMap
serialize_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_enum(params: &Parameters, variants: &[Variant], cattrs: &attr::Container) -> Fragme/;"	f
serialize_externally_tagged_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_externally_tagged_variant($/;"	f
serialize_f32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_f32(self, v: f32) -> Result<Content, E> {$/;"	f	module:content
serialize_f32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_f32(self, _: f32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_f32(self, v: f32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_f64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_f64(self, v: f64) -> Result<Content, E> {$/;"	f	module:content
serialize_f64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_f64(self, _: f64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_f64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_f64(self, v: f64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>($/;"	f	module:content
serialize_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), M::Error>$/;"	f	module:content
serialize_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_field<T: ?Sized>($/;"	f
serialize_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, key: &'static str, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	P	interface:SerializeStruct
serialize_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>($/;"	P	interface:SerializeStructVariant
serialize_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTupleStruct
serialize_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_field<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeTupleVariant
serialize_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    fn serialize_field(&self, span: Span) -> TokenStream {$/;"	P	implementation:StructTrait
serialize_i16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_i16(self, v: i16) -> Result<Content, E> {$/;"	f	module:content
serialize_i16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_i16(self, _: i16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_i16(self, v: i16) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_i32(self, v: i32) -> Result<Content, E> {$/;"	f	module:content
serialize_i32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_i32(self, _: i32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_i32(self, v: i32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_i64(self, v: i64) -> Result<Content, E> {$/;"	f	module:content
serialize_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_i64(self, _: i64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_i64(self, v: i64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_i8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_i8(self, v: i8) -> Result<Content, E> {$/;"	f	module:content
serialize_i8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_i8(self, _: i8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_i8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_i8(self, v: i8) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_internally_tagged_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_internally_tagged_variant($/;"	f
serialize_into	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_into(params: &Parameters, type_into: &syn::Type) -> Fragment {$/;"	f
serialize_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), E>$/;"	f	module:content
serialize_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	f
serialize_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Error>$/;"	f
serialize_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_key<T: ?Sized>(&mut self, key: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeMap
serialize_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, E> {$/;"	f	module:content
serialize_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_map(self, _: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error> {$/;"	f
serialize_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_map(self, _len: Option<usize>) -> Result<Self::SerializeMap, fmt::Error> {$/;"	P	implementation:Formatter
serialize_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_map(self, len: Option<usize>) -> Result<Self::SerializeMap, Self::Error>;$/;"	P	interface:Serializer
serialize_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn serialize_name(&self) -> String {$/;"	P	implementation:Name
serialize_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_newtype_struct<T: ?Sized>($/;"	f	module:content
serialize_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	f
serialize_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_newtype_struct<T: ?Sized>(self, _name: &'static str, value: &T) -> fmt::Result$/;"	P	implementation:Formatter
serialize_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_newtype_struct<T: ?Sized>($/;"	P	interface:Serializer
serialize_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_newtype_struct($/;"	f
serialize_newtype_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_newtype_variant<T: ?Sized>($/;"	f	module:content
serialize_newtype_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	f
serialize_newtype_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	implementation:Formatter
serialize_newtype_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_newtype_variant<T: ?Sized>($/;"	P	interface:Serializer
serialize_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_none(self) -> Result<Content, E> {$/;"	f	module:content
serialize_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_none(self) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_none(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_renamed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    serialize_renamed: bool,$/;"	m	struct:Name
serialize_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, E> {$/;"	f	module:content
serialize_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_seq(self, _: Option<usize>) -> Result<Self::SerializeSeq, Self::Error> {$/;"	f
serialize_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_seq(self, _len: Option<usize>) -> Result<Self::SerializeSeq, fmt::Error> {$/;"	P	implementation:Formatter
serialize_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_seq(self, len: Option<usize>) -> Result<Self::SerializeSeq, Self::Error>;$/;"	P	interface:Serializer
serialize_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Content, E>$/;"	f	module:content
serialize_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, _: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	f
serialize_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_some<T: ?Sized>(self, _value: &T) -> fmt::Result$/;"	P	implementation:Formatter
serialize_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_some<T: ?Sized>(self, value: &T) -> Result<Self::Ok, Self::Error>$/;"	P	interface:Serializer
serialize_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_str(self, value: &str) -> Result<Content, E> {$/;"	f	module:content
serialize_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_str(self, _: &str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_str(self, v: &str) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_struct($/;"	f	module:content
serialize_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_struct($/;"	f
serialize_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_struct($/;"	P	implementation:Formatter
serialize_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_struct($/;"	P	interface:Serializer
serialize_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_struct(params: &Parameters, fields: &[Field], cattrs: &attr::Container) -> Fragment/;"	f
serialize_struct_as_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_struct_as_map($/;"	f
serialize_struct_as_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_struct_as_struct($/;"	f
serialize_struct_tag_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_struct_tag_field(cattrs: &attr::Container, struct_trait: &StructTrait) -> TokenStre/;"	f
serialize_struct_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_struct_variant($/;"	f	module:content
serialize_struct_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_struct_variant($/;"	f
serialize_struct_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_struct_variant($/;"	P	implementation:Formatter
serialize_struct_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_struct_variant($/;"	P	interface:Serializer
serialize_struct_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_struct_variant<'a>($/;"	f
serialize_struct_variant_with_flatten	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_struct_variant_with_flatten<'a>($/;"	f
serialize_struct_visitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_struct_visitor($/;"	f
serialize_tagged_newtype	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^pub fn serialize_tagged_newtype<S, T>($/;"	f
serialize_transparent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_transparent(cont: &Container, params: &Parameters) -> Fragment {$/;"	f
serialize_tuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, E> {$/;"	f	module:content
serialize_tuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_tuple(self, _: usize) -> Result<Self::SerializeTuple, Self::Error> {$/;"	f
serialize_tuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_tuple(self, _len: usize) -> Result<Self::SerializeTuple, fmt::Error> {$/;"	P	implementation:Formatter
serialize_tuple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_tuple(self, len: usize) -> Result<Self::SerializeTuple, Self::Error>;$/;"	P	interface:Serializer
serialize_tuple_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_tuple_struct($/;"	f	module:content
serialize_tuple_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_tuple_struct($/;"	f
serialize_tuple_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_tuple_struct($/;"	P	implementation:Formatter
serialize_tuple_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_tuple_struct($/;"	P	interface:Serializer
serialize_tuple_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_tuple_struct($/;"	f
serialize_tuple_struct_visitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_tuple_struct_visitor($/;"	f
serialize_tuple_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_tuple_variant($/;"	f	module:content
serialize_tuple_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_tuple_variant($/;"	f
serialize_tuple_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_tuple_variant($/;"	P	implementation:Formatter
serialize_tuple_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_tuple_variant($/;"	P	interface:Serializer
serialize_tuple_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_tuple_variant($/;"	f
serialize_u16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_u16(self, v: u16) -> Result<Content, E> {$/;"	f	module:content
serialize_u16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_u16(self, _: u16) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_u16(self, v: u16) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_u32(self, v: u32) -> Result<Content, E> {$/;"	f	module:content
serialize_u32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_u32(self, _: u32) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_u32(self, v: u32) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_u64(self, v: u64) -> Result<Content, E> {$/;"	f	module:content
serialize_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_u64(self, _: u64) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_u64(self, v: u64) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_u8(self, v: u8) -> Result<Content, E> {$/;"	f	module:content
serialize_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_u8(self, _: u8) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_u8(self, v: u8) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_unit(self) -> Result<Content, E> {$/;"	f	module:content
serialize_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_unit(self) -> fmt::Result {$/;"	P	implementation:Formatter
serialize_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_unit(self) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_unit_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_unit_struct(self, name: &'static str) -> Result<Content, E> {$/;"	f	module:content
serialize_unit_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_unit_struct(self, _: &'static str) -> Result<Self::Ok, Self::Error> {$/;"	f
serialize_unit_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_unit_struct(self, name: &'static str) -> Result<Self::Ok, Self::Error>;$/;"	P	interface:Serializer
serialize_unit_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_unit_struct(cattrs: &attr::Container) -> Fragment {$/;"	f
serialize_unit_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_unit_variant($/;"	f	module:content
serialize_unit_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_unit_variant($/;"	f
serialize_unit_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/fmt.rs	/^    fn serialize_unit_variant($/;"	P	implementation:Formatter
serialize_unit_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_unit_variant($/;"	P	interface:Serializer
serialize_untagged_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_untagged_variant($/;"	f
serialize_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), E>$/;"	f	module:content
serialize_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	f
serialize_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Error>$/;"	f
serialize_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn serialize_value<T: ?Sized>(&mut self, value: &T) -> Result<(), Self::Error>$/;"	P	interface:SerializeMap
serialize_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn serialize_variant($/;"	f
serialize_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn serialize_with(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Field
serialize_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn serialize_with(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Variant
serialize_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    serialize_with: Option<syn::ExprPath>,$/;"	m	struct:Field
serialize_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    serialize_with: Option<syn::ExprPath>,$/;"	m	struct:Variant
server	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^mod server;$/;"	n
server_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn server_auth(&mut self) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
server_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    server_auth: bool,$/;"	m	struct:ExtendedKeyUsage
server_random	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn server_random(&self, buf: &mut [u8]) -> usize {$/;"	P	implementation:SslRef
servername	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn servername(&self, type_: NameType) -> Option<&str> {$/;"	P	implementation:SslRef
servername_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn servername_raw(&self, type_: NameType) -> Option<&[u8]> {$/;"	P	implementation:SslRef
session	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn session(&self) -> Option<&SslSessionRef> {$/;"	P	implementation:SslRef
session_cache_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn session_cache_size(&self) -> i64 {$/;"	P	implementation:SslContextRef
session_cache_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn session_cache_size() {$/;"	f
session_reused	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn session_reused(&self) -> bool {$/;"	P	implementation:SslRef
set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn set(self, s: ArgSettings) -> Self {$/;"	P	implementation:Arg
set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn set(&mut self, s: AppSettings) {$/;"	P	implementation:App
set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn set(&mut self, value: i32) -> Result<(), ErrorStack> {$/;"	P	implementation:Asn1IntegerRef
set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn set<A: ToTokens>(&mut self, obj: A, value: T) {$/;"	P	implementation:Attr
set_accept_state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_accept_state(&mut self) {$/;"	P	implementation:SslRef
set_accept_state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_accept_state(&mut self) {$/;"	f
set_alpn_protos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_alpn_protos(&mut self, protocols: &[u8]) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_alpn_protos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_alpn_protos(&mut self, protocols: &[u8]) -> Result<(), ErrorStack> {$/;"	P	implementation:SslRef
set_alpn_select_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_alpn_select_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_ampm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_ampm(&mut self, value: bool) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_asn1_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn set_asn1_flag(&mut self, flag: Asn1Flag) {$/;"	P	implementation:EcGroupRef
set_basic_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn set_basic_auth(&mut self, username: &str, password: &str) {$/;"	P	implementation:Intercept
set_basic_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn set_basic_auth<T: Into<String>, U: Into<String>>(&mut self, username: T, password: U) {$/;"	P	implementation:ProxyScheme
set_bin_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn set_bin_name<S: Into<String>>(&mut self, name: S) {$/;"	P	implementation:App
set_bit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn set_bit(&mut self, n: i32) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
set_ca_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_ca_file<P: AsRef<Path>>(&mut self, file: P) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_cert_store	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_cert_store(&mut self, cert_store: X509Store) {$/;"	P	implementation:SslContextBuilder
set_certificate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_certificate(&mut self, cert: &X509Ref) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_certificate_chain_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_certificate_chain_file<P: AsRef<Path>>($/;"	P	implementation:SslContextBuilder
set_certificate_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_certificate_file<P: AsRef<Path>>($/;"	P	implementation:SslContextBuilder
set_cipher_list	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_cipher_list(&mut self, cipher_list: &str) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_ciphersuites	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_ciphersuites(&mut self, cipher_list: &str) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_client_ca_list	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_client_ca_list(&mut self, list: Stack<X509Name>) {$/;"	P	implementation:SslContextBuilder
set_client_hello_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_client_hello_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_color	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn set_color(mut self, color_when: ColorChoice) -> Self {$/;"	P	implementation:Error
set_comment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn set_comment<S>(&mut self, comment: S)$/;"	P	implementation:ZipWriter
set_connect_state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_connect_state(&mut self) {$/;"	P	implementation:SslRef
set_connect_state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_connect_state(&mut self) {$/;"	f
set_const_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn set_const_time(&mut self) {$/;"	P	implementation:BigNumRef
set_cookie_generate_cb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_cookie_generate_cb<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_cookie_verify_cb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_cookie_verify_cb<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_cookies	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    fn set_cookies(&self, cookie_headers: &mut dyn Iterator<Item = &HeaderValue>, url: &url::Url/;"	P	implementation:Jar
set_cookies	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    fn set_cookies(&self, cookie_headers: &mut dyn Iterator<Item = &HeaderValue>, url: &url::Url/;"	P	interface:CookieStore
set_crt_params	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn set_crt_params($/;"	P	implementation:RsaPrivateKeyBuilder
set_ctx_options	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn set_ctx_options() {$/;"	f
set_data_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn set_data_len(&mut self, data_len: usize) -> Result<(), ErrorStack> {$/;"	P	implementation:Crypter
set_day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_day(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_default_paths	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^    pub fn set_default_paths(&mut self) -> Result<(), ErrorStack> {$/;"	P	implementation:X509StoreBuilderRef
set_default_verify_paths	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_default_verify_paths(&mut self) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_dtls_mtu_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^pub unsafe fn set_dtls_mtu_size<S>(bio: *mut BIO, mtu_size: usize) {$/;"	f
set_dtls_mtu_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_dtls_mtu_size(&mut self, mtu_size: usize) {$/;"	P	implementation:SslStreamBuilder
set_ecdh_auto	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_ecdh_auto(&mut self, onoff: bool) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_ecdh_auto	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_ecdh_auto(&mut self, onoff: bool) -> Result<(), ErrorStack> {$/;"	P	implementation:SslRef
set_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn set_error(&mut self, result: X509VerifyResult) {$/;"	P	implementation:X509StoreContextRef
set_ex_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_ex_data<T>(&mut self, index: Index<Ssl, T>, data: T) {$/;"	P	implementation:SslRef
set_ex_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_ex_data<T>(&mut self, index: Index<SslContext, T>, data: T) {$/;"	P	implementation:SslContextBuilder
set_ex_data_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn set_ex_data_inner<T>(&mut self, index: Index<SslContext, T>, data: T) -> *mut c_void {$/;"	P	implementation:SslContextBuilder
set_explicit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub(crate) fn set_explicit(&mut self, explicit: usize) {$/;"	P	implementation:DisplayOrder
set_factors	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn set_factors(self, p: BigNum, q: BigNum) -> Result<RsaPrivateKeyBuilder, ErrorStack> {$/;"	P	implementation:RsaPrivateKeyBuilder
set_flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/store.rs	/^    pub fn set_flags(&mut self, flags: X509VerifyFlags) -> Result<(), ErrorStack> {$/;"	P	implementation:X509StoreBuilderRef
set_flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/verify.rs	/^    pub fn set_flags(&mut self, flags: X509VerifyFlags) -> Result<(), ErrorStack> {$/;"	P	implementation:X509VerifyParamRef
set_get_session_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub unsafe fn set_get_session_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_groups_list	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_groups_list(&mut self, groups: &str) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_help_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn set_help_flag(mut self, help_flag: Option<&'static str>) -> Self {$/;"	P	implementation:Error
set_host	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/verify.rs	/^    pub fn set_host(&mut self, host: &str) -> Result<(), ErrorStack> {$/;"	P	implementation:X509VerifyParamRef
set_hostflags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/verify.rs	/^    pub fn set_hostflags(&mut self, hostflags: X509CheckFlags) {$/;"	P	implementation:X509VerifyParamRef
set_hostname	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_hostname(&mut self, hostname: &str) -> Result<(), ErrorStack> {$/;"	P	implementation:SslRef
set_hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_hour(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_hour12	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_hour12(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_http_request_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn set_http_request_version() {$/;"	f	module:tests
set_http_request_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn set_http_request_version() {$/;"	f	module:tests
set_if_consistent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^fn set_if_consistent<T: PartialEq>(old: &mut Option<T>, new: T) -> ParseResult<()> {$/;"	f
set_if_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn set_if_none(&mut self, value: T) {$/;"	P	implementation:Attr
set_ignore_case	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn set_ignore_case(&mut self, yes: bool) {$/;"	P	implementation:MatchedArg
set_implicit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub(crate) fn set_implicit(&mut self, implicit: usize) {$/;"	P	implementation:DisplayOrder
set_info	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn set_info(mut self, info: Vec<String>) -> Self {$/;"	P	implementation:Error
set_ip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/verify.rs	/^    pub fn set_ip(&mut self, ip: IpAddr) -> Result<(), ErrorStack> {$/;"	P	implementation:X509VerifyParamRef
set_isoweek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_isoweek(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_isoyear	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_isoyear(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_isoyear_div_100	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_isoyear_div_100(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_isoyear_mod_100	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_isoyear_mod_100(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_issuer_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn set_issuer_name(&mut self, issuer_name: &X509NameRef) -> Result<(), ErrorStack> {$/;"	P	implementation:X509Builder
set_keepalive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub fn set_keepalive(&mut self, dur: Option<Duration>) {$/;"	P	implementation:Connector
set_keylog_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_keylog_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    pub fn set_len(&mut self, size: u64) -> Result<(), io::Error> {$/;"	P	implementation:SpooledTempFile
set_london_with_dst_time_zone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn set_london_with_dst_time_zone() -> TzReset {$/;"	f	module:inner
set_los_angeles_time_zone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn set_los_angeles_time_zone() -> TzReset {$/;"	f	module:inner
set_lowerbound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn set_lowerbound(&mut self, c: u8, count: usize, both: bool, new_bound: usize) {$/;"	P	implementation:InlineStack
set_max_early_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_max_early_data(&mut self, bytes: u32) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_max_early_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_max_early_data(&mut self, bytes: u32) -> Result<(), ErrorStack> {$/;"	P	implementation:SslRef
set_max_proto_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_max_proto_version(&mut self, version: Option<SslVersion>) -> Result<(), ErrorStac/;"	P	implementation:SslContextBuilder
set_message	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn set_message(mut self, message: impl Into<Message>) -> Self {$/;"	P	implementation:Error
set_min_proto_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_min_proto_version(&mut self, version: Option<SslVersion>) -> Result<(), ErrorStac/;"	P	implementation:SslContextBuilder
set_minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_minute(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_mode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_mode(&mut self, mode: SslMode) -> SslMode {$/;"	P	implementation:SslContextBuilder
set_month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_month(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_mtu	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_mtu(&mut self, mtu: u32) -> Result<(), ErrorStack> {$/;"	P	implementation:SslRef
set_nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_nanosecond(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_negative	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn set_negative(&mut self, negative: bool) {$/;"	P	implementation:BigNumRef
set_new_session_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_new_session_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_not_after	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn set_not_after(&mut self, not_after: &Asn1TimeRef) -> Result<(), ErrorStack> {$/;"	P	implementation:X509Builder
set_not_before	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn set_not_before(&mut self, not_before: &Asn1TimeRef) -> Result<(), ErrorStack> {$/;"	P	implementation:X509Builder
set_ocsp_status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_ocsp_status(&mut self, response: &[u8]) -> Result<(), ErrorStack> {$/;"	P	implementation:SslRef
set_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_offset(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn set_opt<A: ToTokens>(&mut self, obj: A, value: Option<T>) {$/;"	P	implementation:Attr
set_options	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_options(&mut self, option: SslOptions) -> SslOptions {$/;"	P	implementation:SslContextBuilder
set_ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_ordinal(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_peer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^    pub fn set_peer<T>(&mut self, key: &'a PKeyRef<T>) -> Result<(), ErrorStack>$/;"	P	implementation:Deriver
set_private_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    pub fn set_private_key(self, priv_key: BigNum) -> Result<Dh<Private>, ErrorStack> {$/;"	P	implementation:Dh
set_private_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_private_key<T>(&mut self, key: &PKeyRef<T>) -> Result<(), ErrorStack>$/;"	P	implementation:SslContextBuilder
set_private_key_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_private_key_file<P: AsRef<Path>>($/;"	P	implementation:SslContextBuilder
set_psk_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_psk_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_psk_client_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_psk_client_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_psk_server_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_psk_server_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_pubkey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn set_pubkey<T>(&mut self, key: &PKeyRef<T>) -> Result<(), ErrorStack>$/;"	P	implementation:X509Builder
set_pubkey	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn set_pubkey<T>(&mut self, key: &PKeyRef<T>) -> Result<(), ErrorStack>$/;"	P	implementation:X509ReqBuilder
set_raw_comment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn set_raw_comment(&mut self, comment: Vec<u8>) {$/;"	P	implementation:ZipWriter
set_read_ahead	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_read_ahead(&mut self, read_ahead: bool) {$/;"	P	implementation:SslContextBuilder
set_remove_session_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_remove_session_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_rsa_mgf1_md	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn set_rsa_mgf1_md(&mut self, md: MessageDigest) -> Result<(), ErrorStack> {$/;"	P	implementation:Decrypter
set_rsa_mgf1_md	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn set_rsa_mgf1_md(&mut self, md: MessageDigest) -> Result<(), ErrorStack> {$/;"	P	implementation:Encrypter
set_rsa_mgf1_md	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn set_rsa_mgf1_md(&mut self, md: MessageDigest) -> Result<(), ErrorStack> {$/;"	P	implementation:Signer
set_rsa_mgf1_md	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn set_rsa_mgf1_md(&mut self, md: MessageDigest) -> Result<(), ErrorStack> {$/;"	P	implementation:Verifier
set_rsa_oaep_label	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn set_rsa_oaep_label(&mut self, label: &[u8]) -> Result<(), ErrorStack> {$/;"	P	implementation:Encrypter
set_rsa_oaep_md	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn set_rsa_oaep_md(&mut self, md: MessageDigest) -> Result<(), ErrorStack> {$/;"	P	implementation:Decrypter
set_rsa_oaep_md	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn set_rsa_oaep_md(&mut self, md: MessageDigest) -> Result<(), ErrorStack> {$/;"	P	implementation:Encrypter
set_rsa_padding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn set_rsa_padding(&mut self, padding: Padding) -> Result<(), ErrorStack> {$/;"	P	implementation:Decrypter
set_rsa_padding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^    pub fn set_rsa_padding(&mut self, padding: Padding) -> Result<(), ErrorStack> {$/;"	P	implementation:Encrypter
set_rsa_padding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn set_rsa_padding(&mut self, padding: Padding) -> Result<(), ErrorStack> {$/;"	P	implementation:Signer
set_rsa_padding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn set_rsa_padding(&mut self, padding: Padding) -> Result<(), ErrorStack> {$/;"	P	implementation:Verifier
set_rsa_pss_saltlen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn set_rsa_pss_saltlen(&mut self, len: RsaPssSaltlen) -> Result<(), ErrorStack> {$/;"	P	implementation:Signer
set_rsa_pss_saltlen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn set_rsa_pss_saltlen(&mut self, len: RsaPssSaltlen) -> Result<(), ErrorStack> {$/;"	P	implementation:Verifier
set_second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_second(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_serial_number	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn set_serial_number(&mut self, serial_number: &Asn1IntegerRef) -> Result<(), ErrorStack/;"	P	implementation:X509Builder
set_servername_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_servername_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_session	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub unsafe fn set_session(&mut self, session: &SslSessionRef) -> Result<(), ErrorStack> {$/;"	P	implementation:SslRef
set_session_cache_mode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_session_cache_mode(&mut self, mode: SslSessionCacheMode) -> SslSessionCacheMode {$/;"	P	implementation:SslContextBuilder
set_session_cache_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_session_cache_size(&mut self, size: i32) -> i64 {$/;"	P	implementation:SslContextBuilder
set_session_id_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_session_id_context(&mut self, sid_ctx: &[u8]) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_shutdown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_shutdown(&mut self, state: ShutdownState) {$/;"	P	implementation:SslStream
set_sigalgs_list	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_sigalgs_list(&mut self, sigalgs: &str) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn set_source(mut self, source: Box<dyn error::Error + Send + Sync>) -> Self {$/;"	P	implementation:Error
set_ssl_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_ssl_context(&mut self, ctx: &SslContextRef) -> Result<(), ErrorStack> {$/;"	P	implementation:SslRef
set_stateless_cookie_generate_cb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_stateless_cookie_generate_cb<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_stateless_cookie_verify_cb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_stateless_cookie_verify_cb<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_status_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_status_callback<F>(&mut self, callback: F) -> Result<(), ErrorStack>$/;"	P	implementation:SslContextBuilder
set_status_type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_status_type(&mut self, type_: StatusType) -> Result<(), ErrorStack> {$/;"	P	implementation:SslRef
set_subject_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn set_subject_name(&mut self, subject_name: &X509NameRef) -> Result<(), ErrorStack> {$/;"	P	implementation:X509Builder
set_subject_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn set_subject_name(&mut self, subject_name: &X509NameRef) -> Result<(), ErrorStack> {$/;"	P	implementation:X509ReqBuilder
set_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn set_tag(&mut self, tag: &[u8]) -> Result<(), ErrorStack> {$/;"	P	implementation:Crypter
set_tag_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn set_tag_len(&mut self, tag_len: usize) -> Result<(), ErrorStack> {$/;"	P	implementation:Crypter
set_term_width	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn set_term_width(self, width: usize) -> Self {$/;"	P	implementation:App
set_time_zone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn set_time_zone() -> TzReset {$/;"	f	module:tests
set_time_zone_la_or_london	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn set_time_zone_la_or_london(london: bool) -> TzReset {$/;"	f	module:tests
set_time_zone_london_dst	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn set_time_zone_london_dst() -> TzReset {$/;"	f	module:tests
set_timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(crate) fn set_timeout(&mut self, timeout: Option<Duration>) {$/;"	P	implementation:Connector
set_timestamp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_timestamp(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_tlsext_use_srtp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_tlsext_use_srtp(&mut self, protocols: &str) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_tlsext_use_srtp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_tlsext_use_srtp(&mut self, protocols: &str) -> Result<(), ErrorStack> {$/;"	P	implementation:SslRef
set_tmp_dh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_tmp_dh(&mut self, dh: &DhRef<Params>) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_tmp_dh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_tmp_dh(&mut self, dh: &DhRef<Params>) -> Result<(), ErrorStack> {$/;"	P	implementation:SslRef
set_tmp_dh_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_tmp_dh_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_tmp_dh_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_tmp_dh_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslRef
set_tmp_ecdh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_tmp_ecdh(&mut self, key: &EcKeyRef<Params>) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_tmp_ecdh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_tmp_ecdh(&mut self, key: &EcKeyRef<Params>) -> Result<(), ErrorStack> {$/;"	P	implementation:SslRef
set_tmp_ecdh_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_tmp_ecdh_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslContextBuilder
set_tmp_ecdh_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_tmp_ecdh_callback<F>(&mut self, callback: F)$/;"	P	implementation:SslRef
set_true	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    fn set_true<A: ToTokens>(&mut self, obj: A) {$/;"	P	implementation:BoolAttr
set_use_server_name_indication	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn set_use_server_name_indication(&mut self, use_sni: bool) {$/;"	P	implementation:ConnectConfiguration
set_verbose	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    pub(crate) fn set_verbose(&mut self, enabled: bool) {$/;"	P	implementation:Connector
set_verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_verify(&mut self, mode: SslVerifyMode) {$/;"	P	implementation:SslContextBuilder
set_verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_verify(&mut self, mode: SslVerifyMode) {$/;"	P	implementation:SslRef
set_verify_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_verify_callback<F>(&mut self, mode: SslVerifyMode, verify: F)$/;"	P	implementation:SslContextBuilder
set_verify_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_verify_callback<F>(&mut self, mode: SslVerifyMode, verify: F)$/;"	P	implementation:SslRef
set_verify_cert_store	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_verify_cert_store(&mut self, cert_store: X509Store) -> Result<(), ErrorStack> {$/;"	P	implementation:SslContextBuilder
set_verify_depth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn set_verify_depth(&mut self, depth: u32) {$/;"	P	implementation:SslContextBuilder
set_verify_hostname	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn set_verify_hostname(&mut self, verify_hostname: bool) {$/;"	P	implementation:ConnectConfiguration
set_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn set_version(&mut self, version: i32) -> Result<(), ErrorStack> {$/;"	P	implementation:X509Builder
set_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn set_version(&mut self, version: i32) -> Result<(), ErrorStack> {$/;"	P	implementation:X509ReqBuilder
set_wait_on_exit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn set_wait_on_exit(mut self, yes: bool) -> Self {$/;"	P	implementation:Error
set_week_from_mon	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_week_from_mon(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_week_from_sun	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_week_from_sun(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_weekday(&mut self, value: Weekday) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_weekday_with_num_days_from_sunday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn set_weekday_with_num_days_from_sunday(p: &mut Parsed, v: i64) -> ParseResult<()> {$/;"	f
set_weekday_with_number_from_monday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn set_weekday_with_number_from_monday(p: &mut Parsed, v: i64) -> ParseResult<()> {$/;"	f
set_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_year(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_year_div_100	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_year_div_100(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
set_year_mod_100	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn set_year_mod_100(&mut self, value: i64) -> ParseResult<()> {$/;"	P	implementation:Parsed
setting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn setting<F>(mut self, setting: F) -> Self$/;"	P	implementation:Arg
setting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn setting<F>(mut self, setting: F) -> Self$/;"	P	implementation:App
settings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn settings(mut self, settings: &[AppSettings]) -> Self {$/;"	P	implementation:App
settings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    settings: AppFlags,$/;"	m	struct:App
sha	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod sha;$/;"	n
sha1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn sha1() -> MessageDigest {$/;"	P	implementation:MessageDigest
sha1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^pub fn sha1(data: &[u8]) -> [u8; 20] {$/;"	f
sha224	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn sha224() -> MessageDigest {$/;"	P	implementation:MessageDigest
sha224	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^pub fn sha224(data: &[u8]) -> [u8; 28] {$/;"	f
sha256	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn sha256() -> MessageDigest {$/;"	P	implementation:MessageDigest
sha256	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^pub fn sha256(data: &[u8]) -> [u8; 32] {$/;"	f
sha384	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn sha384() -> MessageDigest {$/;"	P	implementation:MessageDigest
sha384	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^pub fn sha384(data: &[u8]) -> [u8; 48] {$/;"	f
sha3_224	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn sha3_224() -> MessageDigest {$/;"	P	implementation:MessageDigest
sha3_256	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn sha3_256() -> MessageDigest {$/;"	P	implementation:MessageDigest
sha3_384	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn sha3_384() -> MessageDigest {$/;"	P	implementation:MessageDigest
sha3_512	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn sha3_512() -> MessageDigest {$/;"	P	implementation:MessageDigest
sha512	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn sha512() -> MessageDigest {$/;"	P	implementation:MessageDigest
sha512	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^pub fn sha512(data: &[u8]) -> [u8; 64] {$/;"	f
shake_128	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn shake_128() -> MessageDigest {$/;"	P	implementation:MessageDigest
shake_256	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn shake_256() -> MessageDigest {$/;"	P	implementation:MessageDigest
shell	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/mod.rs	/^mod shell;$/;"	n
shells	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/lib.rs	/^pub mod shells;$/;"	n
shl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn shl(self, n: i32) -> BigNum {$/;"	P	implementation:BigNum
shl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn shl(self, n: i32) -> BigNum {$/;"	P	implementation:BigNumRef
short	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn short(mut self, s: char) -> Self {$/;"	P	implementation:Arg
short	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn short(&mut self, arg: &mut Arg<'help>) {$/;"	P	implementation:UsageParser
short	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn short(&mut self, arg: &Arg<'help>) -> io::Result<()> {$/;"	P	implementation:Help
short_alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn short_alias(mut self, name: char) -> Self {$/;"	P	implementation:Arg
short_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn short_aliases(mut self, names: &[char]) -> Self {$/;"	P	implementation:Arg
short_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn short_flag(mut self, short: char) -> Self {$/;"	P	implementation:App
short_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    short_flag: Option<char>,$/;"	m	struct:App
short_flag_alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn short_flag_alias(mut self, name: char) -> Self {$/;"	P	implementation:App
short_flag_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn short_flag_aliases(mut self, names: &[char]) -> Self {$/;"	P	implementation:App
short_flag_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    short_flag_aliases: Vec<(char, bool)>,      \/\/ (name, visible)$/;"	m	struct:App
short_flag_aliases_to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn short_flag_aliases_to(&self, flag: char) -> bool {$/;"	P	implementation:App
short_month0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn short_month0(s: &str) -> ParseResult<(&str, u8)> {$/;"	f
short_months	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn short_months(locale: Locale) -> &'static [&'static str] {$/;"	f
short_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^    pub fn short_name(&self) -> Result<&'static str, ErrorStack> {$/;"	P	implementation:Nid
short_or_long	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn short_or_long(&mut self, arg: &mut Arg<'help>) {$/;"	P	implementation:UsageParser
short_or_long_month0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn short_or_long_month0(s: &str) -> ParseResult<(&str, u8)> {$/;"	f
short_or_long_weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn short_or_long_weekday(s: &str) -> ParseResult<(&str, Weekday)> {$/;"	f
short_weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn short_weekday(s: &str) -> ParseResult<(&str, Weekday)> {$/;"	f
short_weekdays	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn short_weekdays(locale: Locale) -> &'static [&'static str] {$/;"	f
shorts_and_visible_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^pub fn shorts_and_visible_aliases(p: &Command) -> Vec<char> {$/;"	f
should_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn should_error(&mut self) {$/;"	P	implementation:Builder
should_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    should_error: bool,$/;"	m	struct:Builder
should_show_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^fn should_show_arg(use_long: bool, arg: &Arg) -> bool {$/;"	f
should_show_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^fn should_show_subcommand(subcommand: &Command) -> bool {$/;"	f
shr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn shr(self, n: i32) -> BigNum {$/;"	P	implementation:BigNum
shr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn shr(self, n: i32) -> BigNum {$/;"	P	implementation:BigNumRef
shutdown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn shutdown(&mut self) -> Result<ShutdownResult, Error> {$/;"	P	implementation:SslStream
shutdown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn shutdown() {$/;"	f
sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/cms.rs	/^    pub fn sign<T>($/;"	P	implementation:CmsContentInfo
sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ecdsa.rs	/^    pub fn sign<T>(data: &[u8], eckey: &EcKeyRef<T>) -> Result<EcdsaSig, ErrorStack>$/;"	P	implementation:EcdsaSig
sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod sign;$/;"	n
sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^    pub fn sign<PT>($/;"	P	implementation:Pkcs7
sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn sign(&self, buf: &mut [u8]) -> Result<usize, ErrorStack> {$/;"	P	implementation:Signer
sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn sign<T>(&mut self, key: &PKeyRef<T>, hash: MessageDigest) -> Result<(), ErrorStack>$/;"	P	implementation:X509Builder
sign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn sign<T>(&mut self, key: &PKeyRef<T>, hash: MessageDigest) -> Result<(), ErrorStack>$/;"	P	implementation:X509ReqBuilder
sign_and_verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ecdsa.rs	/^    fn sign_and_verify() {$/;"	f	module:test
sign_oneshot	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn sign_oneshot($/;"	P	implementation:Signer
sign_oneshot_to_vec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn sign_oneshot_to_vec(&mut self, data_buf: &[u8]) -> Result<Vec<u8>, ErrorStack> {$/;"	P	implementation:Signer
sign_to_vec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn sign_to_vec(&self) -> Result<Vec<u8>, ErrorStack> {$/;"	P	implementation:Signer
sign_verify_test_detached	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^    fn sign_verify_test_detached() {$/;"	f	module:tests
sign_verify_test_normal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^    fn sign_verify_test_normal() {$/;"	f	module:tests
signature	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn signature(&self) -> &Asn1BitStringRef {$/;"	P	implementation:X509Ref
signature	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn signature() {$/;"	f
signature_algorithm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn signature_algorithm(&self) -> &X509AlgorithmRef {$/;"	P	implementation:X509Ref
signature_algorithms	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^    pub fn signature_algorithms(&self) -> Option<SignatureAlgorithms> {$/;"	P	implementation:Nid
signature_digest	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^    fn signature_digest() {$/;"	f	module:test
signed_duration_since	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn signed_duration_since<Tz2: TimeZone>(self, rhs: Date<Tz2>) -> OldDuration {$/;"	P	implementation:Date
signed_duration_since	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn signed_duration_since<Tz2: TimeZone>(self, rhs: DateTime<Tz2>) -> OldDuration {$/;"	P	implementation:DateTime
signed_duration_since	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn signed_duration_since(self, rhs: NaiveDate) -> OldDuration {$/;"	P	implementation:NaiveDate
signed_duration_since	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn signed_duration_since(self, rhs: NaiveDateTime) -> OldDuration {$/;"	P	implementation:NaiveDateTime
signed_duration_since	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    pub fn signed_duration_since(self, rhs: NaiveTime) -> OldDuration {$/;"	P	implementation:NaiveTime
signers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^    fn signers() {$/;"	f	module:tests
signers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^    pub fn signers($/;"	P	implementation:Pkcs7Ref
simd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^mod simd {$/;"	n
simd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    simd: [u8; 16],$/;"	m	struct:LookupTable
simd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^mod simd {$/;"	n
simd_test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    mod simd_test {$/;"	n	module:simd
simple_broken_link_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn simple_broken_link_callback() {$/;"	f	module:test
simple_key_allowed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    simple_key_allowed: bool,$/;"	m	struct:Scanner
simple_keys	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    simple_keys: Vec<SimpleKey>,$/;"	m	struct:Scanner
simple_match	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^        fn simple_match() {$/;"	f	module:simd::simd_test
simple_no_match	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^        fn simple_no_match() {$/;"	f	module:simd::simd_test
single	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn single(self) -> Option<T> {$/;"	P	implementation:LocalResult
single_open_fish	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^        fn single_open_fish() {$/;"	f	module:simd::simd_test
single_open_fish_bracket	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn single_open_fish_bracket() {$/;"	f	module:test
singular_or_plural	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn singular_or_plural(n: usize) -> &'static str {$/;"	P	implementation:Error
site_data	/mnt/c/Users/SamanthaC/rust/md_puppy/src/main.rs	/^mod site_data;$/;"	n
site_name	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    pub site_name: String,$/;"	m	struct:Site
size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    pub fn size(&self) -> u32 {$/;"	f
size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn size(&self) -> usize {$/;"	P	implementation:MessageDigest
size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    pub fn size(&self) -> usize {$/;"	P	implementation:PKeyRef
size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    pub fn size(&self) -> u32 {$/;"	f
size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn size(&self) -> u64 {$/;"	P	implementation:ZipFile
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Chain
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:NaiveDateDaysIterator
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:NaiveDateWeeksIterator
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:GroupedValues
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Indices
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:OsValues
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Values
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IntoIter
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:Iter
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    fn size_hint(&self) -> (usize, Option<usize>) {$/;"	P	implementation:IterMut
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn size_hint(&self) -> http_body::SizeHint {$/;"	P	implementation:ImplStream
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn size_hint(&self) -> http_body::SizeHint {$/;"	P	implementation:WrapHyper
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/decoder.rs	/^    fn size_hint(&self) -> http_body::SizeHint {$/;"	P	implementation:Decoder
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	interface:MapAccess
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	P	interface:SeqAccess
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn size_hint(&self) -> Option<usize> {$/;"	f
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn size_hint(&self) -> Option<usize> {$/;"	f	module:content
size_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/mod.rs	/^pub mod size_hint;$/;"	n
sized	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    pub fn sized<R: Read + Send + 'static>(reader: R, len: u64) -> Body {$/;"	P	implementation:Body
skip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn skip(&mut self) {$/;"	P	implementation:Parser
skip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn skip(&mut self) {$/;"	P	implementation:Scanner
skip_deserializing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn skip_deserializing(&self) -> bool {$/;"	P	implementation:Field
skip_deserializing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn skip_deserializing(&self) -> bool {$/;"	P	implementation:Variant
skip_deserializing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    skip_deserializing: bool,$/;"	m	struct:Field
skip_deserializing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    skip_deserializing: bool,$/;"	m	struct:Variant
skip_exist	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub skip_exist: bool,$/;"	m	struct:CopyOptions
skip_exist	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^    pub skip_exist: bool,$/;"	m	struct:CopyOptions
skip_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	P	interface:SerializeStruct
skip_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/mod.rs	/^    fn skip_field(&mut self, key: &'static str) -> Result<(), Self::Error> {$/;"	P	interface:SerializeStructVariant
skip_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    fn skip_field(&self, span: Span) -> Option<TokenStream> {$/;"	P	implementation:StructTrait
skip_line	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn skip_line(&mut self) {$/;"	P	implementation:Scanner
skip_serializing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn skip_serializing(&self) -> bool {$/;"	P	implementation:Field
skip_serializing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn skip_serializing(&self) -> bool {$/;"	P	implementation:Variant
skip_serializing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    skip_serializing: bool,$/;"	m	struct:Field
skip_serializing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    skip_serializing: bool,$/;"	m	struct:Variant
skip_serializing_if	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn skip_serializing_if(&self) -> Option<&syn::ExprPath> {$/;"	P	implementation:Field
skip_serializing_if	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    skip_serializing_if: Option<syn::ExprPath>,$/;"	m	struct:Field
skip_to_next_token	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn skip_to_next_token(&mut self) {$/;"	P	implementation:Scanner
sm3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn sm3() -> MessageDigest {$/;"	P	implementation:MessageDigest
small_boxed_str_clones_to_stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn small_boxed_str_clones_to_stack() {$/;"	f	module:test_special_string
smime_read_cms	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/cms.rs	/^    pub fn smime_read_cms(smime: &[u8]) -> Result<CmsContentInfo, ErrorStack> {$/;"	P	implementation:CmsContentInfo
sni	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    sni: bool,$/;"	m	struct:ConnectConfiguration
sni_callback_swapped_ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn sni_callback_swapped_ctx() {$/;"	f
socks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^mod socks {$/;"	n
socks5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn socks5(addr: SocketAddr) -> crate::Result<Self> {$/;"	P	implementation:ProxyScheme
socks5h	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn socks5h(addr: SocketAddr) -> crate::Result<Self> {$/;"	P	implementation:ProxyScheme
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	f
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	f
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	interface:StdError
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/wrapper.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	implementation:BoxedError
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	P	implementation:Error
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    source: Option<Box<dyn error::Error + Send + Sync>>,$/;"	m	struct:ErrorInner
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn source(&self) -> Option<ValueSource> {$/;"	P	implementation:MatchedArg
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	implementation:HandshakeError
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	P	implementation:Error
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    fn source(&self) -> Option<&(dyn StdError + 'static)> {$/;"	P	implementation:Error
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    source: Option<BoxError>,$/;"	m	struct:Inner
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/std_error.rs	/^    fn source(&self) -> Option<&(Error + 'static)> {$/;"	P	interface:Error
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/error.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	P	implementation:PathError
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	P	implementation:PathPersistError
source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn source(&self) -> Option<&(dyn error::Error + 'static)> {$/;"	P	implementation:PersistError
sp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^macro_rules! sp {$/;"	M
space	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn space(s: &str) -> ParseResult<&str> {$/;"	f
spaces	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn spaces(&mut self, n: usize) -> io::Result<()> {$/;"	P	implementation:Help
spaces_remaining	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    spaces_remaining: usize,$/;"	m	struct:LineStart
span	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub span: Range<usize>,$/;"	m	struct:LinkDef
span	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub span: std::ops::Range<usize>,$/;"	m	struct:BrokenLink
span	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn span<F>(f: F) -> Duration where F: FnOnce() {$/;"	P	implementation:Duration
span_for_digits	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^fn span_for_digits(digits: u16) -> u32 {$/;"	f
spanned_tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn spanned_tokens(s: &syn::LitStr) -> parse::Result<TokenStream> {$/;"	f
spec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/lib.rs	/^mod spec;$/;"	n
spec_vals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn spec_vals(&self, a: &Arg) -> String {$/;"	P	implementation:Help
special_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^fn special_bytes(options: &Options) -> [bool; 256] {$/;"	f
spine	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    spine: Vec<TreeIndex>, \/\/ indices of nodes on path to current node$/;"	m	struct:Tree
spine_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn spine_len(&self) -> usize {$/;"	P	implementation:Tree
split	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        fn split(self) -> (A, B) {$/;"	P	implementation:private::B
split	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        fn split(self) -> (Self::First, Self::Second);$/;"	P	interface:private::Pair
split_with_de_lifetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn split_with_de_lifetime($/;"	f
spooled	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^mod spooled;$/;"	n
spooled_tempfile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^pub fn spooled_tempfile(max_size: usize) -> SpooledTempFile {$/;"	f
sqr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn sqr(&mut self, a: &BigNumRef, ctx: &mut BigNumContextRef) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
srtp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod srtp;$/;"	n
srtp_profiles	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn srtp_profiles(&self) -> Option<&StackRef<SrtpProtectionProfile>> {$/;"	P	implementation:SslRef
ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod ssl;$/;"	n
ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    ssl: Ssl,$/;"	m	struct:ConnectConfiguration
ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn ssl(&self) -> &SslRef {$/;"	P	implementation:MidHandshakeSslStream
ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn ssl(&self) -> &SslRef {$/;"	P	implementation:SslStream
ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn ssl(&self) -> &SslRef {$/;"	P	implementation:SslStreamBuilder
ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    ssl: ManuallyDrop<Ssl>,$/;"	m	struct:SslStream
ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn ssl(&mut self) -> &mut SslRef {$/;"	P	implementation:ClientSslBuilder
ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    ssl: Ssl,$/;"	m	struct:ClientSslBuilder
ssl_cb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    pub fn ssl_cb<F>(&mut self, cb: F)$/;"	P	implementation:Builder
ssl_cb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/server.rs	/^    ssl_cb: Box<dyn FnMut(&mut SslRef) + Send>,$/;"	m	struct:Builder
ssl_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn ssl_context(&self) -> &SslContextRef {$/;"	P	implementation:SslRef
ssl_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/error.rs	/^    pub fn ssl_error(&self) -> Option<&ErrorStack> {$/;"	P	implementation:Error
ssl_idx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn ssl_idx() -> Result<Index<X509StoreContext, SslRef>, ErrorStack> {$/;"	P	implementation:X509StoreContext
ssl_peek	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn ssl_peek(&mut self, buf: &mut [u8]) -> Result<usize, Error> {$/;"	P	implementation:SslStream
ssl_raw_verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/callbacks.rs	/^pub extern "C" fn ssl_raw_verify<F>($/;"	f
ssl_read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn ssl_read(&mut self, buf: &mut [u8]) -> Result<usize, Error> {$/;"	P	implementation:SslStream
ssl_verify_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn ssl_verify_callback() {$/;"	f
ssl_write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn ssl_write(&mut self, buf: &[u8]) -> Result<usize, Error> {$/;"	P	implementation:SslStream
stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod stack;$/;"	n
stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    stack: &'a StackRef<T>,$/;"	m	struct:Iter
stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    stack: &'a mut StackRef<T>,$/;"	m	struct:IterMut
stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/stack.rs	/^    stack: *mut T::StackType,$/;"	m	struct:IntoIter
stack	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    stack: Vec<InlineEl>,$/;"	m	struct:InlineStack
stack_from_pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn stack_from_pem(pem: &[u8]) -> Result<Vec<X509>, ErrorStack> {$/;"	P	implementation:X509
stale_simple_keys	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn stale_simple_keys(&mut self) -> ScanResult {$/;"	P	implementation:Scanner
standalone_1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^    fn standalone_1() {$/;"	f	module:test
standalone_224	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^    fn standalone_224() {$/;"	f	module:test
standalone_256	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^    fn standalone_256() {$/;"	f	module:test
standalone_384	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^    fn standalone_384() {$/;"	f	module:test
standalone_512	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^    fn standalone_512() {$/;"	f	module:test
standard_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn standard_name(&self) -> Option<&'static str> {$/;"	P	implementation:SslCipherRef
start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    start: usize,$/;"	m	struct:UsageParser
start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub start: usize,$/;"	m	struct:Item
start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    start: TreeIndex, \/\/ offset of tree node$/;"	m	struct:InlineEl
start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    start: u64,$/;"	m	struct:ZipWriterStats
start_entry	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn start_entry<S>($/;"	P	implementation:ZipWriter
start_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^fn start_error(c: &mut Colorizer) {$/;"	f
start_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn start_file<S>(&mut self, name: S, mut options: FileOptions) -> ZipResult<()>$/;"	P	implementation:ZipWriter
start_file_aligned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn start_file_aligned<S>($/;"	P	implementation:ZipWriter
start_file_from_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn start_file_from_path($/;"	P	implementation:ZipWriter
start_file_with_extra_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn start_file_with_extra_data<S>($/;"	P	implementation:ZipWriter
start_tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    fn start_tag(&mut self, tag: Tag<'a>) -> io::Result<()> {$/;"	f
started	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^    started: bool,$/;"	m	struct:Indented
state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/chain.rs	/^    state: ChainState<'a>,$/;"	m	struct:Chain
state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^    state: crate::chain::ChainState<'a>,$/;"	m	struct:Chain
state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub state: TransitState,$/;"	m	struct:TransitProcess
state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^    pub state: dir::TransitState,$/;"	m	struct:TransitProcess
state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    state: State,$/;"	m	struct:Hasher
state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^unsafe fn state<'a, S: 'a>(bio: *mut BIO) -> &'a mut StreamState<S> {$/;"	f
state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn state() {$/;"	f
state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/dns.rs	/^    state: Arc<Mutex<State>>,$/;"	m	struct:TrustDnsResolver
state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    state: State,$/;"	m	struct:Parser
state_machine	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn state_machine(&mut self) -> ParseResult {$/;"	P	implementation:Parser
state_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn state_string(&self) -> &'static str {$/;"	P	implementation:SslRef
state_string_long	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn state_string_long(&self) -> &'static str {$/;"	P	implementation:SslRef
stateless	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn stateless(&mut self) -> Result<bool, ErrorStack> {$/;"	P	implementation:SslStream
stateless	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn stateless(&mut self) -> Result<bool, ErrorStack> {$/;"	f
stateless	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn stateless() {$/;"	f
states	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    states: Vec<State>,$/;"	m	struct:Parser
static_url	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    pub static_url: String,$/;"	m	struct:Site
stats	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    stats: ZipWriterStats,$/;"	m	struct:ZipWriter
status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        pub(crate) fn status(&self) -> BacktraceStatus {$/;"	P	implementation:capture::Backtrace
status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn status(&self) -> OcspResponseStatus {$/;"	P	implementation:OcspResponseRef
status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub status: OcspCertStatus,$/;"	m	struct:OcspStatus
status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub fn status(&self) -> StatusCode {$/;"	P	implementation:Response
status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    status: StatusCode,$/;"	m	struct:Response
status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn status(&self) -> StatusCode {$/;"	P	implementation:Response
status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub fn status(&self) -> Option<StatusCode> {$/;"	P	implementation:Error
status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    pub fn status(&self) -> StatusCode {$/;"	P	implementation:Attempt
status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    status: StatusCode,$/;"	m	struct:Attempt
status	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    pub fn status(&self) -> StatusCode {$/;"	P	implementation:Response
status_callbacks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn status_callbacks() {$/;"	f
status_code	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub(crate) fn status_code(url: Url, status: StatusCode) -> Error {$/;"	f
std_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/lib.rs	/^mod std_error;$/;"	n
stop	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    pub fn stop(self) -> Action {$/;"	P	implementation:Attempt
stop_at	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn stop_at<F>(&mut self, f: F)$/;"	P	implementation:UsageParser
store	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^pub mod store;$/;"	n
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    static RFC850_FMT: &'static str = "%A, %d-%b-%y %T GMT";$/;"	v	function:parse_rfc850
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static LONG_MONTH_SUFFIXES: [&'static str; 12] =$/;"	v	function:short_or_long_month0
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^    static LONG_WEEKDAY_SUFFIXES: [&'static str; 7] =$/;"	v	function:short_or_long_weekday
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^const HAVE_ALTERNATES: &'static str = "z";$/;"	v
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    const DEFAULT_NO_ARGS_TEMPLATE: &'static str = "\\$/;"	v	implementation:Help
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    const DEFAULT_TEMPLATE: &'static str = "\\$/;"	v	implementation:Help
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^impl<'a> IntoUrl for &'a str {}$/;"	c
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^impl<'a> IntoUrlSealed for &'a str {$/;"	c
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs", "nanos"];$/;"	v	method:Duration::deserialize
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        const FIELDS: &'static [&'static str] = &["secs_since_epoch", "nanos_since_epoch"];$/;"	v	method:SystemTime::deserialize
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Ok", "Err"];$/;"	v	function:deserialize
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        const VARIANTS: &'static [&'static str] = &["Unbounded", "Included", "Excluded"];$/;"	v	function:deserialize
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    pub const FIELDS: &'static [&'static str] = &["start", "end"];$/;"	v	module:range
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a str {$/;"	c
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^impl<'a> Expected for &'a str {$/;"	c
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for &'a str$/;"	c
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'a, E> IdentifierDeserializer<'a, E> for &'a str$/;"	c
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^impl Serialize for str {$/;"	c
str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/result.rs	/^    pub const PASSWORD_REQUIRED: &'static str = "Password required to decrypt file";$/;"	v	implementation:ZipError
str_to_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/mod.rs	/^mod str_to_bool;$/;"	n
str_to_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/str_to_bool.rs	/^pub(crate) fn str_to_bool(val: impl AsRef<str>) -> bool {$/;"	f
stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^    pub stream: S,$/;"	m	struct:StreamState
stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    stream: SslStream<S>,$/;"	m	struct:MidHandshakeSslStream
stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    pub(crate) fn stream<S>(stream: S) -> Body$/;"	P	implementation:Body
stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn stream<T: Into<Body>>(value: T) -> Part {$/;"	P	implementation:Part
stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub(crate) fn stream(mut self) -> Body {$/;"	P	implementation:Form
stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub fn stream<T: Into<Body>>(value: T) -> Part {$/;"	P	implementation:Part
stream_byte	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    fn stream_byte(&mut self) -> u8 {$/;"	P	implementation:ZipCryptoKeys
stream_end_produced	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    stream_end_produced: bool,$/;"	m	struct:Scanner
stream_ended	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn stream_ended(&self) -> bool {$/;"	P	implementation:Scanner
stream_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn stream_start(&mut self) -> ParseResult {$/;"	P	implementation:Parser
stream_start_produced	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    stream_start_produced: bool,$/;"	m	struct:Scanner
stream_started	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    pub fn stream_started(&self) -> bool {$/;"	P	implementation:Scanner
stream_to_end	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn stream_to_end() {$/;"	f	module:tests
stream_to_end_with_header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn stream_to_end_with_header() {$/;"	f	module:tests
stream_with_length	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn stream_with_length<T: Into<Body>>(value: T, length: u64) -> Part {$/;"	P	implementation:Part
strftime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^pub mod strftime;$/;"	n
strftime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn strftime<'a>(&'a self, format: &'a str) -> Result<TmFmt<'a>, ParseError> {$/;"	P	implementation:Tm
strftime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn strftime(format: &str, tm: &Tm) -> Result<String, ParseError> {$/;"	f
string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod string;$/;"	n
string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/mod.rs	/^mod string {$/;"	n
strings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^mod strings;$/;"	n
strptime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/parse.rs	/^pub fn strptime(mut s: &str, format: &str) -> Result<Tm, ParseError> {$/;"	f
struct_1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^    fn struct_1() {$/;"	f	module:test
struct_224	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^    fn struct_224() {$/;"	f	module:test
struct_256	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^    fn struct_256() {$/;"	f	module:test
struct_384	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^    fn struct_384() {$/;"	f	module:test
struct_512	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^    fn struct_512() {$/;"	f	module:test
struct_from_ast	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^fn struct_from_ast<'a>($/;"	f
struct_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn struct_variant<V>($/;"	P	interface:VariantAccess
struct_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        fn struct_variant<V>($/;"	f	module:private
struct_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn struct_variant<V>($/;"	f	module:content
style	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub style: Style,$/;"	m	struct:Variant
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn sub(self, rhs: Date<Tz>) -> OldDuration {$/;"	P	implementation:Date
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn sub(self, rhs: OldDuration) -> Date<Tz> {$/;"	P	implementation:Date
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn sub(self, rhs: DateTime<Tz>) -> OldDuration {$/;"	P	implementation:DateTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn sub(self, rhs: OldDuration) -> DateTime<Tz> {$/;"	P	implementation:DateTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn sub(self, rhs: NaiveDate) -> OldDuration {$/;"	P	implementation:NaiveDate
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn sub(self, rhs: OldDuration) -> NaiveDate {$/;"	P	implementation:NaiveDate
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn sub(self, rhs: NaiveDateTime) -> OldDuration {$/;"	P	implementation:NaiveDateTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn sub(self, rhs: OldDuration) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn sub(self, rhs: NaiveTime) -> OldDuration {$/;"	P	implementation:NaiveTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn sub(self, rhs: OldDuration) -> NaiveTime {$/;"	P	implementation:NaiveTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn sub(self, rhs: FixedOffset) -> DateTime<Tz> {$/;"	P	implementation:DateTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn sub(self, rhs: FixedOffset) -> NaiveDateTime {$/;"	P	implementation:NaiveDateTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn sub(self, rhs: FixedOffset) -> NaiveTime {$/;"	P	implementation:NaiveTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn sub(self, rhs: Duration) -> Duration {$/;"	P	implementation:Duration
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn sub(self, oth: &BigNumRef) -> BigNum {$/;"	P	implementation:BigNumRef
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    fn sub(self, rhs: usize) -> Self {$/;"	P	implementation:TreeIndex
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn sub(self, rhs: Duration) -> Duration {$/;"	P	implementation:Duration
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Duration) -> SteadyTime {$/;"	P	implementation:SteadyTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Duration) -> Timespec {$/;"	P	implementation:Timespec
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Duration) -> Tm {$/;"	P	implementation:Tm
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: SteadyTime) -> Duration {$/;"	P	implementation:SteadyTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Timespec) -> Duration {$/;"	P	implementation:Timespec
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn sub(self, other: Tm) -> Duration {$/;"	P	implementation:Tm
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn sub(self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::mac::SteadyTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn sub(self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::unix::SteadyTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn sub(self, other: SteadyTime) -> Duration {$/;"	P	implementation:inner::mac::SteadyTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn sub(self, other: SteadyTime) -> Duration {$/;"	P	implementation:inner::unix::SteadyTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn sub(self, _other: Duration) -> SteadyTime {$/;"	P	implementation:inner::SteadyTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn sub(self, _other: SteadyTime) -> Duration {$/;"	P	implementation:inner::SteadyTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn sub(self, other: Duration) -> SteadyTime {$/;"	P	implementation:inner::SteadyTime
sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn sub(self, other: SteadyTime) -> Duration {$/;"	P	implementation:inner::SteadyTime
sub_assign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn sub_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveDate
sub_assign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn sub_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveDateTime
sub_assign	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn sub_assign(&mut self, rhs: OldDuration) {$/;"	P	implementation:NaiveTime
sub_word	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn sub_word(&mut self, w: u32) -> Result<(), ErrorStack> {$/;"	P	implementation:BigNumRef
subcmd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn subcmd(&mut self, sc_str: &str, next_line_help: bool, longest: usize) -> io::Result<()> {$/;"	P	implementation:Help
subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn subcommand<S: Into<App<'help>>>(mut self, subcmd: S) -> Self {$/;"	P	implementation:App
subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn subcommand(&mut self, sc: SubCommand) {$/;"	P	implementation:ArgMatcher
subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn subcommand(&self) -> Option<(&str, &ArgMatches)> {$/;"	P	implementation:ArgMatches
subcommand_details	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/bash.rs	/^fn subcommand_details(cmd: &Command) -> String {$/;"	f
subcommand_details	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/zsh.rs	/^fn subcommand_details(p: &Command) -> String {$/;"	f
subcommand_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    subcommand_heading: Option<&'help str>,$/;"	m	struct:App
subcommand_help_heading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn subcommand_help_heading<T>(mut self, heading: T) -> Self$/;"	P	implementation:App
subcommand_matches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn subcommand_matches<T: Key>(&self, id: T) -> Option<&ArgMatches> {$/;"	P	implementation:ArgMatches
subcommand_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/arg_matcher.rs	/^    pub(crate) fn subcommand_name(&self) -> Option<&str> {$/;"	P	implementation:ArgMatcher
subcommand_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn subcommand_name(&self) -> Option<&str> {$/;"	P	implementation:ArgMatches
subcommand_negates_reqs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn subcommand_negates_reqs(self, yes: bool) -> Self {$/;"	P	implementation:App
subcommand_next_line_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn subcommand_next_line_help($/;"	P	implementation:Help
subcommand_precedence_over_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn subcommand_precedence_over_arg(self, yes: bool) -> Self {$/;"	P	implementation:App
subcommand_required	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn subcommand_required(self, yes: bool) -> Self {$/;"	P	implementation:App
subcommand_value_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn subcommand_value_name<S>(mut self, value_name: S) -> Self$/;"	P	implementation:App
subcommand_value_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    subcommand_value_name: Option<&'help str>,$/;"	m	struct:App
subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn subcommands<I, T>(mut self, subcmds: I) -> Self$/;"	P	implementation:App
subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    subcommands: Vec<App<'help>>,$/;"	m	struct:App
subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^pub fn subcommands(p: &Command) -> Vec<(String, String)> {$/;"	f
subcommands_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/zsh.rs	/^fn subcommands_of(p: &Command) -> String {$/;"	f
subject_alt_names	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn subject_alt_names(&self) -> Option<Stack<GeneralName>> {$/;"	P	implementation:X509Ref
subject_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn subject_name(&self) -> &X509NameRef {$/;"	P	implementation:X509Ref
subject_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn subject_name(&self) -> &X509NameRef {$/;"	P	implementation:X509ReqRef
subject_name_hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn subject_name_hash(&self) -> u32 {$/;"	P	implementation:X509Ref
succ	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn succ(&self) -> Date<Tz> {$/;"	P	implementation:Date
succ	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn succ(&self) -> Month {$/;"	P	implementation:Month
succ	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    pub fn succ(&self) -> Weekday {$/;"	P	implementation:Weekday
succ	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn succ(&self) -> NaiveDate {$/;"	P	implementation:NaiveDate
succ	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn succ(&self) -> Of {$/;"	P	implementation:Of
succ_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn succ_opt(&self) -> Option<Date<Tz>> {$/;"	P	implementation:Date
succ_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    pub fn succ_opt(&self) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
suffix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    pub fn suffix<S: AsRef<OsStr> + ?Sized>(&mut self, suffix: &'b S) -> &mut Self {$/;"	P	implementation:Builder
suffix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    suffix: &'b OsStr,$/;"	m	struct:Builder
suggestions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/features/mod.rs	/^pub(crate) mod suggestions;$/;"	n
surgerize_tight_list	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^fn surgerize_tight_list(tree: &mut Tree<Item>, list_ix: TreeIndex) {$/;"	f
switch_to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn switch_to(&mut self, compression: CompressionMethod) -> ZipResult<()> {$/;"	P	implementation:GenericZipWriter
symbol	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/mod.rs	/^mod symbol;$/;"	n
symbols	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        symbols: Vec<BacktraceSymbol>,$/;"	m	struct:capture::BacktraceFrame
symm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod symm;$/;"	n
syn_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ctxt.rs	/^    pub fn syn_error(&self, err: syn::Error) {$/;"	P	implementation:Ctxt
sync	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/backtrace.rs	/^        sync: Once,$/;"	m	struct:capture::LazilyResolvedCapture
sys	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod sys;$/;"	n
sys	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^mod sys;$/;"	n
system	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    pub(crate) fn system() -> Proxy {$/;"	P	implementation:Proxy
system	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    fn system() {$/;"	f	module:test
system	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub system: System,$/;"	m	struct:ZipFileData
system_time_to_file_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn system_time_to_file_time(sys: &SYSTEMTIME) -> FILETIME {$/;"	f
system_time_to_file_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn system_time_to_file_time(sys: &SYSTEMTIME) -> FILETIME {$/;"	f	module:inner
system_time_to_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn system_time_to_tm(sys: &SYSTEMTIME, tm: &mut Tm) {$/;"	f
system_time_to_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn system_time_to_tm(sys: &SYSTEMTIME, tm: &mut Tm) {$/;"	f	module:inner
t	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            t: libc::timespec,$/;"	m	struct:inner::unix::SteadyTime
t	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        pub struct SteadyTime { t: u64 }$/;"	m	struct:inner::mac::SteadyTime
t	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        t: Duration$/;"	m	struct:inner::SteadyTime
t	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        t: i64,$/;"	m	struct:inner::SteadyTime
t	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        t: u64$/;"	m	struct:inner::SteadyTime
t_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/locales.rs	/^pub(crate) fn t_fmt(locale: Locale) -> &'static str {$/;"	f
t_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    t_fmt: Fmt<'a>,$/;"	m	struct:StrftimeItems
tab_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^    tab_start: usize,$/;"	m	struct:LineStart
table_alignments	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    table_alignments: Vec<Alignment>,$/;"	m	struct:HtmlWriter
table_cell_index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    table_cell_index: usize,$/;"	m	struct:HtmlWriter
table_cell_span	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn table_cell_span() {$/;"	f	module:test
table_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    fn table_offset() {$/;"	f	module:test
table_state	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    table_state: TableState,$/;"	m	struct:HtmlWriter
tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub tag: &'static str,$/;"	m	struct:content::TagContentOtherFieldVisitor
tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub tag: &'static str,$/;"	m	struct:content::TagOrContentFieldVisitor
tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        pub tag: T,$/;"	m	struct:content::TaggedContent
tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    tag: &'static str,$/;"	m	struct:TaggedSerializer
tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn tag(&self) -> &TagType {$/;"	P	implementation:Container
tag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    tag: TagType,$/;"	m	struct:Container
tag_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        tag_name: &'static str,$/;"	m	struct:content::TaggedContentVisitor
tags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^        macro_rules! tags {$/;"	M	method:Help::write_templated_help
take_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^pub unsafe fn take_error<S>(bio: *mut BIO) -> Option<io::Error> {$/;"	f
take_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn take_fields(&mut self) -> Vec<(Cow<'static, str>, P)> {$/;"	P	implementation:FormParts
take_outgoing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        pub fn take_outgoing(&mut self) -> Outgoing<'_> {$/;"	P	implementation:stateless::MemoryStream
take_panic	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/bio.rs	/^pub unsafe fn take_panic<S>(bio: *mut BIO) -> Option<Box<dyn Any + Send>> {$/;"	f
takes_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn takes_value(self, yes: bool) -> Self {$/;"	P	implementation:Arg
tcp_keepalive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn tcp_keepalive<D>(mut self, val: D) -> ClientBuilder$/;"	P	implementation:ClientBuilder
tcp_keepalive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    tcp_keepalive: Option<Duration>,$/;"	m	struct:Config
tcp_keepalive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn tcp_keepalive<D>(self, val: D) -> ClientBuilder$/;"	P	implementation:ClientBuilder
tcp_nodelay	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn tcp_nodelay(mut self, enabled: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
tcp_nodelay	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn tcp_nodelay(self, enabled: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
tempdir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^pub fn tempdir() -> io::Result<TempDir> {$/;"	f
tempdir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    pub fn tempdir(&self) -> io::Result<TempDir> {$/;"	P	implementation:Builder
tempdir_in	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/dir.rs	/^pub fn tempdir_in<P: AsRef<Path>>(dir: P) -> io::Result<TempDir> {$/;"	f
tempdir_in	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    pub fn tempdir_in<P: AsRef<Path>>(&self, dir: P) -> io::Result<TempDir> {$/;"	P	implementation:Builder
tempfile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^pub fn tempfile() -> io::Result<File> {$/;"	f
tempfile	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    pub fn tempfile(&self) -> io::Result<NamedTempFile> {$/;"	P	implementation:Builder
tempfile_in	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^pub fn tempfile_in<P: AsRef<Path>>(dir: P) -> io::Result<File> {$/;"	f
tempfile_in	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^    pub fn tempfile_in<P: AsRef<Path>>(&self, dir: P) -> io::Result<NamedTempFile> {$/;"	P	implementation:Builder
template	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn template<S: Into<&'help str>>(self, s: S) -> Self {$/;"	P	implementation:App
template	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    template: Option<&'help str>,$/;"	m	struct:App
template_path	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    pub template_path: String,$/;"	m	struct:Site
template_url	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^    pub template_url: String,$/;"	m	struct:Site
term_w	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    term_w: Option<usize>,$/;"	m	struct:App
term_w	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    term_w: usize,$/;"	m	struct:Help
term_width	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn term_width(mut self, width: usize) -> Self {$/;"	P	implementation:App
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/app_settings.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_settings.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/features/suggestions.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/aes.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/cms.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ecdsa.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/encrypt.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs12.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sha.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^mod test;$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/linklabel.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        fn test(s: &str, format: &str) -> bool {$/;"	f	function:tests::test_strptime
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^mod test {$/;"	n	function:escape_str
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^mod test {$/;"	n
test	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^mod test {$/;"	n
test_a_flow_mapping	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_a_flow_mapping() {$/;"	f	module:test
test_a_flow_sequence	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_a_flow_sequence() {$/;"	f	module:test
test_aes128_ccm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes128_ccm() {$/;"	f	module:tests
test_aes128_ccm_verify_fail	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes128_ccm_verify_fail() {$/;"	f	module:tests
test_aes128_cfb1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes128_cfb1() {$/;"	f	module:tests
test_aes128_cfb128	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes128_cfb128() {$/;"	f	module:tests
test_aes128_cfb8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes128_cfb8() {$/;"	f	module:tests
test_aes128_ctr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes128_ctr() {$/;"	f	module:tests
test_aes128_gcm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes128_gcm() {$/;"	f	module:tests
test_aes128_ofb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes128_ofb() {$/;"	f	module:tests
test_aes192_cfb1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes192_cfb1() {$/;"	f	module:tests
test_aes192_cfb128	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes192_cfb128() {$/;"	f	module:tests
test_aes192_cfb8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes192_cfb8() {$/;"	f	module:tests
test_aes192_ctr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes192_ctr() {$/;"	f	module:tests
test_aes192_ofb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes192_ofb() {$/;"	f	module:tests
test_aes256_ccm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes256_ccm() {$/;"	f	module:tests
test_aes256_ccm_verify_fail	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes256_ccm_verify_fail() {$/;"	f	module:tests
test_aes256_cfb1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes256_cfb1() {$/;"	f	module:tests
test_aes256_cfb128	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes256_cfb128() {$/;"	f	module:tests
test_aes256_cfb8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes256_cfb8() {$/;"	f	module:tests
test_aes256_ofb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes256_ofb() {$/;"	f	module:tests
test_aes256_xts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes256_xts() {$/;"	f	module:tests
test_aes_128_ocb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes_128_ocb() {$/;"	f	module:tests
test_aes_128_ocb_fail	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes_128_ocb_fail() {$/;"	f	module:tests
test_aes_256_cbc_decrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes_256_cbc_decrypt() {$/;"	f	module:tests
test_aes_256_ecb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_aes_256_ecb() {$/;"	f	module:tests
test_aia_ca_issuer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_aia_ca_issuer() {$/;"	f
test_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_all() {$/;"	f	module:tests
test_all_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^    fn test_all_subcommands() {$/;"	f	module:tests
test_alpn_server_advertise_multiple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn test_alpn_server_advertise_multiple() {$/;"	f
test_alpn_server_select_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn test_alpn_server_select_none() {$/;"	f
test_alpn_server_select_none_fatal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn test_alpn_server_select_none_fatal() {$/;"	f
test_alpn_server_unilateral	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn test_alpn_server_unilateral() {$/;"	f
test_anchor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_anchor() {$/;"	f	module:test
test_api	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/lib.rs	/^    fn test_api() {$/;"	f	module:tests
test_as_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    fn test_as_bytes() {$/;"	f	module:tests
test_ascii	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/puncttable.rs	/^    fn test_ascii() {$/;"	f	module:tests
test_asctime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_asctime() {$/;"	f	module:tests
test_at	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_at() {$/;"	f	module:tests
test_at_utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_at_utc() {$/;"	f	module:tests
test_auto_conversion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn test_auto_conversion() {$/;"	f
test_bad_anchor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_bad_anchor() {$/;"	f	module:test
test_bad_docstart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_bad_docstart() {$/;"	f	module:test
test_bad_hyphen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_bad_hyphen() {$/;"	f	module:test
test_basic_auth_sensitive_header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn test_basic_auth_sensitive_header() {$/;"	f	module:tests
test_basic_auth_sensitive_header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn test_basic_auth_sensitive_header() {$/;"	f	module:tests
test_bearer_auth_sensitive_header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn test_bearer_auth_sensitive_header() {$/;"	f	module:tests
test_bearer_auth_sensitive_header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn test_bearer_auth_sensitive_header() {$/;"	f	module:tests
test_bf_cbc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_bf_cbc() {$/;"	f	module:tests
test_bf_cfb64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_bf_cfb64() {$/;"	f	module:tests
test_bf_ecb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_bf_ecb() {$/;"	f	module:tests
test_bf_ofb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_bf_ofb() {$/;"	f	module:tests
test_block_mappings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_block_mappings() {$/;"	f	module:test
test_block_sequences	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_block_sequences() {$/;"	f	module:test
test_body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    async fn test_body() {$/;"	f	module:tests
test_body_js_static_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    async fn test_body_js_static_str() {$/;"	f	module:tests
test_body_js_static_u8_slice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    async fn test_body_js_static_u8_slice() {$/;"	f	module:tests
test_body_js_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    async fn test_body_js_string() {$/;"	f	module:tests
test_body_js_vec_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    async fn test_body_js_vec_u8() {$/;"	f	module:tests
test_byte_by_byte	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^    fn test_byte_by_byte() {$/;"	f	module:test
test_cert_issue_validity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_cert_issue_validity() {$/;"	f
test_cert_loading	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_cert_loading() {$/;"	f
test_chacha20	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_chacha20() {$/;"	f	module:tests
test_chacha20_poly1305	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_chacha20_poly1305() {$/;"	f	module:tests
test_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_clone() {$/;"	f	module:tests
test_cmac	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn test_cmac() {$/;"	f	module:test
test_coerce	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_coerce() {$/;"	f	module:test
test_collections_in_mapping	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_collections_in_mapping() {$/;"	f	module:test
test_collections_in_sequence	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_collections_in_sequence() {$/;"	f	module:test
test_connect_with_srtp_ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn test_connect_with_srtp_ctx() {$/;"	f
test_connect_with_srtp_ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn test_connect_with_srtp_ssl() {$/;"	f
test_const_time_bn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn test_const_time_bn() {$/;"	f	module:tests
test_conversions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_conversions() {$/;"	f	module:tests
test_ctime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_ctime() {$/;"	f	module:tests
test_custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_custom() {$/;"	f	module:tests
test_date_add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_add() {$/;"	f	module:tests
test_date_addassignment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_addassignment() {$/;"	f	module:tests
test_date_before_1970	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_date_before_1970() {$/;"	f	module:tests
test_date_bounds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^fn test_date_bounds() {$/;"	f
test_date_extreme_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    fn test_date_extreme_offset() {$/;"	f	module:tests
test_date_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_fields() {$/;"	f	module:tests
test_date_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_fmt() {$/;"	f	module:tests
test_date_format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_format() {$/;"	f	module:tests
test_date_from_isoywd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_isoywd() {$/;"	f	module:tests
test_date_from_isoywd_and_iso_week	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_isoywd_and_iso_week() {$/;"	f	module:tests
test_date_from_num_days_from_ce	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_num_days_from_ce() {$/;"	f	module:tests
test_date_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_str() {$/;"	f	module:tests
test_date_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_date_from_str() {$/;"	f	module:tests
test_date_from_weekday_of_month_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_weekday_of_month_opt() {$/;"	f	module:tests
test_date_from_ymd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_ymd() {$/;"	f	module:tests
test_date_from_yo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_from_yo() {$/;"	f	module:tests
test_date_num_days_from_ce	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_num_days_from_ce() {$/;"	f	module:tests
test_date_parse_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_parse_from_str() {$/;"	f	module:tests
test_date_pred	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_pred() {$/;"	f	module:tests
test_date_sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_sub() {$/;"	f	module:tests
test_date_subassignment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_subassignment() {$/;"	f	module:tests
test_date_succ	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_succ() {$/;"	f	module:tests
test_date_weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_weekday() {$/;"	f	module:tests
test_date_with_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_date_with_fields() {$/;"	f	module:tests
test_datetime_add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_add() {$/;"	f	module:tests
test_datetime_add_sub_invariant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_add_sub_invariant() {$/;"	f	module:tests
test_datetime_addassignment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_addassignment() {$/;"	f	module:tests
test_datetime_date_and_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_date_and_time() {$/;"	f	module:tests
test_datetime_format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_format() {$/;"	f	module:tests
test_datetime_format_alignment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_format_alignment() {$/;"	f	module:tests
test_datetime_format_with_local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_format_with_local() {$/;"	f	module:tests
test_datetime_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_from_str() {$/;"	f	module:tests
test_datetime_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_from_str() {$/;"	f	module:tests
test_datetime_from_timestamp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_from_timestamp() {$/;"	f	module:tests
test_datetime_is_copy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_is_copy() {$/;"	f	module:tests
test_datetime_is_send	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_is_send() {$/;"	f	module:tests
test_datetime_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_offset() {$/;"	f	module:tests
test_datetime_parse_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_parse_from_str() {$/;"	f	module:tests
test_datetime_parse_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_parse_from_str() {$/;"	f	module:tests
test_datetime_rfc2822_and_rfc3339	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_rfc2822_and_rfc3339() {$/;"	f	module:tests
test_datetime_sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_sub() {$/;"	f	module:tests
test_datetime_subassignment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_subassignment() {$/;"	f	module:tests
test_datetime_timestamp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_datetime_timestamp() {$/;"	f	module:tests
test_datetime_with_timezone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_datetime_with_timezone() {$/;"	f	module:tests
test_day_iterator_limit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_day_iterator_limit() {$/;"	f	module:tests
test_debug	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_debug() {$/;"	f
test_decodable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_decodable() {$/;"	f	module:rustc_serialize
test_decodable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_decodable() {$/;"	f	module:rustc_serialize
test_decodable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_decodable() {$/;"	f	module:rustc_serialize
test_decodable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_decodable() {$/;"	f	module:rustc_serialize
test_decodable_json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn test_decodable_json<FUtc, FFixed, FLocal, E>($/;"	f
test_decodable_json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^fn test_decodable_json<F, E>(from_str: F)$/;"	f
test_decodable_json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^fn test_decodable_json<F, E>(from_str: F)$/;"	f
test_decodable_json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^fn test_decodable_json<F, E>(from_str: F)$/;"	f
test_decodable_json_timestamp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^fn test_decodable_json_timestamp<F, E>(from_str: F)$/;"	f
test_decodable_json_timestamps	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn test_decodable_json_timestamps<FUtc, FFixed, FLocal, E>($/;"	f
test_decodable_timestamps	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_decodable_timestamps() {$/;"	f	module:rustc_serialize
test_decodable_timestamps	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_decodable_timestamps() {$/;"	f	module:rustc_serialize
test_decode_block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/base64.rs	/^    fn test_decode_block() {$/;"	f	module:tests
test_deeply_nested_arrays	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn test_deeply_nested_arrays() {$/;"	f	module:escape_str::test
test_default_indices	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn test_default_indices() {$/;"	f	module:tests
test_default_indices_with_shorter_lifetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn test_default_indices_with_shorter_lifetime() {$/;"	f	module:tests
test_default_osvalues	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn test_default_osvalues() {$/;"	f	module:tests
test_default_osvalues_with_shorter_lifetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn test_default_osvalues_with_shorter_lifetime() {$/;"	f	module:tests
test_default_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn test_default_values() {$/;"	f	module:tests
test_default_values_with_shorter_lifetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn test_default_values_with_shorter_lifetime() {$/;"	f	module:tests
test_des_cbc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_des_cbc() {$/;"	f	module:tests
test_des_ecb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_des_ecb() {$/;"	f	module:tests
test_des_ede3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_des_ede3() {$/;"	f	module:tests
test_des_ede3_cbc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_des_ede3_cbc() {$/;"	f	module:tests
test_des_ede3_cfb64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_des_ede3_cfb64() {$/;"	f	module:tests
test_dh_accessor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_dh_accessor() {$/;"	f	module:tests
test_dh_conversion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_dh_conversion() {$/;"	f	module:tests
test_dh_from_der	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    fn test_dh_from_der() {$/;"	f	module:tests
test_dh_from_pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    fn test_dh_from_pem() {$/;"	f	module:tests
test_dh_generate_key_compute_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    fn test_dh_generate_key_compute_key() {$/;"	f	module:tests
test_dh_generate_params_generate_key_compute_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    fn test_dh_generate_params_generate_key_compute_key() {$/;"	f	module:tests
test_dh_params	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    fn test_dh_params() {$/;"	f	module:tests
test_dh_rfc5114	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    fn test_dh_rfc5114() {$/;"	f	module:tests
test_dh_stored_restored	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^    fn test_dh_stored_restored() {$/;"	f	module:tests
test_diff_lens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/memcmp.rs	/^    fn test_diff_lens() {$/;"	f	module:tests
test_div_mod_floor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/div.rs	/^    fn test_div_mod_floor() {$/;"	f	module:tests
test_dsa_accessor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_dsa_accessor() {$/;"	f	module:tests
test_dsa_conversion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_dsa_conversion() {$/;"	f	module:tests
test_dst	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_dst() {$/;"	f	module:tests
test_duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration() {$/;"	f	module:tests
test_duration	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration() {$/;"	f	module:tests
test_duration_checked_ops	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_checked_ops() {$/;"	f	module:tests
test_duration_checked_ops	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_checked_ops() {$/;"	f	module:tests
test_duration_div	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_div() {$/;"	f	module:tests
test_duration_div	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_div() {$/;"	f	module:tests
test_duration_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_fmt() {$/;"	f	module:tests
test_duration_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_fmt() {$/;"	f	module:tests
test_duration_mul	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_mul() {$/;"	f	module:tests
test_duration_mul	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_mul() {$/;"	f	module:tests
test_duration_num_days	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_days() {$/;"	f	module:tests
test_duration_num_days	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_days() {$/;"	f	module:tests
test_duration_num_microseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_microseconds() {$/;"	f	module:tests
test_duration_num_microseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_microseconds() {$/;"	f	module:tests
test_duration_num_milliseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_milliseconds() {$/;"	f	module:tests
test_duration_num_milliseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_milliseconds() {$/;"	f	module:tests
test_duration_num_nanoseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_nanoseconds() {$/;"	f	module:tests
test_duration_num_nanoseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_nanoseconds() {$/;"	f	module:tests
test_duration_num_seconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_duration_num_seconds() {$/;"	f	module:tests
test_duration_num_seconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_duration_num_seconds() {$/;"	f	module:tests
test_duration_round	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_duration_round() {$/;"	f	module:tests
test_duration_round_pre_epoch	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_duration_round_pre_epoch() {$/;"	f	module:tests
test_duration_trunc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_duration_trunc() {$/;"	f	module:tests
test_duration_trunc_pre_epoch	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_duration_trunc_pre_epoch() {$/;"	f	module:tests
test_ec_gen	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_ec_gen() {$/;"	f	module:tests
test_ec_key_accessor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_ec_key_accessor() {$/;"	f	module:tests
test_ec_key_conversion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_ec_key_conversion() {$/;"	f	module:tests
test_ec_key_derive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/derive.rs	/^    fn test_ec_key_derive() {$/;"	f	module:test
test_emit_avoid_quotes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn test_emit_avoid_quotes() {$/;"	f	module:escape_str::test
test_emit_complex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn test_emit_complex() {$/;"	f	module:escape_str::test
test_emit_simple	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn test_emit_simple() {$/;"	f	module:escape_str::test
test_empty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_empty() {$/;"	f	module:test
test_empty_and_nested	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn test_empty_and_nested() {$/;"	f	module:escape_str::test
test_empty_and_nested_compact	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn test_empty_and_nested_compact() {$/;"	f	module:escape_str::test
test_empty_and_nested_flag	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn test_empty_and_nested_flag(compact: bool) {$/;"	f	module:escape_str::test
test_empty_doc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_empty_doc() {$/;"	f	module:test
test_empty_reader	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^    fn test_empty_reader() {$/;"	f	module:test
test_empty_sys_no_proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_empty_sys_no_proxy() {$/;"	f	module:tests
test_encodable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_encodable() {$/;"	f	module:rustc_serialize
test_encodable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_encodable() {$/;"	f	module:rustc_serialize
test_encodable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_encodable() {$/;"	f	module:rustc_serialize
test_encodable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_encodable() {$/;"	f	module:rustc_serialize
test_encodable_json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^fn test_encodable_json<FUtc, FFixed, E>(to_string_utc: FUtc, to_string_fixed: FFixed)$/;"	f
test_encodable_json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^fn test_encodable_json<F, E>(to_string: F)$/;"	f
test_encodable_json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^fn test_encodable_json<F, E>(to_string: F)$/;"	f
test_encodable_json	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^fn test_encodable_json<F, E>(to_string: F)$/;"	f
test_encode_block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/base64.rs	/^    fn test_encode_block() {$/;"	f	module:tests
test_encrypted_pkcs8_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_encrypted_pkcs8_callback() {$/;"	f	module:tests
test_encrypted_pkcs8_passphrase	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_encrypted_pkcs8_passphrase() {$/;"	f	module:tests
test_eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/memcmp.rs	/^    fn test_eq() {$/;"	f	module:tests
test_explicit_scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_explicit_scalar() {$/;"	f	module:test
test_fail	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/lib.rs	/^    fn test_fail() {$/;"	f	module:tests
test_find_subcommand_with_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^    fn test_find_subcommand_with_path() {$/;"	f	module:tests
test_finish_twice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_finish_twice() {$/;"	f	module:tests
test_flag_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^    fn test_flag_subcommand() {$/;"	f	module:tests
test_flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^    fn test_flags() {$/;"	f	module:tests
test_format_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^fn test_format_u8() {$/;"	f
test_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    fn test_from() {$/;"	f	module:test
test_from_http_response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    fn test_from_http_response() {$/;"	f	module:tests
test_from_password	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn test_from_password() {$/;"	f	module:test
test_from_password_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn test_from_password_callback() {$/;"	f	module:test
test_from_std	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_from_std() {$/;"	f	module:tests
test_from_std	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_from_std() {$/;"	f	module:tests
test_from_system_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_from_system_time() {$/;"	f	module:tests
test_generate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    pub fn test_generate() {$/;"	f	module:test
test_get_sys_proxies_in_cgi	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_get_sys_proxies_in_cgi() {$/;"	f	module:tests
test_get_sys_proxies_parsing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_get_sys_proxies_parsing() {$/;"	f	module:tests
test_get_sys_proxies_registry_parsing	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_get_sys_proxies_registry_parsing() {$/;"	f	module:tests
test_get_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_get_time() {$/;"	f	module:tests
test_github_27	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_github_27() {$/;"	f	module:test
test_grouped_vals_first	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    fn test_grouped_vals_first() {$/;"	f	module:tests
test_grouped_vals_push_and_append	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    fn test_grouped_vals_push_and_append() {$/;"	f	module:tests
test_grouped_vals_removal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    fn test_grouped_vals_removal() {$/;"	f	module:tests
test_has_http_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_has_http_auth() {$/;"	f	module:tests
test_hash_order	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_hash_order() {$/;"	f	module:test
test_hmac	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn test_hmac(ty: MessageDigest, tests: &[(Vec<u8>, Vec<u8>, Vec<u8>)]) {$/;"	f	module:test
test_http	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_http() {$/;"	f	module:tests
test_https	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_https() {$/;"	f	module:tests
test_indentation_equality	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_indentation_equality() {$/;"	f	module:test
test_integer_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_integer_key() {$/;"	f	module:test
test_iso_week_extremes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    fn test_iso_week_extremes() {$/;"	f	module:tests
test_issue_65	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_issue_65() {$/;"	f	module:test
test_leap_second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn test_leap_second() {$/;"	f	module:tests
test_load_subject_der	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_load_subject_der() {$/;"	f
test_local_date_sanity_check	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn test_local_date_sanity_check() {$/;"	f	module:tests
test_long_name_conversion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^    fn test_long_name_conversion() {$/;"	f	module:test
test_longs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^    fn test_longs() {$/;"	f	module:tests
test_md5	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_md5() {$/;"	f	module:tests
test_md5_recycle	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_md5_recycle() {$/;"	f	module:tests
test_mdf_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_fields() {$/;"	f	module:tests
test_mdf_to_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_to_of() {$/;"	f	module:tests
test_mdf_to_of_to_mdf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_to_of_to_mdf() {$/;"	f	module:tests
test_mdf_valid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_valid() {$/;"	f	module:tests
test_mdf_with_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_mdf_with_fields() {$/;"	f	module:tests
test_mod_floor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/div.rs	/^    fn test_mod_floor() {$/;"	f	module:tests
test_month_enum_primitive_parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_month_enum_primitive_parse() {$/;"	f	module:test
test_month_enum_succ_pred	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^fn test_month_enum_succ_pred() {$/;"	f
test_mozilla_server	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn test_mozilla_server(new: fn(SslMethod) -> Result<SslAcceptorBuilder, ErrorStack>) {$/;"	f
test_muldiv	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn test_muldiv() {$/;"	f	module:inner
test_multi_doc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_multi_doc() {$/;"	f	module:test
test_multipart_js	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    async fn test_multipart_js() {$/;"	f	module:tests
test_multiple_documents	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_multiple_documents() {$/;"	f	module:test
test_nameref_iterator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_nameref_iterator() {$/;"	f
test_nanos_never_panics	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn test_nanos_never_panics() {$/;"	f	module:tests
test_nanosecond_range	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_nanosecond_range() {$/;"	f	module:tests
test_negation	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn test_negation() {$/;"	f	module:tests
test_negative_millis	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn test_negative_millis() {$/;"	f	module:tests
test_negative_nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn test_negative_nanos() {$/;"	f	module:tests
test_nested_arrays	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn test_nested_arrays() {$/;"	f	module:escape_str::test
test_nested_hashes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn test_nested_hashes() {$/;"	f	module:escape_str::test
test_nid_uid_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_nid_uid_value() {$/;"	f
test_nid_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_nid_values() {$/;"	f
test_no_block_sequence_start	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_no_block_sequence_start() {$/;"	f	module:test
test_no_proxy_load	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_no_proxy_load() {$/;"	f	module:tests
test_num_days_from_ce_against_alternative_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^fn test_num_days_from_ce_against_alternative_impl() {$/;"	f
test_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of() {$/;"	f	module:tests
test_of_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_fields() {$/;"	f	module:tests
test_of_isoweekdate_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_isoweekdate_raw() {$/;"	f	module:tests
test_of_to_mdf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_to_mdf() {$/;"	f	module:tests
test_of_to_mdf_to_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_to_mdf_to_of() {$/;"	f	module:tests
test_of_weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_weekday() {$/;"	f	module:tests
test_of_with_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_of_with_fields() {$/;"	f	module:tests
test_oneway	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^        fn test_oneway(s : &str, format : &str) -> bool {$/;"	f	function:tests::test_strptime
test_parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn test_parse() {$/;"	f
test_parsed_set_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_set_fields() {$/;"	f	module:tests
test_parsed_to_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_datetime() {$/;"	f	module:tests
test_parsed_to_datetime_with_timezone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_datetime_with_timezone() {$/;"	f	module:tests
test_parsed_to_naive_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_naive_date() {$/;"	f	module:tests
test_parsed_to_naive_datetime_with_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_naive_datetime_with_offset() {$/;"	f	module:tests
test_parsed_to_naive_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    fn test_parsed_to_naive_time() {$/;"	f	module:tests
test_parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_parser() {$/;"	f	module:test
test_peek_eq_parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    fn test_peek_eq_parse() {$/;"	f	module:test
test_pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_pem() {$/;"	f	module:tests
test_pem_pkcs1_encrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn test_pem_pkcs1_encrypt() {$/;"	f	module:test
test_pem_pkcs1_padding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn test_pem_pkcs1_padding() {$/;"	f	module:test
test_plain_datatype	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_plain_datatype() {$/;"	f	module:test
test_plain_datatype_with_into_methods	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_plain_datatype_with_into_methods() {$/;"	f	module:test
test_plain_scalar_containing_indicators_in_block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_plain_scalar_containing_indicators_in_block() {$/;"	f	module:test
test_plain_scalar_starting_with_indicators_in_block	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_plain_scalar_starting_with_indicators_in_block() {$/;"	f	module:test
test_plain_scalar_starting_with_indicators_in_flow	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_plain_scalar_starting_with_indicators_in_flow() {$/;"	f	module:test
test_precise_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_precise_time() {$/;"	f	module:tests
test_precise_time_to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_precise_time_to() {$/;"	f	module:tests
test_prime_numbers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn test_prime_numbers() {$/;"	f	module:tests
test_priv_key_from_parts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    fn test_priv_key_from_parts() {$/;"	f	module:test
test_private_encrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn test_private_encrypt() {$/;"	f	module:test
test_private_key_from_der	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_private_key_from_der() {$/;"	f	module:tests
test_private_key_from_pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_private_key_from_pem() {$/;"	f	module:tests
test_proxy_scheme_ip_address_default_http	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_proxy_scheme_ip_address_default_http() {$/;"	f	module:tests
test_proxy_scheme_parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_proxy_scheme_parse() {$/;"	f	module:tests
test_proxy_scheme_parse_default_http_with_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_proxy_scheme_parse_default_http_with_auth() {$/;"	f	module:tests
test_pseudo_rand_range	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn test_pseudo_rand_range() {$/;"	f	module:tests
test_pub_key_from_parts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    fn test_pub_key_from_parts() {$/;"	f	module:test
test_pubkey_generation	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    fn test_pubkey_generation() {$/;"	f	module:test
test_public_encrypt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn test_public_encrypt() {$/;"	f	module:test
test_public_encrypt_private_decrypt_with_padding	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn test_public_encrypt_private_decrypt_with_padding() {$/;"	f	module:test
test_public_key_from_der	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_public_key_from_der() {$/;"	f	module:tests
test_public_key_from_pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_public_key_from_pem() {$/;"	f	module:tests
test_public_key_from_pem_pkcs1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn test_public_key_from_pem_pkcs1() {$/;"	f	module:test
test_public_key_from_pem_pkcs1_file_panic	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn test_public_key_from_pem_pkcs1_file_panic() {$/;"	f	module:test
test_public_key_from_pem_pkcs1_generate_panic	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn test_public_key_from_pem_pkcs1_generate_panic() {$/;"	f	module:test
test_public_key_to_pem_pkcs1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn test_public_key_to_pem_pkcs1() {$/;"	f	module:test
test_rand_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rand.rs	/^    fn test_rand_bytes() {$/;"	f	module:tests
test_rand_range	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn test_rand_range() {$/;"	f	module:tests
test_raw_hmac	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_raw_hmac() {$/;"	f	module:tests
test_raw_key_fail	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_raw_key_fail() {$/;"	f	module:tests
test_raw_private_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_raw_private_key(gen: fn() -> Result<PKey<Private>, ErrorStack>, key_type: Id) {$/;"	f	module:tests
test_raw_private_key_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_raw_private_key_bytes() {$/;"	f	module:tests
test_raw_public_key	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_raw_public_key(gen: fn() -> Result<PKey<Private>, ErrorStack>, key_type: Id) {$/;"	f	module:tests
test_raw_public_key_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_raw_public_key_bytes() {$/;"	f	module:tests
test_rc4	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_rc4() {$/;"	f	module:tests
test_readme_doomsday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_readme_doomsday() {$/;"	f	module:test
test_recursion_depth_check_arrays	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_recursion_depth_check_arrays() {$/;"	f	module:test
test_recursion_depth_check_objects	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_recursion_depth_check_objects() {$/;"	f	module:test
test_redirect_policy_custom	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^fn test_redirect_policy_custom() {$/;"	f
test_redirect_policy_limit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^fn test_redirect_policy_limit() {$/;"	f
test_remove_sensitive_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^fn test_remove_sensitive_headers() {$/;"	f
test_replace_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn test_replace_headers() {$/;"	f	module:tests
test_replace_headers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn test_replace_headers() {$/;"	f	module:tests
test_response_builder_ext	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs	/^    fn test_response_builder_ext() {$/;"	f	module:tests
test_rfc2822	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn test_rfc2822() {$/;"	f
test_rfc3339	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^fn test_rfc3339() {$/;"	f
test_rfc3339_opts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_rfc3339_opts() {$/;"	f	module:tests
test_rfc3339_opts_nonexhaustive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_rfc3339_opts_nonexhaustive() {$/;"	f	module:tests
test_ripemd160	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_ripemd160() {$/;"	f	module:tests
test_round_leap_nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_round_leap_nanos() {$/;"	f	module:tests
test_round_subsecs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_round_subsecs() {$/;"	f	module:tests
test_rsa_accessor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_rsa_accessor() {$/;"	f	module:tests
test_rsa_conversion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_rsa_conversion() {$/;"	f	module:tests
test_save_der	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_save_der() {$/;"	f
test_save_subject_der	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_save_subject_der() {$/;"	f
test_scalar	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_scalar() {$/;"	f	module:test
test_scanner_cr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_scanner_cr() {$/;"	f	module:test
test_secure_bn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn test_secure_bn() {$/;"	f	module:tests
test_secure_bn_ctx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn test_secure_bn_ctx() {$/;"	f	module:tests
test_seed_cbc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_seed_cbc() {$/;"	f	module:tests
test_seed_cfb128	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_seed_cfb128() {$/;"	f	module:tests
test_seed_ecb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_seed_ecb() {$/;"	f	module:tests
test_seed_ofb	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_seed_ofb() {$/;"	f	module:tests
test_serde_bincode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_serde_bincode() {$/;"	f	module:serde
test_serde_bincode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_serde_bincode() {$/;"	f	module:serde
test_serde_bincode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_serde_bincode() {$/;"	f	module:serde
test_serde_bincode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_serde_bincode() {$/;"	f	module:serde
test_serde_bincode_optional	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_serde_bincode_optional() {$/;"	f	module:serde
test_serde_deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_serde_deserialize() {$/;"	f	module:serde
test_serde_deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_serde_deserialize() {$/;"	f	module:month_serde
test_serde_deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_serde_deserialize() {$/;"	f	module:weekday_serde
test_serde_deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_serde_deserialize() {$/;"	f	module:serde
test_serde_deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_serde_deserialize() {$/;"	f	module:serde
test_serde_deserialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_serde_deserialize() {$/;"	f	module:serde
test_serde_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_serde_serialize() {$/;"	f	module:serde
test_serde_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_serde_serialize() {$/;"	f	module:month_serde
test_serde_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn test_serde_serialize() {$/;"	f	module:weekday_serde
test_serde_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_serde_serialize() {$/;"	f	module:serde
test_serde_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn test_serde_serialize() {$/;"	f	module:serde
test_serde_serialize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_serde_serialize() {$/;"	f	module:serde
test_sha1	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_sha1() {$/;"	f	module:tests
test_sha256	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_sha256() {$/;"	f	module:tests
test_sha3_224	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_sha3_224() {$/;"	f	module:tests
test_sha3_256	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_sha3_256() {$/;"	f	module:tests
test_sha3_384	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_sha3_384() {$/;"	f	module:tests
test_sha3_512	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_sha3_512() {$/;"	f	module:tests
test_shake_128	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_shake_128() {$/;"	f	module:tests
test_shake_256	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_shake_256() {$/;"	f	module:tests
test_shift	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn test_shift() {$/;"	f	module:tests
test_short_name_conversion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/nid.rs	/^    fn test_short_name_conversion() {$/;"	f	module:test
test_shorts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^    fn test_shorts() {$/;"	f	module:tests
test_signature	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    fn test_signature() {$/;"	f	module:test
test_sm3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn test_sm3() {$/;"	f	module:tests
test_source_chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    fn test_source_chain() {$/;"	f	module:tests
test_spec_ex7_3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_spec_ex7_3() {$/;"	f	module:test
test_special_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^mod test_special_string {$/;"	n
test_stack_from_pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_stack_from_pem() {$/;"	f
test_steadytime_sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_steadytime_sub() {$/;"	f	module:tests
test_stream_cipher_output	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    fn test_stream_cipher_output() {$/;"	f	module:tests
test_strftime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_strftime() {$/;"	f	module:tests
test_strftime_docs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^fn test_strftime_docs() {$/;"	f
test_strftime_docs_localized	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^fn test_strftime_docs_localized() {$/;"	f
test_strftime_items	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^fn test_strftime_items() {$/;"	f
test_strip_whitespace	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/base64.rs	/^    fn test_strip_whitespace() {$/;"	f	module:tests
test_strptime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_strptime() {$/;"	f	module:tests
test_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^    fn test_subcommands() {$/;"	f	module:tests
test_subject_alt_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_subject_alt_name() {$/;"	f
test_subject_alt_name_iter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_subject_alt_name_iter() {$/;"	f
test_subject_read_cn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_subject_read_cn() {$/;"	f
test_subsecond_part	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_subsecond_part() {$/;"	f	module:tests
test_sys_no_proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_sys_no_proxy() {$/;"	f	module:tests
test_time_add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_add() {$/;"	f	module:tests
test_time_addassignment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_addassignment() {$/;"	f	module:tests
test_time_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_fmt() {$/;"	f	module:tests
test_time_format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_format() {$/;"	f	module:tests
test_time_from_hms_micro	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_from_hms_micro() {$/;"	f	module:tests
test_time_from_hms_milli	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_from_hms_milli() {$/;"	f	module:tests
test_time_hms	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_hms() {$/;"	f	module:tests
test_time_overflowing_add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_overflowing_add() {$/;"	f	module:tests
test_time_parse_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_parse_from_str() {$/;"	f	module:tests
test_time_sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_sub() {$/;"	f	module:tests
test_time_sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_time_sub() {$/;"	f	module:tests
test_time_subassignment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn test_time_subassignment() {$/;"	f	module:tests
test_timespec_add	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_timespec_add() {$/;"	f	module:tests
test_timespec_eq_ord	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_timespec_eq_ord() {$/;"	f	module:tests
test_timespec_hash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_timespec_hash() {$/;"	f	module:tests
test_timespec_sub	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_timespec_sub() {$/;"	f	module:tests
test_to_from_slice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    fn test_to_from_slice() {$/;"	f	module:tests
test_to_password	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_to_password() {$/;"	f	module:tests
test_to_password	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn test_to_password() {$/;"	f	module:test
test_to_std	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    fn test_to_std() {$/;"	f	module:tests
test_to_std	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    fn test_to_std() {$/;"	f	module:tests
test_to_string_round_trip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_to_string_round_trip() {$/;"	f	module:tests
test_to_string_round_trip_with_local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn test_to_string_round_trip_with_local() {$/;"	f	module:tests
test_to_timespec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    fn test_to_timespec() {$/;"	f	module:tests
test_trunc_leap_nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_trunc_leap_nanos() {$/;"	f	module:tests
test_trunc_subsecs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn test_trunc_subsecs() {$/;"	f	module:tests
test_try_from_with_invalid_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    fn test_try_from_with_invalid_string() {$/;"	f	module:tests
test_try_from_with_valid_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    fn test_try_from_with_valid_string() {$/;"	f	module:tests
test_tunnel	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn test_tunnel() {$/;"	f	module:tests
test_tunnel_basic_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn test_tunnel_basic_auth() {$/;"	f	module:tests
test_tunnel_eof	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn test_tunnel_eof() {$/;"	f	module:tests
test_tunnel_non_http_response	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn test_tunnel_non_http_response() {$/;"	f	module:tests
test_tunnel_proxy_unauthorized	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn test_tunnel_proxy_unauthorized() {$/;"	f	module:tests
test_two_space_indentations	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    fn test_two_space_indentations() {$/;"	f	module:test
test_type_prefix_extraction	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_type_prefix_extraction() {$/;"	f	module:tests
test_unencrypted_pkcs8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn test_unencrypted_pkcs8() {$/;"	f	module:tests
test_unicode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/puncttable.rs	/^    fn test_unicode() {$/;"	f	module:tests
test_uri	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_uri() {$/;"	f	module:test
test_uri_escapes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn test_uri_escapes() {$/;"	f	module:test
test_verify_cert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_verify_cert() {$/;"	f
test_verify_fails	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_verify_fails() {$/;"	f
test_verify_fails_with_crl_flag_set_and_no_crl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn test_verify_fails_with_crl_flag_set_and_no_crl() {$/;"	f
test_versions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/version.rs	/^fn test_versions() {$/;"	f
test_week_iterator_limit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn test_week_iterator_limit() {$/;"	f	module:tests
test_wildcard_sys_no_proxy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn test_wildcard_sys_no_proxy() {$/;"	f	module:tests
test_wrap_unwrap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/aes.rs	/^    fn test_wrap_unwrap() {$/;"	f	module:test
test_yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    fn test_yaml() {$/;"	f	module:test
test_year_flags_ndays_from_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_year_flags_ndays_from_year() {$/;"	f	module:tests
test_year_flags_nisoweeks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    fn test_year_flags_nisoweeks() {$/;"	f	module:tests
test_zero_read	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/crc32.rs	/^    fn test_zero_read() {$/;"	f	module:test
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/div.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod tests;$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/utils.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/base64.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dh.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/memcmp.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs5.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rand.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^mod tests;$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/puncttable.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/into_url.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/client.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^mod tests {$/;"	n
tests	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/lib.rs	/^mod tests {$/;"	n
tests	/mnt/c/Users/SamanthaC/rust/md_puppy/src/directory_handling.rs	/^mod tests {$/;"	n
tests	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^mod tests {$/;"	n
tests	/mnt/c/Users/SamanthaC/rust/md_puppy/src/site_data.rs	/^mod tests {$/;"	n
text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    text: &'a str,$/;"	m	struct:FirstPass
text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    text: &'input str,$/;"	m	struct:Parser
text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn text<T, U>(self, name: T, value: U) -> Form$/;"	P	implementation:Form
text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    pub fn text<T>(value: T) -> Part$/;"	P	implementation:Part
text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub async fn text(self) -> crate::Result<String> {$/;"	P	implementation:Response
text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn text<T, U>(self, name: T, value: U) -> Form$/;"	P	implementation:Form
text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    pub fn text<T>(value: T) -> Part$/;"	P	implementation:Part
text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn text(self) -> crate::Result<String> {$/;"	P	implementation:Response
text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub fn text<T, U>(self, name: T, value: U) -> Form$/;"	P	implementation:Form
text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub fn text<T>(value: T) -> Part$/;"	P	implementation:Part
text	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    pub async fn text(self) -> crate::Result<String> {$/;"	P	implementation:Response
text_with_charset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub async fn text_with_charset(self, default_encoding: &str) -> crate::Result<String> {$/;"	P	implementation:Response
text_with_charset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn text_with_charset(self, default_encoding: &str) -> crate::Result<String> {$/;"	P	implementation:Response
text_wrapper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^fn text_wrapper(help: &str, width: usize) -> String {$/;"	f
this	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    this: syn::Path,$/;"	m	struct:Parameters
this	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    this: syn::Path,$/;"	m	struct:Parameters
this_update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub this_update: &'a Asn1GeneralizedTimeRef,$/;"	m	struct:OcspStatus
thread	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    thread: Option<thread::JoinHandle<()>>,$/;"	m	struct:InnerClientHandle
time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn time(&self) -> NaiveTime {$/;"	P	implementation:DateTime
time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    time: Option<NaiveTime>,$/;"	m	struct:DelayedFormat
time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    mod time;$/;"	n	module:naive
time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn time(&self) -> NaiveTime {$/;"	P	implementation:NaiveDateTime
time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    time: NaiveTime,$/;"	m	struct:NaiveDateTime
time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn time(&self) -> i64 {$/;"	P	implementation:SslSessionRef
time_at_january	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    fn time_at_january() {$/;"	f	module:test
time_conversion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    fn time_conversion() {$/;"	f	module:test
time_eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn time_eq() {$/;"	f	module:tests
time_from_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn time_from_str() {$/;"	f	module:tests
time_from_unix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn time_from_unix() {$/;"	f	module:tests
time_ord	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    fn time_ord() {$/;"	f	module:tests
time_out_of_bounds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    fn time_out_of_bounds() {$/;"	f	module:test
time_stamping	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn time_stamping(&mut self) -> &mut ExtendedKeyUsage {$/;"	P	implementation:ExtendedKeyUsage
time_stamping	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    time_stamping: bool,$/;"	m	struct:ExtendedKeyUsage
time_to_file_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn time_to_file_time(sec: i64) -> FILETIME {$/;"	f
time_to_file_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn time_to_file_time(sec: i64) -> FILETIME {$/;"	f	module:inner
time_to_local_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^pub fn time_to_local_tm(sec: i64, tm: &mut Tm) {$/;"	f
time_to_local_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^pub fn time_to_local_tm(sec: i64, tm: &mut Tm) {$/;"	f
time_to_local_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^pub fn time_to_local_tm(sec: i64, tm: &mut Tm) {$/;"	f
time_to_local_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn time_to_local_tm(sec: i64, tm: &mut Tm) {$/;"	f	module:inner
time_to_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^fn time_to_tm(ts: i64, tm: &mut Tm) {$/;"	f
time_to_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn time_to_tm(ts: i64, tm: &mut Tm) {$/;"	f	module:common
time_to_utc_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn time_to_utc_tm(sec: i64, tm: &mut Tm) {$/;"	f	module:inner
timegm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^unsafe fn timegm(tm: *mut libc::tm) -> time_t {$/;"	f
timegm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    unsafe fn timegm(tm: *mut libc::tm) -> time_t {$/;"	f	module:inner
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn timeout(&self) -> i64 {$/;"	P	implementation:SslSessionRef
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn timeout(self: Pin<&mut Self>) -> Pin<&mut Option<Pin<Box<Sleep>>>> {$/;"	P	implementation:PendingRequest
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn timeout(mut self, timeout: Duration) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    timeout: Option<Duration>,$/;"	m	struct:Config
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn timeout(&self) -> Option<&Duration> {$/;"	P	implementation:Request
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn timeout(mut self, timeout: Duration) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    timeout: Option<Duration>,$/;"	m	struct:Request
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn timeout<T>(mut self, timeout: T) -> ClientBuilder$/;"	P	implementation:ClientBuilder
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    timeout: Timeout,$/;"	m	struct:ClientBuilder
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    timeout: Timeout,$/;"	m	struct:ClientHandle
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn timeout(&self) -> Option<&Duration> {$/;"	P	implementation:Request
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn timeout(mut self, timeout: Duration) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    timeout: Option<Duration>,$/;"	m	struct:Response
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/wait.rs	/^pub(crate) fn timeout<F, I, E>(fut: F, timeout: Option<Duration>) -> Result<I, Waited<E>>$/;"	f
timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    timeout: Option<Duration>,$/;"	m	struct:Connector
timeout_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn timeout_mut(&mut self) -> &mut Option<Duration> {$/;"	P	implementation:Request
timeout_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn timeout_mut(&mut self) -> &mut Option<Duration> {$/;"	P	implementation:Request
timepart	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn timepart(&self) -> u16 {$/;"	P	implementation:DateTime
timestamp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp(&self) -> i64 {$/;"	P	implementation:DateTime
timestamp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub timestamp: Option<i64>,$/;"	m	struct:Parsed
timestamp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp(&self) -> i64 {$/;"	P	implementation:NaiveDateTime
timestamp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp(&self, secs: i64, nsecs: u32) -> DateTime<Self> {$/;"	P	interface:TimeZone
timestamp_millis	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_millis(&self) -> i64 {$/;"	P	implementation:DateTime
timestamp_millis	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_millis(&self) -> i64 {$/;"	P	implementation:NaiveDateTime
timestamp_millis	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp_millis(&self, millis: i64) -> DateTime<Self> {$/;"	P	interface:TimeZone
timestamp_millis_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp_millis_opt(&self, millis: i64) -> LocalResult<DateTime<Self>> {$/;"	P	interface:TimeZone
timestamp_nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_nanos(&self) -> i64 {$/;"	P	implementation:DateTime
timestamp_nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_nanos(&self) -> i64 {$/;"	P	implementation:NaiveDateTime
timestamp_nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp_nanos(&self, nanos: i64) -> DateTime<Self> {$/;"	P	interface:TimeZone
timestamp_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn timestamp_opt(&self, secs: i64, nsecs: u32) -> LocalResult<DateTime<Self>> {$/;"	P	interface:TimeZone
timestamp_subsec_micros	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_subsec_micros(&self) -> u32 {$/;"	P	implementation:DateTime
timestamp_subsec_micros	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_subsec_micros(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
timestamp_subsec_millis	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_subsec_millis(&self) -> u32 {$/;"	P	implementation:DateTime
timestamp_subsec_millis	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_subsec_millis(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
timestamp_subsec_nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timestamp_subsec_nanos(&self) -> u32 {$/;"	P	implementation:DateTime
timestamp_subsec_nanos	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub fn timestamp_subsec_nanos(&self) -> u32 {$/;"	P	implementation:NaiveDateTime
timezone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn timezone(&self) -> Tz {$/;"	P	implementation:Date
timezone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn timezone(&self) -> Tz {$/;"	P	implementation:DateTime
timezone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^    static timezone: time_t;$/;"	v
timezone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        static timezone: time_t;$/;"	v	module:inner
timezone_name_skip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_name_skip(s: &str) -> ParseResult<(&str, ())> {$/;"	f
timezone_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_offset<F>(s: &str, consume_colon: F) -> ParseResult<(&str, i32)>$/;"	f
timezone_offset_2822	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_offset_2822(s: &str) -> ParseResult<(&str, Option<i32>)> {$/;"	f
timezone_offset_internal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^fn timezone_offset_internal<F>($/;"	f
timezone_offset_permissive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_offset_permissive<F>(s: &str, colon: F) -> ParseResult<(&str, i32)>$/;"	f
timezone_offset_zulu	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/scan.rs	/^pub fn timezone_offset_zulu<F>(s: &str, colon: F) -> ParseResult<(&str, i32)>$/;"	f
title	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    pub title: Option<CowStr<'a>>,$/;"	m	struct:LinkDef
title	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub title: String,$/;"	m	struct:Page
tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn tls() -> SslMethod {$/;"	P	implementation:SslMethod
tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    tls: TlsBackend,$/;"	m	struct:Config
tls_built_in_root_certs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn tls_built_in_root_certs(mut self, tls_built_in_root_certs: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
tls_built_in_root_certs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    tls_built_in_root_certs: bool,$/;"	m	struct:Config
tls_built_in_root_certs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn tls_built_in_root_certs(self, tls_built_in_root_certs: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
tls_client	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn tls_client() -> SslMethod {$/;"	P	implementation:SslMethod
tls_server	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn tls_server() -> SslMethod {$/;"	P	implementation:SslMethod
tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    tm: &'a Tm,$/;"	m	struct:TmFmt
tm_hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_hour: i32,$/;"	m	struct:Tm
tm_hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_hour: i32,$/;"	m	struct:Tm
tm_isdst	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_isdst: i32,$/;"	m	struct:Tm
tm_isdst	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_isdst: i32,$/;"	m	struct:Tm
tm_mday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_mday: i32,$/;"	m	struct:Tm
tm_mday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_mday: i32,$/;"	m	struct:Tm
tm_min	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_min: i32,$/;"	m	struct:Tm
tm_min	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_min: i32,$/;"	m	struct:Tm
tm_mon	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_mon: i32,$/;"	m	struct:Tm
tm_mon	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_mon: i32,$/;"	m	struct:Tm
tm_nsec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_nsec: i32,$/;"	m	struct:Tm
tm_nsec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_nsec: i32,$/;"	m	struct:Tm
tm_sec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_sec: i32,$/;"	m	struct:Tm
tm_sec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_sec: i32,$/;"	m	struct:Tm
tm_to_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^fn tm_to_datetime(mut tm: sys::Tm) -> DateTime<Local> {$/;"	f
tm_to_naive_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    fn tm_to_naive_date(tm: &sys::Tm) -> NaiveDate {$/;"	f	function:tm_to_datetime
tm_to_rust_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^fn tm_to_rust_tm(tm: &libc::tm, utcoff: i32, rust_tm: &mut Tm) {$/;"	f
tm_to_rust_tm	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn tm_to_rust_tm(tm: &libc::tm, utcoff: i32, rust_tm: &mut Tm) {$/;"	f	module:inner
tm_to_system_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^fn tm_to_system_time(tm: &Tm) -> SYSTEMTIME {$/;"	f
tm_to_system_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    fn tm_to_system_time(tm: &Tm) -> SYSTEMTIME {$/;"	f	module:inner
tm_to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^fn tm_to_time(tm: &Tm) -> i64 {$/;"	f
tm_to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn tm_to_time(tm: &Tm) -> i64 {$/;"	f	module:common
tm_utcoff	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_utcoff: i32,$/;"	m	struct:Tm
tm_utcoff	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_utcoff: i32,$/;"	m	struct:Tm
tm_wday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_wday: i32,$/;"	m	struct:Tm
tm_wday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_wday: i32,$/;"	m	struct:Tm
tm_yday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_yday: i32,$/;"	m	struct:Tm
tm_yday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_yday: i32,$/;"	m	struct:Tm
tm_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub tm_year: i32,$/;"	m	struct:Tm
tm_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub tm_year: i32,$/;"	m	struct:Tm
tmp_dh_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn tmp_dh_callback() {$/;"	f
tmp_dh_callback_ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn tmp_dh_callback_ssl() {$/;"	f
tmp_ecdh_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn tmp_ecdh_callback() {$/;"	f
tmp_ecdh_callback_ssl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn tmp_ecdh_callback_ssl() {$/;"	f
tmpname	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/util.rs	/^fn tmpname(prefix: &OsStr, suffix: &OsStr, rand_len: usize) -> OsString {$/;"	f
to	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn to(&self, later: PreciseTime) -> Duration {$/;"	P	implementation:PreciseTime
to_asn1_integer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn to_asn1_integer(&self) -> Result<Asn1Integer, ErrorStack> {$/;"	P	implementation:BigNumRef
to_bn	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/asn1.rs	/^    pub fn to_bn(&self) -> Result<BigNum, ErrorStack> {$/;"	P	implementation:Asn1IntegerRef
to_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn to_bytes($/;"	P	implementation:EcPointRef
to_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^fn to_char(input: u8) -> char {$/;"	f
to_char_valid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^    fn to_char_valid() {$/;"	f	module:test
to_compile_errors	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/lib.rs	/^fn to_compile_errors(errors: Vec<syn::Error>) -> proc_macro2::TokenStream {$/;"	f
to_datetime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_datetime(&self) -> ParseResult<DateTime<FixedOffset>> {$/;"	P	implementation:Parsed
to_datetime_with_timezone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_datetime_with_timezone<Tz: TimeZone>(&self, tz: &Tz) -> ParseResult<DateTime<Tz>> /;"	P	implementation:Parsed
to_dec_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn to_dec_str(&self) -> Result<OpensslString, ErrorStack> {$/;"	P	implementation:BigNumRef
to_der	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/macros.rs	/^macro_rules! to_der {$/;"	M
to_display_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^    fn to_display_fmt() {$/;"	f	module:test
to_eq_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^    fn to_eq_from() {$/;"	f	module:test
to_fixed_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_fixed_offset(&self) -> ParseResult<FixedOffset> {$/;"	P	implementation:Parsed
to_form_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    pub(crate) fn to_form_data(&self) -> crate::Result<FormData> {$/;"	P	implementation:Form
to_hex_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn to_hex_str(&self) -> Result<OpensslString, ErrorStack> {$/;"	P	implementation:BigNumRef
to_js_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    pub(crate) fn to_js_value(&self) -> crate::Result<JsValue> {$/;"	P	implementation:Body
to_local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn to_local(&self) -> Tm {$/;"	P	implementation:Tm
to_mdf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn to_mdf(&self) -> Mdf {$/;"	P	implementation:Of
to_naive_date	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_naive_date(&self) -> ParseResult<NaiveDate> {$/;"	P	implementation:Parsed
to_naive_datetime_with_offset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_naive_datetime_with_offset(&self, offset: i32) -> ParseResult<NaiveDateTime> {$/;"	P	implementation:Parsed
to_naive_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub fn to_naive_time(&self) -> ParseResult<NaiveTime> {$/;"	P	implementation:Parsed
to_native_tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    pub(crate) fn to_native_tls(self) -> Option<native_tls_crate::Protocol> {$/;"	P	implementation:Version
to_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn to_of(&self) -> Of {$/;"	P	implementation:Mdf
to_owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn to_owned(&self) -> Result<BigNum, ErrorStack> {$/;"	P	implementation:BigNumRef
to_owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/dsa.rs	/^    fn to_owned(&self) -> Dsa<T> {$/;"	P	implementation:DsaRef
to_owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    fn to_owned(&self) -> EcKey<T> {$/;"	P	implementation:EcKeyRef
to_owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ec.rs	/^    pub fn to_owned(&self, group: &EcGroupRef) -> Result<EcPoint, ErrorStack> {$/;"	P	implementation:EcPointRef
to_owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn to_owned(&self) -> PKey<T> {$/;"	P	implementation:PKeyRef
to_owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/rsa.rs	/^    fn to_owned(&self) -> Rsa<T> {$/;"	P	implementation:RsaRef
to_owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn to_owned(&self) -> Self::Owned {$/;"	P	implementation:SslContextRef
to_owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn to_owned(&self) -> SslSession {$/;"	P	implementation:SslSessionRef
to_owned	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    fn to_owned(&self) -> X509 {$/;"	P	implementation:X509Ref
to_pem	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/macros.rs	/^macro_rules! to_pem {$/;"	M
to_possible_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn to_possible_value<'a>(&self) -> Option<PossibleValue<'a>>;$/;"	P	interface:ArgEnum
to_possible_value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    fn to_possible_value<'a>(&self) -> Option<PossibleValue<'a>> {$/;"	P	implementation:Shell
to_rfc2822	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn to_rfc2822(&self) -> String {$/;"	f
to_rfc3339	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn to_rfc3339(&self) -> String {$/;"	f
to_rfc3339_opts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn to_rfc3339_opts(&self, secform: SecondsFormat, use_z: bool) -> String {$/;"	f
to_smime	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^    pub fn to_smime(&self, input: &[u8], flags: Pkcs7Flags) -> Result<Vec<u8>, ErrorStack> {$/;"	P	implementation:Pkcs7Ref
to_std	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn to_std(&self) -> Result<StdDuration, OutOfRangeError> {$/;"	P	implementation:Duration
to_std	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn to_std(&self) -> Result<StdDuration, OutOfRangeError> {$/;"	P	implementation:Duration
to_str_slice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^        fn to_str_slice(o: &OsString) -> &OsStr {$/;"	f	method:ArgMatches::values_of_os
to_str_slice	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^        fn to_str_slice(o: &OsString) -> &str {$/;"	f	method:ArgMatches::values_of
to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn to_time(&self) -> ::time::Tm {$/;"	P	implementation:DateTime
to_timespec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys.rs	/^    pub fn to_timespec(&self) -> Timespec {$/;"	P	implementation:Tm
to_timespec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn to_timespec(&self) -> Timespec {$/;"	P	implementation:Tm
to_tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	P	implementation:DeImplGenerics
to_tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	P	implementation:DeTypeGenerics
to_tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	P	implementation:InPlaceImplGenerics
to_tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    fn to_tokens(&self, tokens: &mut TokenStream) {$/;"	P	implementation:InPlaceTypeGenerics
to_tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	P	implementation:Expr
to_tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	P	implementation:Match
to_tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/fragment.rs	/^    fn to_tokens(&self, out: &mut TokenStream) {$/;"	P	implementation:Stmts
to_u16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/compression.rs	/^    pub fn to_u16(self) -> u16 {$/;"	P	implementation:CompressionMethod
to_unknown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    fn to_unknown(self) -> Self {$/;"	P	implementation:LinkType
to_utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    pub fn to_utc(&self) -> Tm {$/;"	P	implementation:Tm
to_utf16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/imp/windows.rs	/^fn to_utf16(s: &Path) -> Vec<u16> {$/;"	f
to_vec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn to_vec(&self) -> Vec<u8> {$/;"	P	implementation:BigNumRef
to_vec_padded	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn to_vec_padded(&self, pad_to: i32) -> Result<Vec<u8>, ErrorStack> {$/;"	P	implementation:BigNumRef
today	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/local.rs	/^    pub fn today() -> Date<Local> {$/;"	P	implementation:Local
today	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/utc.rs	/^    pub fn today() -> Date<Utc> {$/;"	P	implementation:Utc
token	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^fn token(b: u8) -> bool {$/;"	f
token	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/parser.rs	/^    token: Option<Token>,$/;"	m	struct:Parser
token_available	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    token_available: bool,$/;"	m	struct:Scanner
token_number	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    token_number: usize,$/;"	m	struct:SimpleKey
tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    tokens: TokenStream,$/;"	m	struct:Attr
tokens	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    tokens: VecDeque<Token>,$/;"	m	struct:Scanner
tokens_parsed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    tokens_parsed: usize,$/;"	m	struct:Scanner
too_few_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn too_few_values($/;"	P	implementation:Error
too_many_occurrences	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn too_many_occurrences($/;"	P	implementation:Error
too_many_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn too_many_values(cmd: &Command, val: String, arg: String, usage: String) -> Sel/;"	P	implementation:Error
total_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/dir.rs	/^    pub total_bytes: u64,$/;"	m	struct:TransitProcess
total_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^    pub total_bytes: u64,$/;"	m	struct:TransitProcess
total_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/lib.rs	/^    pub total_bytes: u64,$/;"	m	struct:TransitProcess
trailing_var_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn trailing_var_arg(self, yes: bool) -> Self {$/;"	P	implementation:App
transparent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn transparent(&self) -> bool {$/;"	P	implementation:Container
transparent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn transparent(&self) -> bool {$/;"	P	implementation:Field
transparent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    transparent: bool,$/;"	m	struct:Container
transparent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    transparent: bool,$/;"	m	struct:Field
tree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/firstpass.rs	/^    tree: Tree<Item>,$/;"	m	struct:FirstPass
tree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^mod tree;$/;"	n
tree	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    tree: Tree<Item>,$/;"	m	struct:Parser
trunc_subsecs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn trunc_subsecs(self, digits: u16) -> Self;$/;"	P	interface:SubsecRound
trunc_subsecs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/round.rs	/^    fn trunc_subsecs(self, digits: u16) -> T {$/;"	f
truncate_siblings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn truncate_siblings($/;"	P	implementation:Tree
trust_dns	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn trust_dns(mut self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
trust_dns	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    trust_dns: bool,$/;"	m	struct:Config
trust_dns	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn trust_dns(self, enable: bool) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
try	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/lib.rs	/^mod try;$/;"	n
try_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    pub(crate) fn try_clone(&self) -> Option<Body> {$/;"	P	implementation:Body
try_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn try_clone(&self) -> Option<Request> {$/;"	P	implementation:Request
try_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn try_clone(&self) -> Option<RequestBuilder> {$/;"	P	implementation:RequestBuilder
try_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    fn try_clone(&self) -> Option<Kind> {$/;"	P	implementation:Kind
try_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    pub(crate) fn try_clone(&self) -> Option<Body> {$/;"	P	implementation:Body
try_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn try_clone(&self) -> Option<Request> {$/;"	P	implementation:Request
try_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn try_clone(&self) -> Option<RequestBuilder> {$/;"	P	implementation:RequestBuilder
try_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/body.rs	/^    pub(crate) fn try_clone(&self) -> Option<Body> {$/;"	P	implementation:Body
try_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn try_clone(&self) -> Option<Request> {$/;"	P	implementation:Request
try_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn try_clone(&self) -> Option<RequestBuilder> {$/;"	P	implementation:RequestBuilder
try_clone_no_body	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn try_clone_no_body() {$/;"	f	module:tests
try_clone_reusable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn try_clone_reusable() {$/;"	f	module:tests
try_clone_stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn try_clone_stream() {$/;"	f	module:tests
try_consume	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    macro_rules! try_consume {$/;"	M	function:parse_internal
try_consume	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    macro_rules! try_consume {$/;"	M	function:parse_rfc2822
try_consume	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parse.rs	/^    macro_rules! try_consume {$/;"	M	function:parse_rfc3339
try_fail	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/lib.rs	/^    fn try_fail(s: &str) -> Result<Vec<Yaml>, ScanError> {$/;"	f	module:tests
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/regex.rs	/^    fn try_from(r: &'a str) -> Result<Self, Self::Error> {$/;"	P	implementation:RegexRef
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn try_from(dh: Dh<T>) -> Result<PKey<T>, ErrorStack> {$/;"	P	implementation:PKey
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn try_from(dsa: Dsa<T>) -> Result<PKey<T>, ErrorStack> {$/;"	P	implementation:PKey
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn try_from(ec_key: EcKey<T>) -> Result<PKey<T>, ErrorStack> {$/;"	P	implementation:PKey
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn try_from(pkey: PKey<T>) -> Result<Dh<T>, ErrorStack> {$/;"	P	implementation:Dh
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn try_from(pkey: PKey<T>) -> Result<Dsa<T>, ErrorStack> {$/;"	P	implementation:Dsa
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn try_from(pkey: PKey<T>) -> Result<EcKey<T>, ErrorStack> {$/;"	P	implementation:EcKey
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn try_from(pkey: PKey<T>) -> Result<Rsa<T>, ErrorStack> {$/;"	P	implementation:Rsa
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkey.rs	/^    fn try_from(rsa: Rsa<T>) -> Result<PKey<T>, ErrorStack> {$/;"	P	implementation:PKey
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/lib.rs	/^    fn try_from(value: usize) -> Result<Self, Self::Error> {$/;"	P	implementation:HeadingLevel
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn try_from(s: &str) -> Result<InlineStr, StringTooLongError> {$/;"	P	implementation:InlineStr
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn try_from(req: HttpRequest<T>) -> crate::Result<Self> {$/;"	f
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    fn try_from(req: Request) -> crate::Result<Self> {$/;"	P	implementation:HttpRequest
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    fn try_from(req: HttpRequest<T>) -> crate::Result<Self> {$/;"	f
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    fn try_from(req: HttpRequest<T>) -> crate::Result<Self> {$/;"	f
try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    fn try_from(req: Request) -> crate::Result<Self> {$/;"	P	implementation:HttpRequest
try_get_matches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn try_get_matches(self) -> ClapResult<ArgMatches> {$/;"	P	implementation:App
try_get_matches_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn try_get_matches_from<I, T>(mut self, itr: I) -> ClapResult<ArgMatches>$/;"	P	implementation:App
try_get_matches_from_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn try_get_matches_from_mut<I, T>(&mut self, itr: I) -> ClapResult<ArgMatches>$/;"	P	implementation:App
try_get_session_ctx_index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^fn try_get_session_ctx_index() -> Result<&'static Index<Ssl, SslContext>, ErrorStack> {$/;"	f
try_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^fn try_help(c: &mut Colorizer, help: Option<&str>) {$/;"	f
try_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^macro_rules! try_opt {$/;"	M
try_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^macro_rules! try_opt {$/;"	M
try_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^macro_rules! try_opt {$/;"	M
try_parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn try_parse() -> Result<Self, Error> {$/;"	P	implementation:Box
try_parse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn try_parse() -> Result<Self, Error> {$/;"	P	interface:Parser
try_parse_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn try_parse_from<I, It>(itr: I) -> Result<Self, Error>$/;"	P	implementation:Box
try_parse_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn try_parse_from<I, T>(itr: I) -> Result<Self, Error>$/;"	P	interface:Parser
try_reuse	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    pub(crate) fn try_reuse(self) -> (Option<Bytes>, Self) {$/;"	P	implementation:Body
try_update_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn try_update_from<I, T>(&mut self, itr: I) -> Result<(), Error>$/;"	P	interface:Parser
ts_milliseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_milliseconds {$/;"	n	module:serde
ts_milliseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub mod ts_milliseconds {$/;"	n	module:serde
ts_milliseconds_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_milliseconds_option {$/;"	n	module:serde
ts_nanoseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_nanoseconds {$/;"	n	module:serde
ts_nanoseconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub mod ts_nanoseconds {$/;"	n	module:serde
ts_nanoseconds_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_nanoseconds_option {$/;"	n	module:serde
ts_seconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_seconds {$/;"	n	module:serde
ts_seconds	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    pub mod ts_seconds {$/;"	n	module:serde
ts_seconds_option	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub mod ts_seconds_option {$/;"	n	module:serde
tunnel	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^async fn tunnel<T>($/;"	f
tunnel_eof	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^fn tunnel_eof() -> BoxError {$/;"	f
tuple_impls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! tuple_impls {$/;"	M
tuple_impls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impls.rs	/^macro_rules! tuple_impls {$/;"	M
tuple_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn tuple_variant<V>(self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	P	interface:VariantAccess
tuple_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        fn tuple_variant<V>(mut self, len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:private
tuple_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        fn tuple_variant<V>(self, _len: usize, _visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:private
tuple_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn tuple_variant<V>(self, _len: usize, visitor: V) -> Result<V::Value, Self::Error>$/;"	f	module:content
two	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            two: Option<DateTime<Utc>>,$/;"	m	struct:serde::test_serde_bincode_optional::Test
two_args_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn two_args_of<F>(&self, condition: F) -> Option<(&Arg<'help>, &Arg<'help>)>$/;"	P	implementation:App
two_digits	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^    fn two_digits() {$/;"	f	module:tests
two_elements_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^fn two_elements_of<I, T>(mut iter: I) -> Option<(T, T)>$/;"	f
two_groups_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    fn two_groups_of<F>(&self, condition: F) -> Option<(&ArgGroup, &ArgGroup)>$/;"	P	implementation:App
tx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/body.rs	/^    tx: hyper::body::Sender,$/;"	m	struct:Sender
tx	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    tx: Option<ThreadSender>,$/;"	m	struct:InnerClientHandle
ty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    ty: Option<ValueSource>,$/;"	m	struct:MatchedArg
ty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/parse.rs	/^    ty: LinkStackTy,$/;"	m	struct:LinkStackEl
ty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    ty: PhantomData<T>,$/;"	m	struct:FromStrVisitor
ty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/ast.rs	/^    pub ty: &'a syn::Type,$/;"	m	struct:Field
type_	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn type_(&self) -> Nid {$/;"	P	implementation:MessageDigest
type_	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    type_: MessageDigest,$/;"	m	struct:Hasher
type_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn type_from(&self) -> Option<&syn::Type> {$/;"	P	implementation:Container
type_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    type_from: Option<syn::Type>,$/;"	m	struct:Container
type_ident	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    type_ident: &'static str,$/;"	m	struct:TaggedSerializer
type_into	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn type_into(&self) -> Option<&syn::Type> {$/;"	P	implementation:Container
type_into	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    type_into: Option<syn::Type>,$/;"	m	struct:Container
type_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type_name: &'a str,$/;"	m	struct:content::InternallyTaggedUnitVisitor
type_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        type_name: &'a str,$/;"	m	struct:content::UntaggedUnitVisitor
type_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^    fn type_name(&self) -> String {$/;"	P	implementation:Parameters
type_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^    fn type_name(&self) -> String {$/;"	P	implementation:Parameters
type_of_item	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^fn type_of_item(cont: &Container) -> syn::Type {$/;"	f
type_try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    pub fn type_try_from(&self) -> Option<&syn::Type> {$/;"	P	implementation:Container
type_try_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    type_try_from: Option<syn::Type>,$/;"	m	struct:Container
types	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/lib.rs	/^mod types;$/;"	n
tzset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^        fn tzset();$/;"	f	function:timegm
tzset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^        fn tzset();$/;"	f	function:tzset
tzset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^fn tzset() {$/;"	f
tzset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^    extern { fn tzset(); }$/;"	f	function:tzset
tzset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn tzset() {$/;"	f
tzset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^pub fn tzset() {}$/;"	f
tzset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^            fn tzset();$/;"	f	function:inner::timegm
u32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, E> IntoDeserializer<'de, E> for u32$/;"	c
u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'de, E> IdentifierDeserializer<'de, E> for u64$/;"	c
u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^impl<'de: 'a, 'a> Deserialize<'de> for &'a [u8] {$/;"	c
u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^impl<'de, 'a, E> IntoDeserializer<'de, E> for &'a [u8]$/;"	c
u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^impl<'a, E> IdentifierDeserializer<'a, E> for &'a [u8]$/;"	c
u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/cp437.rs	/^impl<'a> FromCp437 for &'a [u8] {$/;"	c
ua	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    fn ua() -> Option<http::header::HeaderValue> {$/;"	f	module:tests
ucmp	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/bn.rs	/^    pub fn ucmp(&self, oth: &BigNumRef) -> Ordering {$/;"	P	implementation:BigNumRef
uint_to_self	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! uint_to_self {$/;"	M
uncompressed_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub uncompressed_size: u64,$/;"	m	struct:ZipFileData
uncompressed_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    uncompressed_size: u64,$/;"	m	struct:ZipRawValues
unescape	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/scanners.rs	/^pub(crate) fn unescape(input: &str) -> CowStr<'_> {$/;"	f
unexpected	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn unexpected(&self) -> Unexpected {$/;"	P	implementation:content::Content
unexpected_multiple_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn unexpected_multiple_usage(cmd: &Command, arg: &Arg, usage: String) -> Self {$/;"	P	implementation:Error
ungroup	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/mod.rs	/^pub fn ungroup(mut ty: &Type) -> &Type {$/;"	f
unit_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    pub fn unit_only<T, E>(t: T) -> (T, UnitOnly<E>) {$/;"	f	module:private
unit_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn unit_variant(self) -> Result<(), Self::Error>;$/;"	P	interface:VariantAccess
unit_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        fn unit_variant(mut self) -> Result<(), Self::Error> {$/;"	f	module:private
unit_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        fn unit_variant(self) -> Result<(), Self::Error> {$/;"	f	module:private
unit_variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn unit_variant(self) -> Result<(), E> {$/;"	f	module:content
unix	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    mod unix {$/;"	n	module:inner
unix_mode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn unix_mode(&self) -> Option<u32> {$/;"	P	implementation:ZipFile
unix_permissions	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    pub fn unix_permissions(mut self, mode: u32) -> FileOptions {$/;"	P	implementation:FileOptions
unknown	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/case.rs	/^    unknown: &'a str,$/;"	m	struct:ParseError
unknown_argument	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn unknown_argument($/;"	P	implementation:Error
unnecessary_double_dash	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn unnecessary_double_dash(cmd: &Command, arg: String, usage: String) -> Self {$/;"	P	implementation:Error
unraw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/dummy.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
unraw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^fn unraw(ident: &Ident) -> String {$/;"	f
unrecognized_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn unrecognized_subcommand(cmd: &Command, subcmd: String, name: String) -> Self {$/;"	P	implementation:Error
unroll_arg_requires	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn unroll_arg_requires<F>(&self, func: F, arg: &Id) -> Vec<Id>$/;"	P	implementation:App
unroll_args_in_group	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub(crate) fn unroll_args_in_group(&self, group: &Id) -> Vec<Id> {$/;"	P	implementation:App
unroll_indent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/scanner.rs	/^    fn unroll_indent(&mut self, col: isize) {$/;"	P	implementation:Scanner
unset	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn unset(self, s: ArgSettings) -> Self {$/;"	P	implementation:Arg
unset_global_setting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn unset_global_setting(mut self, setting: AppSettings) -> Self {$/;"	P	implementation:App
unset_setting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn unset_setting<F>(mut self, setting: F) -> Self$/;"	P	implementation:Arg
unset_setting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn unset_setting<F>(mut self, setting: F) -> Self$/;"	P	implementation:App
unset_settings	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn unset_settings(mut self, settings: &[AppSettings]) -> Self {$/;"	P	implementation:App
unsupported_zip_error	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^fn unsupported_zip_error<T>(detail: &'static str) -> ZipResult<T> {$/;"	f
unwrap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    pub fn unwrap(self) -> T {$/;"	P	implementation:LocalResult
unwrap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn unwrap(self) -> W {$/;"	P	implementation:GenericZipWriter
unwrap_to_variant_closure	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn unwrap_to_variant_closure($/;"	f
update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    pub fn update(&mut self, input: &[u8], output: &mut [u8]) -> Result<usize, ErrorStack> {$/;"	P	implementation:Open
update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/envelope.rs	/^    pub fn update(&mut self, input: &[u8], output: &mut [u8]) -> Result<usize, ErrorStack> {$/;"	P	implementation:Seal
update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    pub fn update(&mut self, data: &[u8]) -> Result<(), ErrorStack> {$/;"	P	implementation:Hasher
update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn update(&mut self, buf: &[u8]) -> Result<(), ErrorStack> {$/;"	P	implementation:Signer
update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn update(&mut self, buf: &[u8]) -> Result<(), ErrorStack> {$/;"	P	implementation:Verifier
update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/symm.rs	/^    pub fn update(&mut self, input: &[u8], output: &mut [u8]) -> Result<usize, ErrorStack> {$/;"	P	implementation:Crypter
update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn update(&mut self, buf: &[u8]) {$/;"	P	implementation:ZipWriterStats
update	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    fn update(&mut self, input: u8) {$/;"	P	implementation:ZipCryptoKeys
update_from	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn update_from<I, T>(&mut self, itr: I)$/;"	P	interface:Parser
update_from_arg_matches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn update_from_arg_matches(&mut self, matches: &ArgMatches) -> Result<(), Error> {$/;"	P	implementation:Box
update_from_arg_matches	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn update_from_arg_matches(&mut self, matches: &ArgMatches) -> Result<(), Error>;$/;"	P	interface:FromArgMatches
update_local_file_header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^fn update_local_file_header<T: Write + io::Seek>($/;"	f
update_local_zip64_extra_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^fn update_local_zip64_extra_field<T: Write + io::Seek>($/;"	f
update_ty	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn update_ty(&mut self, ty: ValueSource) {$/;"	P	implementation:MatchedArg
uri	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/extension.rs	/^    pub fn uri(&mut self, uri: &str) -> &mut SubjectAlternativeName {$/;"	P	implementation:SubjectAlternativeName
uri	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn uri(&self) -> Option<&str> {$/;"	P	implementation:GeneralNameRef
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn url(&self) -> &Url {$/;"	P	implementation:Request
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    url: Url,$/;"	m	struct:Request
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub fn url(&self) -> &Url {$/;"	P	implementation:Response
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    url: Box<Url>,$/;"	m	struct:Response
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn url(&self) -> &Url {$/;"	P	implementation:Request
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn url(&self) -> &Url {$/;"	P	implementation:Response
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub fn url(&self) -> Option<&Url> {$/;"	P	implementation:Error
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    url: Option<Url>,$/;"	m	struct:Inner
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn url(s: &str) -> Url {$/;"	f	module:tests
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn url<T: IntoUrl>(t: T) {$/;"	f	function:_implied_bounds
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/redirect.rs	/^    pub fn url(&self) -> &Url {$/;"	P	implementation:Attempt
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs	/^    fn url(self, url: Url) -> Self {$/;"	P	implementation:Builder
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/response.rs	/^    fn url(self, url: Url) -> Self;$/;"	P	interface:ResponseBuilderExt
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn url(&self) -> &Url {$/;"	P	implementation:Request
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    url: Url,$/;"	m	struct:Request
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    pub fn url(&self) -> &Url {$/;"	P	implementation:Response
url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/response.rs	/^    url: Box<Url>,$/;"	m	struct:Response
url_bad_scheme	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^pub(crate) fn url_bad_scheme(url: Url) -> Error {$/;"	f
url_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn url_mut(&mut self) -> &mut Url {$/;"	P	implementation:Request
url_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn url_mut(&mut self) -> &mut Url {$/;"	P	implementation:Request
url_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/request.rs	/^    pub fn url_mut(&mut self) -> &mut Url {$/;"	P	implementation:Request
urls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    fn urls(self: Pin<&mut Self>) -> &mut Vec<Url> {$/;"	P	implementation:PendingRequest
usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn usage<S: Into<&'help str>>(self, usage: S) -> Self {$/;"	P	implementation:App
usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    usage: &'help str,$/;"	m	struct:UsageParser
usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    usage: &'cmd Usage<'help, 'cmd>,$/;"	m	struct:Help
usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/mod.rs	/^mod usage;$/;"	n
usage_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    usage_name: Option<String>,$/;"	m	struct:App
usage_parser	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod usage_parser;$/;"	n
usage_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    usage_str: Option<&'help str>,$/;"	m	struct:App
use_delimiter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn use_delimiter(self, yes: bool) -> Self {$/;"	P	implementation:Arg
use_long	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    use_long: bool,$/;"	m	struct:Help
use_long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn use_long_help(&self) -> bool {$/;"	P	implementation:Parser
use_native_tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn use_native_tls(mut self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
use_native_tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn use_native_tls(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
use_preconfigured_tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn use_preconfigured_tls(mut self, tls: impl Any) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
use_preconfigured_tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn use_preconfigured_tls(self, tls: impl Any) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
use_rustls_tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn use_rustls_tls(mut self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
use_rustls_tls	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn use_rustls_tls(self) -> ClientBuilder {$/;"	P	implementation:ClientBuilder
use_server_name_indication	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn use_server_name_indication(mut self, use_sni: bool) -> ConnectConfiguration {$/;"	P	implementation:ConnectConfiguration
use_stderr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub fn use_stderr(&self) -> bool {$/;"	P	implementation:Error
use_stderr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    use_stderr: bool,$/;"	m	struct:Colorizer
use_value_delimiter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn use_value_delimiter(mut self, yes: bool) -> Self {$/;"	P	implementation:Arg
user_agent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^            fn user_agent(headers: &HeaderMap) -> Option<HeaderValue> {$/;"	f	method:ClientBuilder::build
user_agent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/client.rs	/^    pub fn user_agent<V>(mut self, value: V) -> ClientBuilder$/;"	P	implementation:ClientBuilder
user_agent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    pub fn user_agent<V>(self, value: V) -> ClientBuilder$/;"	P	implementation:ClientBuilder
user_agent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    user_agent: Option<HeaderValue>,$/;"	m	struct:Connector
using_data_descriptor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub using_data_descriptor: bool,$/;"	m	struct:ZipFileData
utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^mod utc;$/;"	n
utc_minus_local	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn utc_minus_local(&self) -> i32 {$/;"	P	implementation:FixedOffset
utc_tm_to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/stub.rs	/^pub fn utc_tm_to_time(tm: &Tm) -> i64 {$/;"	f
utc_tm_to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/unix.rs	/^pub fn utc_tm_to_time(rust_tm: &Tm) -> i64 {$/;"	f
utc_tm_to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^pub fn utc_tm_to_time(tm: &Tm) -> i64 {$/;"	f
utc_tm_to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn utc_tm_to_time(rust_tm: &Tm) -> i64 {$/;"	f	module:inner
utc_tm_to_time	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^    pub fn utc_tm_to_time(tm: &Tm) -> i64 {$/;"	f	module:inner
utf8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^mod utf8;$/;"	n
util	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/lib.rs	/^mod util;$/;"	n
util	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^mod util;$/;"	n
util	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/lib.rs	/^mod util;$/;"	n
utils	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/generator/mod.rs	/^pub mod utils;$/;"	n
val	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^    val: InternalInternal,$/;"	m	struct:InternalFixed
val	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn val(&mut self, arg: &Arg<'help>) -> io::Result<()> {$/;"	P	implementation:Help
valid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn valid(&self) -> bool {$/;"	P	implementation:Mdf
valid	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn valid(&self) -> bool {$/;"	P	implementation:Of
validate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    pub(crate) fn validate($/;"	P	implementation:Validator
validate	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/zipcrypto.rs	/^    pub fn validate($/;"	P	implementation:ZipCryptoReader
validate_arg_conflicts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn validate_arg_conflicts(&self, a: &Arg<'help>, matcher: &ArgMatcher) -> bool {$/;"	P	implementation:Validator
validate_arg_num_occurs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn validate_arg_num_occurs(&self, a: &Arg, ma: &MatchedArg) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_arg_num_vals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn validate_arg_num_vals(&self, a: &Arg, ma: &MatchedArg) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_arg_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn validate_arg_values($/;"	P	implementation:Validator
validate_conflicts	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn validate_conflicts(&self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_exclusive	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn validate_exclusive(&self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_extra_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^fn validate_extra_data(file: &ZipFileData) -> ZipResult<()> {$/;"	f
validate_format	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/lib.rs	/^fn validate_format<'a>(fmt: TmFmt<'a>) -> Result<TmFmt<'a>, ParseError> {$/;"	f
validate_matched_args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn validate_matched_args(&self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_required	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn validate_required(&mut self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Validator
validate_required_unless	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/validator.rs	/^    fn validate_required_unless(&self, matcher: &ArgMatcher) -> ClapResult<()> {$/;"	P	implementation:Validator
validator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn validator<F, O, E>(mut self, mut f: F) -> Self$/;"	P	implementation:Arg
validator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/mod.rs	/^mod validator;$/;"	n
validator_os	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn validator_os<F, O, E>(mut self, mut f: F) -> Self$/;"	P	implementation:Arg
validator_regex	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn validator_regex($/;"	P	implementation:Arg
vals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn vals(&self) -> Iter<Vec<OsString>> {$/;"	P	implementation:MatchedArg
vals	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    vals: Vec<Vec<OsString>>,$/;"	m	struct:MatchedArg
vals_flatten	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/matched_arg.rs	/^    pub(crate) fn vals_flatten(&self) -> Flatten<Iter<Vec<OsString>>> {$/;"	P	implementation:MatchedArg
vals_for	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/bash.rs	/^fn vals_for(o: &Arg) -> String {$/;"	f
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    value: NaiveDate,$/;"	m	struct:NaiveDateDaysIterator
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    value: NaiveDate,$/;"	m	struct:NaiveDateWeeksIterator
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    value: Body,$/;"	m	struct:Part
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    value: Body,$/;"	m	struct:Part
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/cookie.rs	/^    pub fn value(&self) -> &str {$/;"	P	implementation:Cookie
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    value: Body,$/;"	m	struct:Part
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^pub mod value;$/;"	n
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    value: &'a [u8],$/;"	m	struct:BytesDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    value: &'a str,$/;"	m	struct:StrDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    value: &'de [u8],$/;"	m	struct:BorrowedBytesDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    value: &'de str,$/;"	m	struct:BorrowedStrDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    value: Cow<'a, str>,$/;"	m	struct:CowStrDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    value: Option<Second<I::Item>>,$/;"	m	struct:MapDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    value: String,$/;"	m	struct:StringDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    value: u32,$/;"	m	struct:U32Deserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::EnumRefDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::MapRefDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        value: Option<&'a Content<'de>>,$/;"	m	struct:content::VariantRefDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::EnumDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::MapDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        value: Option<Content<'de>>,$/;"	m	struct:content::VariantDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        value: PhantomData<Content<'de>>,$/;"	m	struct:content::ContentVisitor
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        value: PhantomData<TagOrContent<'de>>,$/;"	m	struct:content::TagOrContentVisitor
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        value: PhantomData<TaggedContent<'de, T>>,$/;"	m	struct:content::TaggedContentVisitor
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    value: &'a str,$/;"	m	struct:StrDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    value: &'de str,$/;"	m	struct:BorrowedStrDeserializer
value	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    value: Option<T>,$/;"	m	struct:Attr
value_completion	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/fish.rs	/^fn value_completion(option: &Arg) -> String {$/;"	f
value_delimiter	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn value_delimiter(mut self, d: char) -> Self {$/;"	P	implementation:Arg
value_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn value_hint(mut self, value_hint: ValueHint) -> Self {$/;"	P	implementation:Arg
value_hint	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/mod.rs	/^mod value_hint;$/;"	n
value_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn value_len(&self) -> Option<u64> {$/;"	P	implementation:Part
value_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn value_len(&self) -> Option<u64>;$/;"	P	interface:PartProps
value_len	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn value_len(&self) -> Option<u64> {$/;"	P	implementation:Part
value_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn value_name(self, name: &'help str) -> Self {$/;"	P	implementation:Arg
value_names	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn value_names(mut self, names: &[&'help str]) -> Self {$/;"	P	implementation:Arg
value_names_building_num_vals_from_usage	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/usage_parser.rs	/^    fn value_names_building_num_vals_from_usage() {$/;"	f	module:test
value_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn value_of<T: Key>(&self, id: T) -> Option<&str> {$/;"	P	implementation:ArgMatches
value_of_lossy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn value_of_lossy<T: Key>(&self, id: T) -> Option<Cow<'_, str>> {$/;"	P	implementation:ArgMatches
value_of_os	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn value_of_os<T: Key>(&self, id: T) -> Option<&OsStr> {$/;"	P	implementation:ArgMatches
value_of_t	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn value_of_t<R>(&self, name: &str) -> Result<R, Error>$/;"	P	implementation:ArgMatches
value_of_t_or_exit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn value_of_t_or_exit<R>(&self, name: &str) -> R$/;"	P	implementation:ArgMatches
value_source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn value_source<T: Key>(&self, id: T) -> Option<ValueSource> {$/;"	P	implementation:ArgMatches
value_source	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/mod.rs	/^mod value_source;$/;"	n
value_t	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! value_t {$/;"	M
value_t_or_exit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! value_t_or_exit {$/;"	M
value_terminator	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn value_terminator(mut self, term: &'help str) -> Self {$/;"	P	implementation:Arg
value_validation	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn value_validation($/;"	P	implementation:Error
value_variants	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/derive.rs	/^    fn value_variants<'a>() -> &'a [Self];$/;"	P	interface:ArgEnum
value_variants	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/shell.rs	/^    fn value_variants<'a>() -> &'a [Self] {$/;"	P	implementation:Shell
values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/attr.rs	/^    values: Vec<T>,$/;"	m	struct:VecAttr
values_exact_size	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    fn values_exact_size() {$/;"	f	module:tests
values_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn values_of<T: Key>(&self, id: T) -> Option<Values> {$/;"	P	implementation:ArgMatches
values_of_lossy	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn values_of_lossy<T: Key>(&self, id: T) -> Option<Vec<String>> {$/;"	P	implementation:ArgMatches
values_of_os	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn values_of_os<T: Key>(&self, id: T) -> Option<OsValues> {$/;"	P	implementation:ArgMatches
values_of_t	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn values_of_t<R>(&self, name: &str) -> Result<Vec<R>, Error>$/;"	P	implementation:ArgMatches
values_of_t_or_exit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/matches/arg_matches.rs	/^    pub fn values_of_t_or_exit<R>(&self, name: &str) -> Vec<R>$/;"	P	implementation:ArgMatches
values_t	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! values_t {$/;"	M
values_t_or_exit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! values_t_or_exit {$/;"	M
variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn variant<V>(self) -> Result<(V, Self::Variant), Self::Error>$/;"	P	interface:EnumAccess
variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        variant: &'a Content<'de>,$/;"	m	struct:content::EnumRefDeserializer
variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        variant: Content<'de>,$/;"	m	struct:content::EnumDeserializer
variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        variant: &'static str,$/;"	m	struct:content::SerializeStructVariant
variant	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        variant: &'static str,$/;"	m	struct:content::SerializeTupleVariant
variant_eq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^    fn variant_eq<T>(a: &T, b: &T) -> bool {$/;"	f	module:test_special_string
variant_ident	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    variant_ident: &'static str,$/;"	m	struct:TaggedSerializer
variant_identifier	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^macro_rules! variant_identifier {$/;"	M
variant_index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        variant_index: u32,$/;"	m	struct:content::SerializeStructVariant
variant_index	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^        variant_index: u32,$/;"	m	struct:content::SerializeTupleVariant
variant_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        variant_name: &'a str,$/;"	m	struct:content::InternallyTaggedUnitVisitor
variant_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        variant_name: &'a str,$/;"	m	struct:content::UntaggedUnitVisitor
variant_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/ser.rs	/^    variant_name: &'static str,$/;"	m	struct:TaggedSerializer
variant_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	P	interface:EnumAccess
variant_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn variant_seed<T>(mut self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^    fn variant_seed<T>(self, seed: T) -> Result<(T::Value, Self::Variant), Self::Error>$/;"	f
variant_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), E>$/;"	f	module:content
variant_seed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn variant_seed<V>(self, seed: V) -> Result<(V::Value, Self::Variant), Self::Error>$/;"	f	module:content
verbose	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^    verbose: verbose::Wrapper,$/;"	m	struct:Connector
verbose	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^mod verbose {$/;"	n
verified_chain	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn verified_chain(&self) -> Option<&StackRef<X509>> {$/;"	P	implementation:SslRef
verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ecdsa.rs	/^    pub fn verify<T>(&self, data: &[u8], eckey: &EcKeyRef<T>) -> Result<bool, ErrorStack>$/;"	P	implementation:EcdsaSigRef
verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ocsp.rs	/^    pub fn verify($/;"	P	implementation:OcspBasicResponseRef
verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/pkcs7.rs	/^    pub fn verify($/;"	P	implementation:Pkcs7Ref
verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn verify(&self, signature: &[u8]) -> Result<bool, ErrorStack> {$/;"	P	implementation:Verifier
verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn verify<T>(&self, key: &PKeyRef<T>) -> Result<bool, ErrorStack>$/;"	P	implementation:X509Ref
verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn verify<T>(&self, key: &PKeyRef<T>) -> Result<bool, ErrorStack>$/;"	P	implementation:X509ReqRef
verify	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^pub mod verify;$/;"	n
verify_callback	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_callback() {$/;"	f
verify_callback_load_certs	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_callback_load_certs() {$/;"	f
verify_cert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn verify_cert(&mut self) -> Result<bool, ErrorStack> {$/;"	P	implementation:X509StoreContextRef
verify_hostname	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    pub fn verify_hostname(mut self, verify_hostname: bool) -> ConnectConfiguration {$/;"	P	implementation:ConnectConfiguration
verify_hostname	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/connector.rs	/^    verify_hostname: bool,$/;"	m	struct:ConnectConfiguration
verify_invalid_hostname	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_invalid_hostname() {$/;"	f
verify_mode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn verify_mode(&self) -> SslVerifyMode {$/;"	P	implementation:SslContextRef
verify_mode	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn verify_mode(&self) -> SslVerifyMode {$/;"	P	implementation:SslRef
verify_oneshot	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    pub fn verify_oneshot(&mut self, signature: &[u8], buf: &[u8]) -> Result<bool, ErrorStack> {$/;"	P	implementation:Verifier
verify_param	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn verify_param(&self) -> &X509VerifyParamRef {$/;"	P	implementation:SslContextBuilder
verify_param_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn verify_param_mut(&mut self) -> &mut X509VerifyParamRef {$/;"	P	implementation:SslContextBuilder
verify_result	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn verify_result(&self) -> X509VerifyResult {$/;"	P	implementation:SslRef
verify_server_cert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    fn verify_server_cert($/;"	P	implementation:NoVerifier
verify_tls12_signature	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    fn verify_tls12_signature($/;"	P	implementation:NoVerifier
verify_tls13_signature	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/tls.rs	/^    fn verify_tls13_signature($/;"	P	implementation:NoVerifier
verify_trusted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_trusted() {$/;"	f
verify_trusted_callback_override_bad	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_trusted_callback_override_bad() {$/;"	f
verify_trusted_callback_override_ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_trusted_callback_override_ok() {$/;"	f
verify_trusted_get_error_err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_trusted_get_error_err() {$/;"	f
verify_trusted_get_error_ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_trusted_get_error_ok() {$/;"	f
verify_trusted_with_set_cert	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_trusted_with_set_cert() {$/;"	f
verify_untrusted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_untrusted() {$/;"	f
verify_untrusted_callback_override_bad	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_untrusted_callback_override_bad() {$/;"	f
verify_untrusted_callback_override_ok	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_untrusted_callback_override_ok() {$/;"	f
verify_valid_hostname	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn verify_valid_hostname() {$/;"	f
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn version<S: Into<&'help str>>(mut self, ver: S) -> Self {$/;"	P	implementation:App
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    version: Option<&'help str>,$/;"	m	struct:App
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod version;$/;"	n
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn version(&self) -> &'static str {$/;"	P	implementation:SslCipherRef
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn version(&self) -> &str {$/;"	P	implementation:SslRef
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/version.rs	/^pub fn version() -> &'static str {$/;"	f
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn version(&self) -> i32 {$/;"	P	implementation:X509Ref
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn version(&self) -> i32 {$/;"	P	implementation:X509ReqRef
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn version(&self) -> Version {$/;"	P	implementation:Request
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn version(mut self, version: Version) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    version: Version,$/;"	m	struct:Request
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    pub fn version(&self) -> Version {$/;"	P	implementation:Response
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/response.rs	/^    version: Version,$/;"	m	struct:Response
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn version(&self) -> Version {$/;"	P	implementation:Request
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn version(mut self, version: Version) -> RequestBuilder {$/;"	P	implementation:RequestBuilder
version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/response.rs	/^    pub fn version(&self) -> Version {$/;"	P	implementation:Response
version2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn version2(&self) -> Option<SslVersion> {$/;"	P	implementation:SslRef
version_err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    fn version_err(&self, use_long: bool) -> ClapError {$/;"	P	implementation:Parser
version_made_by	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    pub fn version_made_by(&self) -> (u8, u8) {$/;"	P	implementation:ZipFile
version_made_by	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub version_made_by: u16,$/;"	m	struct:Zip64CentralDirectoryEnd
version_made_by	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub version_made_by: u8,$/;"	m	struct:ZipFileData
version_message	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn version_message(self, s: impl Into<&'help str>) -> Self {$/;"	P	implementation:App
version_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/request.rs	/^    pub fn version_mut(&mut self) -> &mut Version {$/;"	P	implementation:Request
version_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/request.rs	/^    pub fn version_mut(&mut self) -> &mut Version {$/;"	P	implementation:Request
version_needed	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn version_needed(&self) -> u16 {$/;"	P	implementation:ZipFileData
version_needed_to_extract	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub version_needed_to_extract: u16,$/;"	m	struct:Zip64CentralDirectoryEnd
version_short	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn version_short(self, c: char) -> Self {$/;"	P	implementation:App
version_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn version_str(&self) -> &'static str {$/;"	P	implementation:SslRef
visible_alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn visible_alias<S: Into<&'help str>>(mut self, name: S) -> Self {$/;"	P	implementation:Arg
visible_alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn visible_alias<S: Into<&'help str>>(mut self, name: S) -> Self {$/;"	P	implementation:App
visible_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn visible_aliases(mut self, names: &[&'help str]) -> Self {$/;"	P	implementation:Arg
visible_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn visible_aliases(mut self, names: &[&'help str]) -> Self {$/;"	P	implementation:App
visible_long_flag_alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn visible_long_flag_alias(mut self, name: &'help str) -> Self {$/;"	P	implementation:App
visible_long_flag_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn visible_long_flag_aliases(mut self, names: &[&'help str]) -> Self {$/;"	P	implementation:App
visible_short_alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn visible_short_alias(mut self, name: char) -> Self {$/;"	P	implementation:Arg
visible_short_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn visible_short_aliases(mut self, names: &[char]) -> Self {$/;"	P	implementation:Arg
visible_short_flag_alias	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn visible_short_flag_alias(mut self, name: char) -> Self {$/;"	P	implementation:App
visible_short_flag_aliases	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn visible_short_flag_aliases(mut self, names: &[char]) -> Self {$/;"	P	implementation:App
visit_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_bool<E>(self, x: bool) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	P	implementation:BoolVisitor
visit_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_bool<E>(self, v: bool) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_bool<F>(self, value: bool) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_borrowed_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:BytesVisitor
visit_borrowed_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:PathVisitor
visit_borrowed_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:StrVisitor
visit_borrowed_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_borrowed_bytes<E>(self, v: &'de [u8]) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_borrowed_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_borrowed_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_borrowed_bytes<E>(self, v: &'a [u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_borrowed_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_borrowed_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_borrowed_bytes<F>(self, value: &'de [u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_borrowed_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/strings.rs	/^        fn visit_borrowed_str<E>(self, v: &'de str) -> Result<Self::Value, E>$/;"	P	implementation:serde_impl::CowStrVisitor
visit_borrowed_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:BytesVisitor
visit_borrowed_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:PathVisitor
visit_borrowed_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:StrVisitor
visit_borrowed_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_borrowed_str<E>(self, v: &'de str) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_borrowed_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_borrowed_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_borrowed_str<E>(self, v: &'a str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_borrowed_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_borrowed_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_borrowed_str<F>(self, value: &'de str) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_byte_buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_byte_buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_byte_buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_byte_buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_byte_buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_byte_buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_byte_buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_byte_buf<E>(self, v: Vec<u8>) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_byte_buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_byte_buf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_byte_buf<F>(self, value: Vec<u8>) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_bytes<E>(self, bytes: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:IgnoredAny
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                fn visit_bytes<E>(self, value: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:range::Field::deserialize::FieldVisitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_bytes<E>(self, v: &[u8]) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_bytes	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_bytes<F>(self, value: &[u8]) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	P	implementation:CharVisitor
visit_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_char<E>(self, v: char) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_char<F>(self, value: char) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_content_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn visit_content_map<'de, V, E>($/;"	f	module:content
visit_content_map_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn visit_content_map_ref<'a, 'de, V, E>($/;"	f	module:content
visit_content_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn visit_content_seq<'de, V, E>(content: Vec<Content<'de>>, visitor: V) -> Result<V::Value, /;"	f	module:content
visit_content_seq_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^    fn visit_content_seq_ref<'a, 'de, V, E>($/;"	f	module:content
visit_data_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_data_mut(&mut self, data: &mut Data) {$/;"	P	implementation:ReplaceReceiver
visit_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:OsStringVisitor
visit_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_enum<A>(self, data: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_enum<V>(self, _visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_enum	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_enum<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_expr_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_expr_mut(&mut self, expr: &mut Expr) {$/;"	P	implementation:ReplaceReceiver
visit_expr_path_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_expr_path_mut(&mut self, expr: &mut ExprPath) {$/;"	P	implementation:ReplaceReceiver
visit_expr_path_mut_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_expr_path_mut_impl(&mut self, expr: &mut ExprPath) {$/;"	P	implementation:ReplaceReceiver
visit_f32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_f32<E>(self, v: f32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_f32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_f32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_f32<F>(self, value: f32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_f64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_f64<E>(self, x: f64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_f64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_f64<E>(self, v: f64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_f64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_f64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_f64<F>(self, value: f64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^        fn visit_field(&mut self, field: &'ast syn::Field) {$/;"	P	implementation:with_bound::FindTyParams
visit_generics_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_generics_mut(&mut self, generics: &mut Generics) {$/;"	P	implementation:ReplaceReceiver
visit_i16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_i16<E>(self, v: i16) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_i16<F>(self, value: i16) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_i32<E>(self, v: i32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_i32<F>(self, value: i32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_milliseconds::MilliSecondsTimestampVisitor
visit_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_nanoseconds::NanoSecondsTimestampVisitor
visit_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_seconds::SecondsTimestampVisitor
visit_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_milliseconds::NaiveDateTimeFromMilliSecondsVisitor
visit_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_nanoseconds::NaiveDateTimeFromNanoSecondsVisitor
visit_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_i64<E>(self, value: i64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_seconds::NaiveDateTimeFromSecondsVisitor
visit_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_i64<E>(self, x: i64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_i64<E>(self, v: i64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_i64<F>(self, value: i64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_i8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_i8<E>(self, v: i8) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_i8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_i8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_i8<F>(self, value: i8) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_macro	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^        fn visit_macro(&mut self, _mac: &'ast syn::Macro) {}$/;"	P	implementation:with_bound::FindTyParams
visit_macro_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_macro_mut(&mut self, _mac: &mut Macro) {}$/;"	P	implementation:ReplaceReceiver
visit_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:Duration::deserialize::DurationVisitor
visit_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
visit_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        fn visit_map<A>(self, mut map: A) -> Result<Self::Value, A::Error>$/;"	f	module:range
visit_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_map<A>(self, map: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_map<M>(self, mut access: M) -> Result<(), M::Error>$/;"	P	implementation:content::InternallyTaggedUnitVisitor
visit_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_map<M>(self, mut map: M) -> Result<Self::Value, M::Error>$/;"	f	module:content
visit_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_map<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_map	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_map<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:IgnoredAny
visit_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:Visitor
visit_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::ContentVisitor
visit_newtype_struct	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_newtype_struct<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_none<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
visit_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_none<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
visit_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_none<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
visit_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	f
visit_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_none<E>(self) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_none<E>(self) -> Result<(), E>$/;"	P	implementation:content::UntaggedUnitVisitor
visit_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_none	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_none<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^        fn visit_path(&mut self, path: &'ast syn::Path) {$/;"	P	implementation:with_bound::FindTyParams
visit_path_arguments	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^        fn visit_path_arguments(&mut self, arguments: &'ast syn::PathArguments) {$/;"	P	implementation:with_bound::FindTyParams
visit_path_arguments_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_path_arguments_mut(&mut self, arguments: &mut PathArguments) {$/;"	P	implementation:ReplaceReceiver
visit_path_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_path_mut(&mut self, path: &mut Path) {$/;"	P	implementation:ReplaceReceiver
visit_path_segment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^        fn visit_path_segment(&mut self, segment: &'ast syn::PathSegment) {$/;"	P	implementation:with_bound::FindTyParams
visit_return_type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^        fn visit_return_type(&mut self, return_type: &'ast syn::ReturnType) {$/;"	P	implementation:with_bound::FindTyParams
visit_return_type_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_return_type_mut(&mut self, return_type: &mut ReturnType) {$/;"	P	implementation:ReplaceReceiver
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:IgnoredAny
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:Duration::deserialize::DurationVisitor
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:SystemTime::deserialize::DurationVisitor
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^            fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	function:deserialize_in_place
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^        fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	f	module:range
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_seq<A>(self, _: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:ArrayVisitor
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_seq<A>(self, mut seq: A) -> Result<Self::Value, A::Error>$/;"	P	implementation:CStringVisitor
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_seq<A>(self, seq: A) -> Result<Self::Value, A::Error>$/;"	P	interface:Visitor
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_seq<S>(self, _: S) -> Result<(), S::Error>$/;"	P	implementation:content::InternallyTaggedUnitVisitor
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_seq<S>(self, mut seq: S) -> Result<Self::Value, S::Error>$/;"	f	module:content
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_seq<V>(self, mut visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::ContentVisitor
visit_seq	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_seq<V>(self, visitor: V) -> Result<Self::Value, V::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_some<D>(self, d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	P	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
visit_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_some<D>(self, d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	P	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
visit_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_some<D>(self, d: D) -> Result<Option<DateTime<Utc>>, D::Error>$/;"	P	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
visit_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:IgnoredAny
visit_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	f
visit_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	interface:Visitor
visit_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::ContentVisitor
visit_some	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_some<D>(self, deserializer: D) -> Result<Self::Value, D::Error>$/;"	P	implementation:content::TagOrContentVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^        fn visit_str<E>(self, value: &str) -> Result<DateTime<FixedOffset>, E>$/;"	P	implementation:serde::DateTimeVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:month_serde::MonthVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^        fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:weekday_serde::WeekdayVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^        fn visit_str<E>(self, value: &str) -> Result<NaiveDate, E>$/;"	P	implementation:serde::NaiveDateVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^        fn visit_str<E>(self, value: &str) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::NaiveDateTimeVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^        fn visit_str<E>(self, value: &str) -> Result<NaiveTime, E>$/;"	P	implementation:serde::NaiveTimeVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	P	implementation:IgnoredAny
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:Duration::deserialize::Field::deserialize::FieldVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:SystemTime::deserialize::Field::deserialize::FieldVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                fn visit_str<E>(self, value: &str) -> Result<Self::Value, E>$/;"	P	implementation:range::Field::deserialize::FieldVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_str<E>(self, s: &str) -> Result<Self::Value, E>$/;"	f
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:CharVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	P	implementation:content::TagContentOtherFieldVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_str<E>(self, field: &str) -> Result<Self::Value, E>$/;"	P	implementation:content::TagOrContentFieldVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_str<E>(self, v: &str) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_str<F>(self, value: &str) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:CStringVisitor
visit_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:PathBufVisitor
visit_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:StringInPlaceVisitor
visit_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:StringVisitor
visit_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_bytes::CowBytesVisitor
visit_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_string<E>(self, v: String) -> Result<Self::Value, E>$/;"	P	implementation:borrow_cow_str::CowStrVisitor
visit_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_string	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_string<F>(self, value: String) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_type	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^        fn visit_type(&mut self, ty: &'ast syn::Type) {$/;"	P	implementation:with_bound::FindTyParams
visit_type_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_type_mut(&mut self, ty: &mut Type) {$/;"	P	implementation:ReplaceReceiver
visit_type_mut_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_type_mut_impl(&mut self, ty: &mut Type) {$/;"	P	implementation:ReplaceReceiver
visit_type_param_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^        fn visit_type_param_bound(&mut self, bound: &'ast syn::TypeParamBound) {$/;"	P	implementation:with_bound::FindTyParams
visit_type_param_bound_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_type_param_bound_mut(&mut self, bound: &mut TypeParamBound) {$/;"	P	implementation:ReplaceReceiver
visit_type_path_mut	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_type_path_mut(&mut self, ty: &mut TypePath) {$/;"	P	implementation:ReplaceReceiver
visit_type_path_mut_impl	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/internals/receiver.rs	/^    fn visit_type_path_mut_impl(&mut self, ty: &mut TypePath) {$/;"	P	implementation:ReplaceReceiver
visit_u16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_u16<E>(self, v: u16) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u16	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_u16<F>(self, value: u16) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_u32<E>(self, v: u32) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u32	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_u32<F>(self, value: u32) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_milliseconds::MilliSecondsTimestampVisitor
visit_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_nanoseconds::NanoSecondsTimestampVisitor
visit_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<DateTime<Utc>, E>$/;"	P	implementation:serde::ts_seconds::SecondsTimestampVisitor
visit_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_milliseconds::NaiveDateTimeFromMilliSecondsVisitor
visit_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_nanoseconds::NaiveDateTimeFromNanoSecondsVisitor
visit_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^            fn visit_u64<E>(self, value: u64) -> Result<NaiveDateTime, E>$/;"	P	implementation:serde::ts_seconds::NaiveDateTimeFromSecondsVisitor
visit_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_u64<E>(self, x: u64) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^                    fn visit_u64<E>(self, value: u64) -> Result<Self::Value, E>$/;"	P	implementation:deserialize::Field::deserialize::FieldVisitor
visit_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_u64<E>(self, v: u64) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u64	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_u64<F>(self, value: u64) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_u8<E>(self, v: u8) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_u8	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_u8<F>(self, value: u8) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visit_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_unit<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_milliseconds_option::OptionMilliSecondsTimestampVisitor
visit_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_unit<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_nanoseconds_option::OptionNanoSecondsTimestampVisitor
visit_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^            fn visit_unit<E>(self) -> Result<Option<DateTime<Utc>>, E>$/;"	P	implementation:serde::ts_seconds_option::OptionSecondsTimestampVisitor
visit_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/ignored_any.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E> {$/;"	P	implementation:IgnoredAny
visit_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:PhantomDataVisitor
visit_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	implementation:UnitVisitor
visit_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/impls.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	f
visit_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/mod.rs	/^    fn visit_unit<E>(self) -> Result<Self::Value, E>$/;"	P	interface:Visitor
visit_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_unit<E>(self) -> Result<(), E>$/;"	P	implementation:content::UntaggedUnitVisitor
visit_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::ContentVisitor
visit_unit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/private/de.rs	/^        fn visit_unit<F>(self) -> Result<Self::Value, F>$/;"	P	implementation:content::TagOrContentVisitor
visitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        visitor: V,$/;"	m	struct:private::SeedStructVariant
visitor	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/value.rs	/^        visitor: V,$/;"	m	struct:private::SeedTupleVariant
void	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/ser/impossible.rs	/^    void: Void,$/;"	m	struct:Impossible
vtable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^    vtable: &'static ErrorVTable,$/;"	m	struct:ErrorImpl
vtable	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/error.rs	/^unsafe fn vtable(p: NonNull<ErrorImpl>) -> &'static ErrorVTable {$/;"	f
w	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/macros.rs	/^macro_rules! w {$/;"	M
wait	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/mod.rs	/^mod wait;$/;"	n
wait_on_exit	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    wait_on_exit: bool,$/;"	m	struct:ErrorInner
wake_by_ref	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/wait.rs	/^    fn wake_by_ref(arc_self: &Arc<Self>) {$/;"	P	implementation:ThreadWaker
walk_spine	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn walk_spine(&self) -> impl std::iter::DoubleEndedIterator<Item = &TreeIndex> {$/;"	P	implementation:Tree
warning	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/fmt.rs	/^    pub(crate) fn warning(&mut self, msg: impl Into<String>) {$/;"	P	implementation:Colorizer
warning	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn warning<T: Into<String> + AsRef<[u8]>>(&mut self, msg: T) -> io::Result<()> {$/;"	P	implementation:Help
week	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    pub fn week(&self) -> u32 {$/;"	P	implementation:IsoWeek
week0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    pub fn week0(&self) -> u32 {$/;"	P	implementation:IsoWeek
week_from_mon	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub week_from_mon: Option<u32>,$/;"	m	struct:Parsed
week_from_sun	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub week_from_sun: Option<u32>,$/;"	m	struct:Parsed
weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn weekday(&self) -> Weekday {$/;"	P	implementation:Date
weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn weekday(&self) -> Weekday {$/;"	P	implementation:DateTime
weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub weekday: Option<Weekday>,$/;"	m	struct:Parsed
weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn weekday(&self) -> Weekday;$/;"	P	interface:Datelike
weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn weekday(&self) -> Weekday {$/;"	P	implementation:NaiveDate
weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn weekday(&self) -> Weekday {$/;"	P	implementation:NaiveDateTime
weekday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn weekday(&self) -> Weekday {$/;"	P	implementation:Of
weekday_serde	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^mod weekday_serde {$/;"	n
weeks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn weeks(weeks: i64) -> Duration {$/;"	P	implementation:Duration
weeks	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn weeks(weeks: i64) -> Duration {$/;"	P	implementation:Duration
west	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn west(secs: i32) -> FixedOffset {$/;"	P	implementation:FixedOffset
west_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/fixed.rs	/^    pub fn west_opt(secs: i32) -> Option<FixedOffset> {$/;"	P	implementation:FixedOffset
whitespace_normalization	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/linklabel.rs	/^    fn whitespace_normalization() {$/;"	f	module:test
will_args_wrap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn will_args_wrap(&self, args: &[&Arg<'help>], longest: usize) -> bool {$/;"	P	implementation:Help
will_subcommands_wrap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn will_subcommands_wrap<'a>($/;"	P	implementation:Help
with_basic_auth	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/proxy.rs	/^    fn with_basic_auth<T: Into<String>, U: Into<String>>($/;"	P	implementation:ProxyScheme
with_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^pub fn with_bound($/;"	f
with_capacity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/graph.rs	/^    pub(crate) fn with_capacity(s: usize) -> Self {$/;"	f
with_capacity	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/tree.rs	/^    pub(crate) fn with_capacity(cap: usize) -> Tree<T> {$/;"	P	implementation:Tree
with_cmd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn with_cmd(self, cmd: &Command) -> Self {$/;"	P	implementation:Error
with_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    fn with_context<C, F>(self, context: F) -> Result<T, Error>$/;"	P	implementation:Option
with_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    fn with_context<C, F>(self, context: F) -> Result<T, Error>$/;"	f
with_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^    fn with_context<C, F>(self, f: F) -> Result<T, Error>$/;"	P	interface:Context
with_day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_day(&self, day: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_day(&self, day: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_day(&self, day: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_day(&self, day: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_day(&self, day: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_day	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_day(&self, day: u32) -> Mdf {$/;"	P	implementation:Mdf
with_day0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_day0(&self, day0: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_day0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_day0(&self, day0: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_day0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_day0(&self, day0: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_day0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_day0(&self, day0: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_day0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_day0(&self, day0: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_description	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub fn with_description(description: String, kind: ErrorKind) -> Self {$/;"	P	implementation:Error
with_err_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/error.rs	/^    fn with_err_path<F, P>(self, path: F) -> Self$/;"	P	implementation:Result
with_err_path	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/error.rs	/^    fn with_err_path<F, P>(self, path: F) -> Self$/;"	P	interface:IoResultExt
with_flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_flags(&self, YearFlags(flags): YearFlags) -> Mdf {$/;"	P	implementation:Mdf
with_flags	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_flags(&self, YearFlags(flags): YearFlags) -> Of {$/;"	P	implementation:Of
with_hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_hour(&self, hour: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_hour(&self, hour: u32) -> Option<Self>;$/;"	P	interface:Timelike
with_hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_hour(&self, hour: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_hour	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn with_hour(&self, hour: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
with_id	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub(crate) fn with_id(id: Id) -> Self {$/;"	P	implementation:ArgGroup
with_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn with_inner<F>(self, func: F) -> Self$/;"	P	implementation:Form
with_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/multipart.rs	/^    fn with_inner<F>(self, func: F) -> Self$/;"	P	implementation:Part
with_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/client.rs	/^    fn with_inner<F>(mut self, func: F) -> ClientBuilder$/;"	P	implementation:ClientBuilder
with_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn with_inner<F>(self, func: F) -> Self$/;"	P	implementation:Form
with_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/blocking/multipart.rs	/^    fn with_inner<F>(self, func: F) -> Self$/;"	P	implementation:Part
with_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    fn with_inner<F>(self, func: F) -> Self$/;"	P	implementation:Form
with_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/wasm/multipart.rs	/^    fn with_inner<F>(self, func: F) -> Self$/;"	P	implementation:Part
with_lifetime_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^pub fn with_lifetime_bound(generics: &syn::Generics, lifetime: &str) -> syn::Generics {$/;"	f
with_mdf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_mdf(&self, mdf: Mdf) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_minute(&self, min: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_minute(&self, min: u32) -> Option<Self>;$/;"	P	interface:Timelike
with_minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_minute(&self, min: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_minute	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn with_minute(&self, min: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
with_month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_month(&self, month: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_month(&self, month: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_month(&self, month: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_month(&self, month: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_month(&self, month: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_month	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_month(&self, month: u32) -> Mdf {$/;"	P	implementation:Mdf
with_month0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_month0(&self, month0: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_month0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_month0(&self, month0: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_month0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_month0(&self, month0: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_month0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_month0(&self, month0: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_month0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_month0(&self, month0: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg.rs	/^    pub fn with_name<S: Into<&'help str>>(n: S) -> Self {$/;"	P	implementation:Arg
with_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/arg_group.rs	/^    pub fn with_name<S: Into<&'help str>>(n: S) -> Self {$/;"	P	implementation:ArgGroup
with_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/lib.rs	/^    pub fn with_name<'help>(name: &str) -> App<'help> {$/;"	P	implementation:SubCommand
with_nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<Self>;$/;"	P	interface:Timelike
with_nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_nanosecond	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn with_nanosecond(&self, nano: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
with_of	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_of(&self, of: Of) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_ordinal(&self, ordinal: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_ordinal	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^    pub fn with_ordinal(&self, ordinal: u32) -> Of {$/;"	P	implementation:Of
with_ordinal0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_ordinal0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_ordinal0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<Self>;$/;"	P	interface:Datelike
with_ordinal0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_ordinal0	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_ordinal0(&self, ordinal0: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_remainer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/strftime.rs	/^    fn with_remainer(s: &'a str) -> StrftimeItems<'a> {$/;"	P	implementation:StrftimeItems
with_second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_second(&self, sec: u32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_second(&self, sec: u32) -> Option<Self>;$/;"	P	interface:Timelike
with_second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_second(&self, sec: u32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
with_second	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/time.rs	/^    fn with_second(&self, sec: u32) -> Option<NaiveTime> {$/;"	P	implementation:NaiveTime
with_self_bound	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^pub fn with_self_bound($/;"	f
with_timeout	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^async fn with_timeout<T, F>(f: F, timeout: Option<Duration>) -> Result<T, BoxError>$/;"	f
with_timezone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    pub fn with_timezone<Tz2: TimeZone>(&self, tz: &Tz2) -> Date<Tz2> {$/;"	P	implementation:Date
with_timezone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    pub fn with_timezone<Tz2: TimeZone>(&self, tz: &Tz2) -> DateTime<Tz2> {$/;"	P	implementation:DateTime
with_url	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/error.rs	/^    pub(crate) fn with_url(mut self, url: Url) -> Error {$/;"	P	implementation:Error
with_where_predicates	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^pub fn with_where_predicates($/;"	f
with_where_predicates_from_fields	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^pub fn with_where_predicates_from_fields($/;"	f
with_where_predicates_from_variants	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^pub fn with_where_predicates_from_variants($/;"	f
with_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn with_year(&self, year: i32) -> Option<Date<Tz>> {$/;"	P	implementation:Date
with_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn with_year(&self, year: i32) -> Option<DateTime<Tz>> {$/;"	P	implementation:DateTime
with_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn with_year(&self, year: i32) -> Option<Self>;$/;"	P	interface:Datelike
with_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn with_year(&self, year: i32) -> Option<NaiveDate> {$/;"	P	implementation:NaiveDate
with_year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn with_year(&self, year: i32) -> Option<NaiveDateTime> {$/;"	P	implementation:NaiveDateTime
without_defaults	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/bound.rs	/^pub fn without_defaults(generics: &syn::Generics) -> syn::Generics {$/;"	f
wlnerr	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/macros.rs	/^macro_rules! wlnerr {$/;"	M
wrap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    pub(crate) fn wrap(body: hyper::Body) -> Body {$/;"	P	implementation:Body
wrap	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/connect.rs	/^        pub(super) fn wrap<T: super::AsyncConn>(&self, conn: T) -> super::BoxConn {$/;"	P	implementation:verbose::Wrapper
wrap_deserialize_field_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn wrap_deserialize_field_with($/;"	f
wrap_deserialize_variant_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn wrap_deserialize_variant_with($/;"	f
wrap_deserialize_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/de.rs	/^fn wrap_deserialize_with($/;"	f
wrap_help_last_word	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn wrap_help_last_word() {$/;"	f	module:test
wrap_in_const	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/dummy.rs	/^pub fn wrap_in_const($/;"	f
wrap_serialize_field_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn wrap_serialize_field_with($/;"	f
wrap_serialize_variant_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn wrap_serialize_variant_with($/;"	f
wrap_serialize_with	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde_derive-1.0.136/src/ser.rs	/^fn wrap_serialize_with($/;"	f
wrap_stream	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/reqwest-0.11.9/src/async_impl/body.rs	/^    pub fn wrap_stream<S>(stream: S) -> Body$/;"	P	implementation:Body
wrapper	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/lib.rs	/^mod wrapper;$/;"	n
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/util/fnv.rs	/^    fn write(&mut self, bytes: &[u8]) {$/;"	P	implementation:FnvHasher
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/hash.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Hasher
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Signer
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/sign.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:Verifier
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> c_int {$/;"	P	implementation:SslRef
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:SslStream
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn write(&mut self, _: &[u8]) -> io::Result<usize> {$/;"	P	implementation:write_panic::ExplodingStream
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:flush_panic::ExplodingStream
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:read_panic::ExplodingStream
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^        fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:stateless::MemoryStream
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    fn write(&mut self, s: &str) -> io::Result<()> {$/;"	f
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/file/mod.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:NamedTempFile
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/tempfile-3.3.0/src/spooled.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:SpooledTempFile
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/lib.rs	/^pub mod write;$/;"	n
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub fn write<T: Write>(&self, writer: &mut T) -> ZipResult<()> {$/;"	P	implementation:CentralDirectoryEnd
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub fn write<T: Write>(&self, writer: &mut T) -> ZipResult<()> {$/;"	P	implementation:Zip64CentralDirectoryEnd
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub fn write<T: Write>(&self, writer: &mut T) -> ZipResult<()> {$/;"	P	implementation:Zip64CentralDirectoryEndLocator
write	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {$/;"	P	implementation:ZipWriter
write_about	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_about(&mut self, before_new_line: bool, after_new_line: bool) -> io::Result<()> {$/;"	P	implementation:Help
write_after_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_after_help(&mut self) -> io::Result<()> {$/;"	P	implementation:Help
write_all	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/fs_extra-1.2.0/src/file.rs	/^pub fn write_all<P>(path: P, content: &str) -> Result<()>$/;"	f
write_all_args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    pub(crate) fn write_all_args(&mut self) -> io::Result<()> {$/;"	P	implementation:Help
write_arg	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_arg($/;"	P	implementation:Help
write_arg_inner	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_arg_inner($/;"	P	implementation:Help
write_args	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_args(&mut self, args: &[&Arg<'help>]) -> io::Result<()> {$/;"	P	implementation:Help
write_args_unsorted	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_args_unsorted(&mut self, args: &[&Arg<'help>]) -> io::Result<()> {$/;"	P	implementation:Help
write_author	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_author(&mut self, before_new_line: bool, after_new_line: bool) -> io::Result<()> {$/;"	P	implementation:Help
write_before_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_before_help(&mut self) -> io::Result<()> {$/;"	P	implementation:Help
write_bin_name	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_bin_name(&mut self) -> io::Result<()> {$/;"	P	implementation:Help
write_central_directory_header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^fn write_central_directory_header<T: Write>(writer: &mut T, file: &ZipFileData) -> ZipResult<()>/;"	f
write_central_zip64_extra_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^fn write_central_zip64_extra_field<T: Write>(writer: &mut T, file: &ZipFileData) -> ZipResult<u1/;"	f
write_dynamic_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    fn write_dynamic_context(&self, c: &mut Colorizer) -> bool {$/;"	P	implementation:Error
write_early_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn write_early_data(&mut self, buf: &[u8]) -> Result<usize, Error> {$/;"	P	implementation:SslStream
write_early_data	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/mod.rs	/^    pub fn write_early_data(&mut self, buf: &[u8]) -> Result<usize, Error> {$/;"	f
write_empty_zip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn write_empty_zip() {$/;"	f	module:test
write_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^    fn write_fmt(&mut self, args: Arguments) -> io::Result<()> {$/;"	P	implementation:String
write_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^    fn write_fmt(&mut self, args: Arguments) -> io::Result<()> {$/;"	f
write_fmt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^    fn write_fmt(&mut self, args: Arguments) -> io::Result<()>;$/;"	P	interface:StrWrite
write_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn write_help<W: io::Write>(&mut self, w: &mut W) -> io::Result<()> {$/;"	P	implementation:App
write_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    pub(crate) fn write_help(&mut self) -> io::Result<()> {$/;"	P	implementation:Help
write_help_err	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/parse/parser.rs	/^    pub(crate) fn write_help_err(&self) -> ClapResult<Colorizer> {$/;"	P	implementation:Parser
write_html	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^pub fn write_html<'a, I, W>(writer: W, iter: I) -> io::Result<()>$/;"	f
write_indent	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    fn write_indent(&mut self) -> EmitResult {$/;"	P	implementation:escape_str::YamlEmitter
write_local_file_header	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^fn write_local_file_header<T: Write>(writer: &mut T, file: &ZipFileData) -> ZipResult<()> {$/;"	f
write_local_minus_utc	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/mod.rs	/^            fn write_local_minus_utc($/;"	f	function:format_inner
write_local_zip64_extra_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^fn write_local_zip64_extra_field<T: Write>(writer: &mut T, file: &ZipFileData) -> ZipResult<()> /;"	f
write_long_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn write_long_help<W: io::Write>(&mut self, w: &mut W) -> io::Result<()> {$/;"	P	implementation:App
write_long_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn write_long_version<W: io::Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	P	implementation:App
write_method	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^macro_rules! write_method {$/;"	M
write_mimetype_zip	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn write_mimetype_zip() {$/;"	f	module:test
write_newline	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    fn write_newline(&mut self) -> io::Result<()> {$/;"	f
write_panic	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn write_panic() {$/;"	f
write_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/context.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	P	implementation:Quoted
write_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	P	implementation:Buf
write_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/fmt.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	f
write_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^    fn write_str(&mut self, s: &str) -> io::Result<()> {$/;"	P	implementation:String
write_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^    fn write_str(&mut self, s: &str) -> io::Result<()> {$/;"	f
write_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/escape.rs	/^    fn write_str(&mut self, s: &str) -> io::Result<()>;$/;"	P	interface:StrWrite
write_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/serde-1.0.136/src/de/format.rs	/^    fn write_str(&mut self, s: &str) -> fmt::Result {$/;"	P	implementation:Buf
write_subcommand	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_subcommand($/;"	P	implementation:Help
write_subcommands	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_subcommands(&mut self, cmd: &Command<'help>) -> io::Result<()> {$/;"	P	implementation:Help
write_templated_help	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_templated_help(&mut self, template: &str) -> io::Result<()> {$/;"	P	implementation:Help
write_to_file	/mnt/c/Users/SamanthaC/rust/md_puppy/src/markdown_compiling.rs	/^    pub fn write_to_file(&mut self) -> Result<()> {$/;"	P	implementation:Page
write_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/command.rs	/^    pub fn write_version<W: io::Write>(&self, w: &mut W) -> ClapResult<()> {$/;"	P	implementation:App
write_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    fn write_version(&mut self) -> io::Result<()> {$/;"	P	implementation:Help
write_zip_dir	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    fn write_zip_dir() {$/;"	f	module:test
writer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/output/help.rs	/^    writer: HelpWriter<'writer>,$/;"	m	struct:Help
writer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/pulldown-cmark-0.9.1/src/html.rs	/^    writer: W,$/;"	m	struct:HtmlWriter
writer	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/emitter.rs	/^    writer: &'a mut dyn fmt::Write,$/;"	m	struct:YamlEmitter
writing_raw	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    writing_raw: bool,$/;"	m	struct:ZipWriter
writing_to_central_extra_field_only	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    writing_to_central_extra_field_only: bool,$/;"	m	struct:ZipWriter
writing_to_extra_field	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    writing_to_extra_field: bool,$/;"	m	struct:ZipWriter
writing_to_file	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/write.rs	/^    writing_to_file: bool,$/;"	m	struct:ZipWriter
written	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/anyhow-1.0.55/src/ensure.rs	/^    written: usize,$/;"	m	struct:Buf
wrong_number_of_values	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/error/mod.rs	/^    pub(crate) fn wrong_number_of_values($/;"	P	implementation:Error
x509	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/lib.rs	/^pub mod x509;$/;"	n
x509	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn x509(&self) -> Option<&X509Ref> {$/;"	P	implementation:X509ObjectRef
x509_builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn x509_builder() {$/;"	f
x509_ref_version	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn x509_ref_version() {$/;"	f
x509_ref_version_no_version_set	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn x509_ref_version_no_version_set() {$/;"	f
x509_req_builder	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/tests.rs	/^fn x509_req_builder() {$/;"	f
x509v3_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn x509v3_context<'a>($/;"	P	implementation:X509Builder
x509v3_context	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/x509/mod.rs	/^    pub fn x509v3_context<'a>(&'a self, conf: Option<&'a ConfRef>) -> X509v3Context<'a> {$/;"	P	implementation:X509ReqBuilder
yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/lib.rs	/^pub mod yaml;$/;"	n
yaml	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/yaml-rust-0.4.5/src/yaml.rs	/^    yaml: vec::IntoIter<Yaml>,$/;"	m	struct:YamlIter
yaml_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/macros.rs	/^macro_rules! yaml_char {$/;"	M
yaml_opt_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/macros.rs	/^macro_rules! yaml_opt_str {$/;"	M
yaml_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/macros.rs	/^macro_rules! yaml_str {$/;"	M
yaml_to_bool	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/macros.rs	/^macro_rules! yaml_to_bool {$/;"	M
yaml_to_char	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/macros.rs	/^macro_rules! yaml_to_char {$/;"	M
yaml_to_setting	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/macros.rs	/^macro_rules! yaml_to_setting {$/;"	M
yaml_to_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/macros.rs	/^macro_rules! yaml_to_str {$/;"	M
yaml_to_usize	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/macros.rs	/^macro_rules! yaml_to_usize {$/;"	M
yaml_tuple2	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/macros.rs	/^macro_rules! yaml_tuple2 {$/;"	M
yaml_tuple3	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/macros.rs	/^macro_rules! yaml_tuple3 {$/;"	M
yaml_vec	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/macros.rs	/^macro_rules! yaml_vec {$/;"	M
yaml_vec_or_str	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap-3.1.2/src/build/macros.rs	/^macro_rules! yaml_vec_or_str {$/;"	M
yday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/sys/windows.rs	/^    fn yday(year: i32, month: i32, day: i32) -> i32 {$/;"	f	function:system_time_to_tm
yday	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/sys.rs	/^        fn yday(year: i32, month: i32, day: i32) -> i32 {$/;"	f	function:inner::system_time_to_tm
year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/date.rs	/^    fn year(&self) -> i32 {$/;"	P	implementation:Date
year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/datetime.rs	/^    fn year(&self) -> i32 {$/;"	P	implementation:DateTime
year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub year: Option<i32>,$/;"	m	struct:Parsed
year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn year(&self) -> i32;$/;"	P	interface:Datelike
year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    fn year(&self) -> i32 {$/;"	P	implementation:NaiveDate
year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/datetime.rs	/^    fn year(&self) -> i32 {$/;"	P	implementation:NaiveDateTime
year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    pub fn year(&self) -> i32 {$/;"	P	implementation:IsoWeek
year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn year(&self) -> u16 {$/;"	P	implementation:DateTime
year	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    year: u16,$/;"	m	struct:DateTime
year_ce	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/lib.rs	/^    fn year_ce(&self) -> (bool, u32) {$/;"	P	interface:Datelike
year_div_100	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub year_div_100: Option<i32>,$/;"	m	struct:Parsed
year_mod_100	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/format/parsed.rs	/^    pub year_mod_100: Option<i32>,$/;"	m	struct:Parsed
ymd	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn ymd(&self, year: i32, month: u32, day: u32) -> Date<Self> {$/;"	P	interface:TimeZone
ymd_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn ymd_opt(&self, year: i32, month: u32, day: u32) -> LocalResult<Date<Self>> {$/;"	P	interface:TimeZone
ymdf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/date.rs	/^    ymdf: DateImpl, \/\/ (year << 13) | of$/;"	m	struct:NaiveDate
yo	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn yo(&self, year: i32, ordinal: u32) -> Date<Self> {$/;"	P	interface:TimeZone
yo_opt	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/offset/mod.rs	/^    fn yo_opt(&self, year: i32, ordinal: u32) -> LocalResult<Date<Self>> {$/;"	P	interface:TimeZone
yo_to_cycle	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/internals.rs	/^pub fn yo_to_cycle(year_mod_400: u32, ordinal: u32) -> u32 {$/;"	f
ywf	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/naive/isoweek.rs	/^    ywf: DateImpl, \/\/ (year << 10) | (week << 4) | flag$/;"	m	struct:IsoWeek
zero	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.19/src/oldtime.rs	/^    pub fn zero() -> Duration {$/;"	P	implementation:Duration
zero	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.1.44/src/duration.rs	/^    pub fn zero() -> Duration {$/;"	P	implementation:Duration
zero_length_buffers	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/openssl-0.10.38/src/ssl/test/mod.rs	/^fn zero_length_buffers() {$/;"	f
zip64_extension	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/types.rs	/^    pub fn zip64_extension(&self) -> bool {$/;"	P	implementation:ZipFileData
zip64_with_leading_junk	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn zip64_with_leading_junk() {$/;"	f	module:test
zip_clone	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn zip_clone() {$/;"	f	module:test
zip_contents	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn zip_contents() {$/;"	f	module:test
zip_file_comment	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/spec.rs	/^    pub zip_file_comment: Vec<u8>,$/;"	m	struct:CentralDirectoryEnd
zip_read_streaming	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/read.rs	/^    fn zip_read_streaming() {$/;"	f	module:test
zipcrypto	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/zip-0.5.13/src/lib.rs	/^mod zipcrypto;$/;"	n
zsh	/home/annalee/.cargo/registry/src/github.com-1ecc6299db9ec823/clap_complete-3.1.0/src/shells/mod.rs	/^mod zsh;$/;"	n
